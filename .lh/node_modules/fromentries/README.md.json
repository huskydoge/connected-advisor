{
    "sourceFile": "node_modules/fromentries/README.md",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1713791839834,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1713791839834,
            "name": "Commit-0",
            "content": "# fromentries [![travis][travis-image]][travis-url] [![npm][npm-image]][npm-url] [![downloads][downloads-image]][downloads-url] [![javascript style guide][standard-image]][standard-url]\n\n[travis-image]: https://img.shields.io/travis/feross/fromentries/master.svg\n[travis-url]: https://travis-ci.org/feross/fromentries\n[npm-image]: https://img.shields.io/npm/v/fromentries.svg\n[npm-url]: https://npmjs.org/package/fromentries\n[downloads-image]: https://img.shields.io/npm/dm/fromentries.svg\n[downloads-url]: https://npmjs.org/package/fromentries\n[standard-image]: https://img.shields.io/badge/code_style-standard-brightgreen.svg\n[standard-url]: https://standardjs.com\n\n### Object.fromEntries() ponyfill (in 6 lines)\n\n## Install\n\n```\nnpm install fromentries\n```\n\n## Why this package?\n\nExisting polyfill packages (like\n[`object.fromentries`](https://github.com/es-shims/Object.fromEntries))\npull in a bunch of dependencies and **adds over 8\nKB** to the browser bundle size. This allows them to work in ES3 environments\nlike IE6, but it's also overkill; almost no one supports IE6 anymore.\n\nI'd rather not ship tons of extra code to homepage visitors. A polyfill for this\nfeature can be implemented in a few short lines of code using modern language\nfeatures. That's what `fromentries` (this package) does.\n\nThis means that `fromentries` only works in evergreen browsers like:\n\n- Chrome\n- Firefox\n- Edge\n- Safari\n- Opera\n\nIt does not work in browsers like IE11 and older (unless you transpile it first).\n\n## Usage\n\n```js\nconst fromEntries = require('fromentries')\n\nconst map = new Map([ [ 'a', 1 ], [ 'b', 2 ], [ 'c', 3 ] ])\nconst obj = fromEntries(map)\nconstole.log(obj) // { a: 1, b: 2, c: 3 }\n\nconst searchParams = new URLSearchParams('foo=bar&baz=qux')\nconst obj2 = fromEntries(searchParams)\nconsole.log(obj2) // { foo: 'bar', 'baz': 'qux' }\n```\n\n## What is a ponyfill?\n\n> A *ponyfill* is almost the same as a polyfill, but not quite. Instead of\n> patching functionality for older browsers, a ponyfill provides that\n> functionality as a standalone module you can use.\n\nRead more at [PonyFoo](https://ponyfoo.com/articles/polyfills-or-ponyfills).\n\n## See also\n\n- [TC39 proposal for Object.fromEntries](https://github.com/tc39/proposal-object-from-entries)\n\n## License\n\nMIT. Copyright (c) [Feross Aboukhadijeh](http://feross.org).\n"
        }
    ]
}