{
    "sourceFile": "node_modules/polished/README.md",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1713791839832,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1713791839832,
            "name": "Commit-0",
            "content": "<a href=\"https://github.com/styled-components/polished\">\n  <img alt=\"polished\" src=\"https://raw.githubusercontent.com/styled-components/brand/master/polished.png\" height=\"150px\" />\n</a>\n<br />\n\nA lightweight toolset for writing styles in JavaScript. ‚ú®\n\n![Node CI Test](https://github.com/styled-components/polished/workflows/Node%20CI%20Test/badge.svg?branch=main)\n[![codecov](https://codecov.io/gh/styled-components/polished/branch/main/graph/badge.svg)](https://codecov.io/gh/styled-components/polished)\n[![Github All Releases](https://img.shields.io/npm/dm/polished.svg)](https://npmcharts.com/compare/polished)\n\n```sh\nnpm install --save polished\n# or if you're using yarn\nyarn add polished\n```\n\nWant to write styles in JavaScript, but also want Sass-style helper functions and mixins? Need a consistent color palette throughout your app? `‚ú® polished` is for you!\n\n- **Make your app look great without stress**\n- **Cross framework compatible**: No matter if you're using [`styled-components`](https://github.com/styled-components/styled-components), emotion, jss, aphrodite, radium, or plain inline styles, as long as you're writing your styles in JavaScript you can use polished!\n- **Switching from a pre-processor to styles in JS made easy**\n\n## Docs\n\n**See the full documentation at [polished.js.org](http://polished.js.org/docs)!**\n\n## Usage\n\n`‚ú® polished` modules are meant to be used as stand-alone imports. You should avoid importing the entire library directly:\n\n`import { clearFix, animation } from 'polished'`\n~`import * as polished from 'polished`~\n~`import polished from 'polished'`~\n\nWhen `‚ú® polished` modules are imported properly, tree shaking in [webpack](https://webpack.js.org/guides/tree-shaking/) and [Rollup](https://github.com/rollup/rollup#tree-shaking) can be leveraged to reduce your bundle size.\n\n## Browser Support\nAll Evergreen Browsers + IE11\n\nAs of v3.6.X we support `>0.5%, not dead, ie >= 11, not op_mini all` for all our builds.\n\n## Flow Type Definitions\n\n`‚ú® polished` has first-class [Flow](https://flow.org/) support with zero configuration to assist you in finding type errors while using our modules.\n\n### Ignore ‚ú® polished source\n\nFlow frequently updates and it is possible that the version you are running may cause you to run into errors coming from the `polished` package in your `node_modules` directory. You can add the following lines to your `.flowconfig` to ignore `polished` in those cases:\n\n```bash\n[ignore]\n.*/node_modules/polished/.*\n```\n\n## TypeScript Definitions\n\n`‚ú® polished` has [TypeScript](https://www.typescriptlang.org/) definitions to allow the library to be used in any TypeScript project. You will need to set `moduleResolution` to `node` in your `tsconfig.json` in order to use `‚ú® polished` with TypeScript.\n\n### Babel plugin\n\nYou can optionally also use [`babel-plugin-polished`](https://github.com/styled-components/babel-plugin-polished) to compile the static function calls out and remove the (already tiny) runtime performance impact of using `‚ú® polished`.\n\n### Object Spread Properties\n\nIn the documentation you will see examples using [object spread properties](https://github.com/tc39/proposal-object-rest-spread) (`{ ...other }`). To enable this syntax in your project add the [`transform-object-rest-spread` plugin](https://www.npmjs.com/package/babel-plugin-transform-object-rest-spread) (or the [`stage-3` preset](https://babeljs.io/docs/plugins/preset-stage-3/) to enable all stage three features) to your Babel configuration.\n\n## Why?\n\nWhen writing styles in JavaScript, many people need Sass-style helper functions to be productive. `‚ú® polished` brings them to you in a nice, lightweight package tailor-made for styles in JavaScript.\n\nThe main difference with Sass is that it's written in a functional style and all color functions are curried. This means you can compose them together into your own reusable helpers with a `compose` function of your choice:\n\n```JS\nimport { compose } from 'ramda' // Replace with any compose() function of your choice\nimport { lighten, desaturate } from 'polished'\n\n// Create tone() helper\nconst tone = compose(lighten(0.1), desaturate(0.1))\n```\n\n### Why not `package-xyz`?\n\nFirst of all, we didn't find another library that had everything we needed, and we don't care about installing a dozen packages separately.\n\nSpecifically most other packages that provide color functions do so in an object-oriented style, often with a fluent API that's very different from the Sass-style helpers. This means people that aren't very familiar with JavaScript might shy away from using them.\n\n`‚ú® polished` was made as a standard library for everybody, no matter if they know JS inside out or not.\n\n## Compatibility\n\n‚ú® polished is **compatible with any library that accepts styles as JS objects**. This includes, but is by far not limited to, `styled-components`, radium, aphrodite, glamor, glamorous, jss and many more!\n\nNo matter if you're using [inline styles or CSS-in-JS](http://mxstbr.blog/2016/11/inline-styles-vs-css-in-js/), polished is for you.\n\n## Contributors\n\nThis project exists thanks to all the people who contribute. [[Contribute](CONTRIBUTING.md)].\n<a href=\"https://github.com/styled-components/polished/graphs/contributors\"><img src=\"https://opencollective.com/polished/contributors.svg?width=890&button=false\" /></a>\n\n\n## Backers\n\nThank you to all our backers! üôè [[Become a backer](https://opencollective.com/polished#backer)]\n\n<a href=\"https://opencollective.com/polished#backers\" target=\"_blank\"><img src=\"https://opencollective.com/polished/backers.svg?width=890\"></a>\n\n\n## Sponsors\n\nSupport this project by becoming a sponsor. Your logo will show up here with a link to your homepage. [[Become a sponsor](https://opencollective.com/polished#sponsor)]\n\n<a href=\"https://opencollective.com/polished/sponsor/0/homepage\" target=\"_blank\"><img src=\"https://opencollective.com/polished/sponsor/0/avatar.svg\"></a>\n<a href=\"https://opencollective.com/polished/sponsor/1/homepage\" target=\"_blank\"><img src=\"https://opencollective.com/polished/sponsor/1/avatar.svg\"></a>\n<a href=\"https://opencollective.com/polished/sponsor/2/homepage\" target=\"_blank\"><img src=\"https://opencollective.com/polished/sponsor/2/avatar.svg\"></a>\n<a href=\"https://opencollective.com/polished/sponsor/3/homepage\" target=\"_blank\"><img src=\"https://opencollective.com/polished/sponsor/3/avatar.svg\"></a>\n<a href=\"https://opencollective.com/polished/sponsor/4/homepage\" target=\"_blank\"><img src=\"https://opencollective.com/polished/sponsor/4/avatar.svg\"></a>\n<a href=\"https://opencollective.com/polished/sponsor/5/homepage\" target=\"_blank\"><img src=\"https://opencollective.com/polished/sponsor/5/avatar.svg\"></a>\n<a href=\"https://opencollective.com/polished/sponsor/6/homepage\" target=\"_blank\"><img src=\"https://opencollective.com/polished/sponsor/6/avatar.svg\"></a>\n<a href=\"https://opencollective.com/polished/sponsor/7/homepage\" target=\"_blank\"><img src=\"https://opencollective.com/polished/sponsor/7/avatar.svg\"></a>\n<a href=\"https://opencollective.com/polished/sponsor/8/homepage\" target=\"_blank\"><img src=\"https://opencollective.com/polished/sponsor/8/avatar.svg\"></a>\n<a href=\"https://opencollective.com/polished/sponsor/9/homepage\" target=\"_blank\"><img src=\"https://opencollective.com/polished/sponsor/9/avatar.svg\"></a>\n\n\n## License\n\nCopyright ¬© 2016-2021 Brian Hough, Maximilian Stoiber, & Nik Graf. Licensed under the MIT License, see [LICENSE.md](LICENSE.md) for more information!\n\n<img src=\"https://static.scarf.sh/a.png?x-pxid=121e67af-0b5f-4132-a6e7-6ae63ebeedac\" />\n"
        }
    ]
}