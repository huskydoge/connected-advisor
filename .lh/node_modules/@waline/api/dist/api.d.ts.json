{
    "sourceFile": "node_modules/@waline/api/dist/api.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1713791839832,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1713791839832,
            "name": "Commit-0",
            "content": "interface BaseAPIOptions {\n    /**\n     * Waline 服务端地址\n     *\n     * Waline serverURL\n     */\n    serverURL: string;\n    /**\n     * 错误信息所使用的语言\n     *\n     * Language used in error text\n     */\n    lang: string;\n}\ninterface ErrorStatusResponse {\n    /**\n     * 错误代码\n     *\n     * Error number\n     */\n    errno: number;\n    /**\n     * 错误消息\n     *\n     * Error msg\n     */\n    errmsg: string;\n}\n\ninterface GetArticleCounterOptions extends BaseAPIOptions {\n    /**\n     * 待获取计数器的 path\n     *\n     * Path of counters\n     */\n    paths: string[];\n    /**\n     * 待获取计数器的类型\n     *\n     * Counter type to be fetched\n     */\n    type: string[];\n    /**\n     * 取消请求的信号\n     *\n     * AbortSignal to cancel request\n     */\n    signal?: AbortSignal;\n}\ntype GetArticleCounterResponse = Record<string, number>[] | Record<string, number> | number[] | number;\ndeclare const getArticleCounter: ({ serverURL, lang, paths, type, signal, }: GetArticleCounterOptions) => Promise<GetArticleCounterResponse>;\ninterface UpdateArticleCounterOptions extends BaseAPIOptions {\n    /**\n     * 待更新计数器的 path\n     *\n     * Path of counter to be updated\n     */\n    path: string;\n    /**\n     * 待更新计数器的类型\n     *\n     * Counter type to be updated\n     */\n    type: string;\n    /**\n     * 更新操作\n     *\n     * Update operation\n     *\n     * @default 'inc'\n     */\n    action?: 'inc' | 'desc';\n}\ndeclare const updateArticleCounter: ({ serverURL, lang, path, type, action, }: UpdateArticleCounterOptions) => Promise<number[]>;\n\ntype WalineCommentStatus = 'approved' | 'waiting' | 'spam';\ntype WalineUserType = 'administrator' | 'guest';\ninterface WalineCommentData {\n    /**\n     * User Nickname\n     */\n    nick?: string;\n    /**\n     * User email\n     */\n    mail?: string;\n    /**\n     * User link\n     */\n    link?: string;\n    /**\n     * Content of comment\n     */\n    comment: string;\n    /**\n     * User Agent\n     */\n    ua: string;\n    /**\n     * Comment page path\n     */\n    url: string;\n    /**\n     * Parent comment id\n     *\n     * @description Only available when replying comment\n     */\n    pid?: string;\n    /**\n     * Root comment id\n     *\n     * @description Only available when replying comment\n     */\n    rid?: string;\n    /**\n     * User id being at\n     *\n     * @description Only available when replying comment\n     */\n    at?: string;\n    /**\n     * Recaptcha Token\n     */\n    recaptchaV3?: string;\n    /**\n     * Turnstile Token\n     */\n    turnstile?: string;\n}\ninterface BaseWalineResponseComment {\n    /**\n     * Comment object ID\n     */\n    objectId: string;\n    /**\n     * Timestamp of the comment\n     */\n    time: number;\n    /**\n     * Content of comment\n     */\n    comment: string;\n    /**\n     * Original comment content\n     *\n     * 原始评论内容\n     */\n    orig: string;\n    /**\n     * Comment like number\n     *\n     * 评论喜欢数\n     */\n    like: number;\n    /**\n     * User Nickname\n     */\n    nick: string;\n    /**\n     * User link\n     */\n    link: string;\n    /**\n     * User avatar\n     */\n    avatar: string;\n    /**\n     * User type\n     *\n     * @description Only available with logged in user\n     *\n     * 用户类型\n     *\n     * @description 仅在登录用户时可用\n     */\n    type?: WalineUserType;\n    /**\n     * User ID\n     *\n     * @description Only available with logged in user\n     *\n     * 用户 ID\n     *\n     * @description 仅在登录用户时可用\n     */\n    user_id?: string;\n    /**\n     * User location\n     *\n     * @description Not available with `DISABLE_REGION=true`\n     *\n     * 用户位置\n     *\n     * @description `DISABLE_REGION=true` 时不可用\n     */\n    addr?: string;\n    /**\n     * User browser\n     *\n     * @description Not available with `DISABLE_USERAGENT=true`\n     *\n     * 用户浏览器\n     *\n     * @description `DISABLE_USERAGENT=true` 时不可用\n     */\n    browser?: string;\n    /**\n     * User location\n     *\n     * @description Not available with `DISABLE_USERAGENT=true`\n     *\n     * 用户位置\n     *\n     * @description `DISABLE_USERAGENT=true` 时不可用\n     */\n    os?: string;\n    /**\n     * User level\n     *\n     * @description Only available when `LEVELS` is set\n     *\n     * 用户等级\n     *\n     * @description 仅在 `LEVELS` 设置时可用\n     */\n    level?: number;\n    /**\n     * User label\n     *\n     * 用户标签\n     */\n    label?: string;\n    /**\n     * Comment status\n     *\n     * @description For administrators, `approved` `spam` `waiting` can be get, for others, the only value is `approved`\n     *\n     * 评论状态\n     *\n     * @description 管理员可获得 `approved`、`spam` 和 `waiting`，其他用户只能获得 `approved`\n     */\n    status?: WalineCommentStatus;\n}\ninterface WalineChildComment extends BaseWalineResponseComment {\n    /**\n     * Parent comment id\n     */\n    pid: string;\n    /**\n     * Root comment id\n     */\n    rid: string;\n    /**\n     * User id being at\n     */\n    at?: string;\n}\ninterface WalineRootComment extends BaseWalineResponseComment {\n    /**\n     * Whether the comment is sticky\n     *\n     * 是否置顶\n     */\n    sticky: boolean;\n    /**\n     * Child comments\n     *\n     * 子评论\n     */\n    children: WalineChildComment[];\n}\ntype WalineComment = WalineRootComment | WalineChildComment;\n\ninterface GetCommentOptions extends BaseAPIOptions {\n    /**\n     * 待获取评论列表的 path\n     *\n     * Path of comment list\n     */\n    path: string;\n    /**\n     * 评论分页数\n     *\n     * Comment pagination number\n     */\n    page: number;\n    /**\n     * 每页评论个数\n     *\n     * Comment number per page\n     */\n    pageSize: number;\n    /**\n     * 排序方式\n     *\n     * Sort method\n     */\n    sortBy: string;\n    /**\n     * 用户令牌\n     *\n     * User token\n     */\n    token?: string;\n    /**\n     * 取消请求的信号\n     *\n     * AbortSignal to cancel request\n     */\n    signal?: AbortSignal;\n}\ninterface GetCommentResponse {\n    /**\n     * 评论数量\n     *\n     * Comment number\n     */\n    count: number;\n    /**\n     * 评论分页数\n     *\n     * Comment pagination number\n     */\n    page: number;\n    /**\n     * 每页评论个数\n     *\n     * Comment number per page\n     */\n    pageSize: number;\n    /**\n     * 评论数据\n     *\n     * Comment Data\n     */\n    data: WalineRootComment[];\n    /**\n     * 页面总数\n     *\n     * Page number\n     */\n    totalPages: number;\n}\ndeclare const getComment: ({ serverURL, lang, path, page, pageSize, sortBy, signal, token, }: GetCommentOptions) => Promise<GetCommentResponse>;\ninterface AddCommentOptions extends BaseAPIOptions {\n    /**\n     * 用户令牌\n     *\n     * User token\n     */\n    token?: string;\n    /**\n     * 用户待提交的评论数据\n     *\n     * Comment data being submitted by user\n     */\n    comment: WalineCommentData;\n}\ninterface AddCommentResponse extends ErrorStatusResponse {\n    /**\n     * 渲染好的评论数据\n     *\n     * Comment data rendered\n     */\n    data?: WalineComment;\n}\ndeclare const addComment: ({ serverURL, lang, token, comment, }: AddCommentOptions) => Promise<AddCommentResponse>;\ninterface DeleteCommentOptions extends BaseAPIOptions {\n    /**\n     * Auth token\n     *\n     * 认证令牌\n     */\n    token: string;\n    /**\n     * Comment objectId to be deleted\n     *\n     * 待删除的评论对象 ID\n     */\n    objectId: string | number;\n}\ninterface DeleteCommentResponse extends ErrorStatusResponse {\n    data: '';\n}\ndeclare const deleteComment: ({ serverURL, lang, token, objectId, }: DeleteCommentOptions) => Promise<DeleteCommentResponse>;\ninterface UpdateWalineCommentData extends Partial<WalineCommentData> {\n    /**\n     * 点赞还是取消点赞\n     *\n     * Like or dislike\n     */\n    like?: boolean;\n    /**\n     * 评论的状态\n     *\n     * Comment status\n     */\n    status?: 'approved' | 'waiting' | 'spam';\n    /**\n     * 评论指定状态\n     *\n     * Comment sticky status\n     *\n     * @description 0 means not sticky and 1 means sticky\n     */\n    sticky?: 0 | 1;\n}\ninterface UpdateCommentOptions extends BaseAPIOptions {\n    /**\n     * 用户令牌\n     *\n     * User token\n     */\n    token: string;\n    /**\n     * 评论的 ID\n     *\n     * Comment ID\n     */\n    objectId: number | string;\n    /**\n     * 评论数据\n     *\n     * Comment data\n     */\n    comment?: UpdateWalineCommentData;\n}\ninterface UpdateCommentResponse extends ErrorStatusResponse {\n    /**\n     * 更新后的评论数据\n     *\n     * Comment data rendered\n     */\n    data: WalineComment;\n}\ndeclare const updateComment: ({ serverURL, lang, token, objectId, comment, }: UpdateCommentOptions) => Promise<UpdateCommentResponse>;\n\ninterface GetCommentCountOptions extends BaseAPIOptions {\n    /**\n     * 待获取评论数的 path\n     *\n     * Path of pages to be fetched\n     */\n    paths: string[];\n    /**\n     * 取消请求的信号\n     *\n     * AbortSignal to cancel request\n     */\n    signal?: AbortSignal;\n}\ndeclare const fetchCommentCount: ({ serverURL, lang, paths, signal, }: GetCommentCountOptions) => Promise<number[]>;\n\ninterface UserInfo {\n    /**\n     * 显示姓名\n     *\n     * User name displayed\n     */\n    display_name: string;\n    /**\n     * 用户电子邮件地址\n     *\n     * User email\n     */\n    email: string;\n    /**\n     * 用户网站地址\n     *\n     * User homepage\n     */\n    url: string;\n    /**\n     * 用户令牌\n     *\n     * User token\n     */\n    token: string;\n    /**\n     * 用户头像\n     *\n     * User avatar\n     */\n    avatar: string;\n    /**\n     * 用户邮箱 MD5\n     *\n     * MD5 of User email\n     */\n    mailMd5: string;\n    /**\n     * 用户对象 ID\n     *\n     * User object ID\n     */\n    objectId: string | number;\n    /**\n     * 用户身份\n     *\n     * User role\n     */\n    type: 'administrator' | 'guest';\n}\ndeclare const login: ({ lang, serverURL, }: BaseAPIOptions) => Promise<UserInfo & {\n    remember: boolean;\n}>;\n\ninterface GetPageviewOptions extends BaseAPIOptions {\n    /**\n     * 待获取页面的 path\n     *\n     * Path of pages\n     */\n    paths: string[];\n    /**\n     * 取消请求的信号\n     *\n     * AbortSignal to cancel request\n     */\n    signal?: AbortSignal;\n}\ndeclare const getPageview: ({ serverURL, lang, paths, signal, }: GetPageviewOptions) => Promise<number[]>;\ninterface UpdatePageviewOptions extends BaseAPIOptions {\n    /**\n     * 待更新页面的 path\n     *\n     * Path of pages\n     */\n    path: string;\n}\ndeclare const updatePageview: (options: UpdatePageviewOptions) => Promise<number[]>;\n\ninterface GetRecentCommentOptions extends BaseAPIOptions {\n    /**\n     * 获取评论的数量\n     *\n     * Comment number to be fetched\n     */\n    count: number;\n    /**\n     * 取消请求的信号\n     *\n     * AbortSignal to cancel request\n     */\n    signal?: AbortSignal;\n    /**\n     * 用户令牌\n     *\n     * User token\n     */\n    token?: string;\n}\ninterface RecentCommentData extends BaseWalineResponseComment {\n    /**\n     * Page url where comment locales\n     *\n     * 评论所在页面地址\n     */\n    url: string;\n}\ndeclare const getRecentComment: ({ serverURL, lang, count, signal, token, }: GetRecentCommentOptions) => Promise<RecentCommentData[]>;\n\ninterface GetUserListOptions extends BaseAPIOptions {\n    /**\n     * 每页个数\n     *\n     * Number per page\n     */\n    pageSize: number;\n    /**\n     * 取消请求的信号\n     *\n     * AbortSignal to cancel request\n     */\n    signal?: AbortSignal;\n}\ninterface WalineUser extends Pick<WalineComment, 'nick' | 'link' | 'avatar' | 'label' | 'level'> {\n    count: number;\n}\ninterface GetUserListResponse extends ErrorStatusResponse {\n    data: WalineUser[];\n}\ndeclare const getUserList: ({ serverURL, signal, pageSize, lang, }: GetUserListOptions) => Promise<WalineUser[]>;\n\nexport { type AddCommentOptions, type AddCommentResponse, type BaseWalineResponseComment, type DeleteCommentOptions, type DeleteCommentResponse, type GetArticleCounterOptions, type GetArticleCounterResponse, type GetCommentCountOptions, type GetCommentOptions, type GetCommentResponse, type GetRecentCommentOptions, type GetUserListOptions, type GetUserListResponse, type RecentCommentData, type UpdateArticleCounterOptions, type UpdateCommentOptions, type UpdateCommentResponse, type UpdatePageviewOptions, type UserInfo, type WalineChildComment, type WalineComment, type WalineCommentData, type WalineCommentStatus, type WalineRootComment, type WalineUser, type WalineUserType, addComment, deleteComment, fetchCommentCount, getArticleCounter, getComment, getPageview, getRecentComment, getUserList, login, updateArticleCounter, updateComment, updatePageview };\n"
        }
    ]
}