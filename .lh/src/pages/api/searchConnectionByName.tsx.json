{
    "sourceFile": "src/pages/api/searchConnectionByName.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1715486549845,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1715486571860,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,8 +27,10 @@\n \n   const id1,\n     id2 = req.body;\n \n+  // find the connection that has the two ids\n+\n   if (!conn_id) {\n     res.status(400).json({ message: \"Missing required parameters\" });\n     return;\n   }\n"
                },
                {
                    "date": 1715486578739,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,9 @@\n \n   const id1,\n     id2 = req.body;\n \n-  // find the connection that has the two ids\n+  // TODO: find the connection that has the two ids\n \n   if (!conn_id) {\n     res.status(400).json({ message: \"Missing required parameters\" });\n     return;\n"
                }
            ],
            "date": 1715486549845,
            "name": "Commit-0",
            "content": "import { MongoClient, ObjectId } from \"mongodb\";\n\n// MongoDB URL and database name\nconst MONGO_URL = process.env.MONGO_URL;\nconst DB_NAME = \"ConnectedAdvisor\";\nconst COLLECTION_NAME = \"connections\";\n\nasync function connectToDatabase() {\n  const client = new MongoClient(MONGO_URL);\n  await client.connect();\n  const db = client.db(DB_NAME);\n  return { db, client };\n}\n\nexport default async function handler(req, res) {\n  res.setHeader(\"Access-Control-Allow-Origin\", \"*\");\n  res.setHeader(\"Access-Control-Allow-Methods\", \"POST, GET, OPTIONS\");\n  res.setHeader(\"Access-Control-Allow-Headers\", \"Content-Type\");\n\n  if (req.method !== \"POST\") {\n    res.setHeader(\"Allow\", [\"POST\"]);\n    res.status(405).end(`Method ${req.method} Not Allowed`);\n    return;\n  }\n\n  console.log(\"Received request from searchConnection:\", req.method, req.body);\n\n  const id1, id2 = req.body;\n\n  if (!conn_id) {\n    res.status(400).json({ message: \"Missing required parameters\" });\n    return;\n  }\n\n  try {\n    const { db, client } = await connectToDatabase();\n\n    const results = await db\n      .collection(COLLECTION_NAME)\n      .find({ _id: new ObjectId(conn_id) })\n      .toArray();\n\n    if (results.length > 0) {\n      res.status(200).json(results);\n    } else {\n      res.status(404).json({ message: \"No matching connections found\" });\n    }\n\n    client.close();\n  } catch (error) {\n    console.error(error);\n    res.status(500).json({ message: \"Internal Server Error\" });\n  }\n}\n"
        }
    ]
}