{
    "sourceFile": "src/pages/api/searchPaper.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 8,
            "patches": [
                {
                    "date": 1711782104837,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1711851281675,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import { MongoClient } from \"mongodb\";\n+import { MongoClient, ObjectId } from \"mongodb\";\n \n // MongoDB URL and database name\n const MONGO_URL = process.env.MONGO_URL;\n const DB_NAME = \"ConnectedAdvisor\";\n"
                },
                {
                    "date": 1711851359938,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,7 +56,6 @@\n \n     client.close();\n   } catch (error) {\n     console.error(error);\n-    res.status(500).json({ message: \"Internal Server Error\" });\n   }\n }\n"
                },
                {
                    "date": 1711851429806,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,8 +24,12 @@\n   }\n \n   const { oid, name } = req.body;\n \n+  console.log(\"In searchPaper.tsx\");\n+  console.log(\"oid\", oid);\n+  console.log(\"name\", name);\n+\n   if (!oid && !name) {\n     res.status(400).json({ message: \"Missing query parameters\" });\n     return;\n   }\n"
                },
                {
                    "date": 1711851457785,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,11 +24,9 @@\n   }\n \n   const { oid, name } = req.body;\n \n-  console.log(\"In searchPaper.tsx\");\n-  console.log(\"oid\", oid);\n-  console.log(\"name\", name);\n+  console.log(\"In searchPaper.tsx\", \"oid\", oid, \"name\", name);\n \n   if (!oid && !name) {\n     res.status(400).json({ message: \"Missing query parameters\" });\n     return;\n"
                },
                {
                    "date": 1711853941971,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,9 +38,9 @@\n     let result;\n     if (oid) {\n       result = await db\n         .collection(COLLECTION_NAME)\n-        .findOne({ _id: new ObjectId(oid) });\n+        .find({ _id: new ObjectId(oid) });\n     } else if (name) {\n       // 使用正则表达式实现模糊搜索\n       result = await db\n         .collection(COLLECTION_NAME)\n"
                },
                {
                    "date": 1711853948822,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,9 +38,10 @@\n     let result;\n     if (oid) {\n       result = await db\n         .collection(COLLECTION_NAME)\n-        .find({ _id: new ObjectId(oid) });\n+        .find({ _id: new ObjectId(oid) })\n+        .toArray;\n     } else if (name) {\n       // 使用正则表达式实现模糊搜索\n       result = await db\n         .collection(COLLECTION_NAME)\n"
                },
                {
                    "date": 1711853955431,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,9 +38,9 @@\n     let result;\n     if (oid) {\n       result = await db\n         .collection(COLLECTION_NAME)\n-        .find({ _id: new ObjectId(oid) }).toArray;\n+        .find({ _id: new ObjectId(oid) }).toArray();\n     } else if (name) {\n       // 使用正则表达式实现模糊搜索\n       result = await db\n         .collection(COLLECTION_NAME)\n"
                },
                {
                    "date": 1713764284766,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n \n // MongoDB URL and database name\n const MONGO_URL = process.env.MONGO_URL;\n const DB_NAME = \"ConnectedAdvisor\";\n-const COLLECTION_NAME = \"papers\";\n+const COLLECTION_NAME = \"tmp-papers\";\n \n async function connectToDatabase() {\n   const client = new MongoClient(MONGO_URL);\n   await client.connect();\n"
                }
            ],
            "date": 1711782104837,
            "name": "Commit-0",
            "content": "import { MongoClient } from \"mongodb\";\n\n// MongoDB URL and database name\nconst MONGO_URL = process.env.MONGO_URL;\nconst DB_NAME = \"ConnectedAdvisor\";\nconst COLLECTION_NAME = \"papers\";\n\nasync function connectToDatabase() {\n  const client = new MongoClient(MONGO_URL);\n  await client.connect();\n  const db = client.db(DB_NAME);\n  return { db, client };\n}\n\nexport default async function handler(req, res) {\n  res.setHeader(\"Access-Control-Allow-Origin\", \"*\");\n  res.setHeader(\"Access-Control-Allow-Methods\", \"POST, GET, OPTIONS\");\n  res.setHeader(\"Access-Control-Allow-Headers\", \"Content-Type\");\n\n  if (req.method !== \"POST\") {\n    res.setHeader(\"Allow\", [\"POST\"]);\n    res.status(405).end(`Method ${req.method} Not Allowed`);\n    return;\n  }\n\n  const { oid, name } = req.body;\n\n  if (!oid && !name) {\n    res.status(400).json({ message: \"Missing query parameters\" });\n    return;\n  }\n\n  try {\n    const { db, client } = await connectToDatabase();\n\n    let result;\n    if (oid) {\n      result = await db\n        .collection(COLLECTION_NAME)\n        .findOne({ _id: new ObjectId(oid) });\n    } else if (name) {\n      // 使用正则表达式实现模糊搜索\n      result = await db\n        .collection(COLLECTION_NAME)\n        .find({\n          name: { $regex: new RegExp(name, \"i\") },\n        })\n        .toArray();\n    }\n\n    if (result && result.length > 0) {\n      res.status(200).json(result);\n    } else {\n      res.status(404).json({ message: \"No matching document found\" });\n    }\n\n    client.close();\n  } catch (error) {\n    console.error(error);\n    res.status(500).json({ message: \"Internal Server Error\" });\n  }\n}\n"
        }
    ]
}