{
    "sourceFile": "src/pages/api/searchAdvisor.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 4,
            "patches": [
                {
                    "date": 1711813322121,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1711813888452,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,8 +24,11 @@\n   }\n \n   const { oid, name } = req.body;\n \n+  console.log(\"oid\", oid);\n+  console.log(\"name\", name);\n+\n   if (!oid && !name) {\n     res.status(400).json({ message: \"Missing query parameters\" });\n     return;\n   }\n"
                },
                {
                    "date": 1711813926158,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,9 +39,9 @@\n     let result;\n     if (oid) {\n       result = await db\n         .collection(COLLECTION_NAME)\n-        .findOne({ _id: new ObjectId(oid) });\n+        .findOne({ _id: oid });\n     } else if (name) {\n       // 使用正则表达式实现模糊搜索\n       result = await db\n         .collection(COLLECTION_NAME)\n"
                },
                {
                    "date": 1711814052928,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,9 +37,11 @@\n     const { db, client } = await connectToDatabase();\n \n     let result;\n     if (oid) {\n-      result = await db.collection(COLLECTION_NAME).findOne({ _id: oid });\n+      result = await db\n+        .collection(COLLECTION_NAME)\n+        .findOne({ _id: new ObjectId(oid) });\n     } else if (name) {\n       // 使用正则表达式实现模糊搜索\n       result = await db\n         .collection(COLLECTION_NAME)\n"
                },
                {
                    "date": 1711814104660,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import { MongoClient, ObjectId } from \"mongodb\";\n+import { MongoClient, ObjectId } from \"mongodb\";  // 导入 ObjectId\n \n // MongoDB URL and database name\n const MONGO_URL = process.env.MONGO_URL;\n const DB_NAME = \"ConnectedAdvisor\";\n@@ -37,11 +37,10 @@\n     const { db, client } = await connectToDatabase();\n \n     let result;\n     if (oid) {\n-      result = await db\n-        .collection(COLLECTION_NAME)\n-        .findOne({ _id: new ObjectId(oid) });\n+      // 转换 oid 为 ObjectId 对象\n+      result = await db.collection(COLLECTION_NAME).findOne({ _id: new ObjectId(oid) });\n     } else if (name) {\n       // 使用正则表达式实现模糊搜索\n       result = await db\n         .collection(COLLECTION_NAME)\n@@ -50,16 +49,16 @@\n         })\n         .toArray();\n     }\n \n-    if (result && result.length > 0) {\n+    if (result) {\n       res.status(200).json(result);\n     } else {\n       res.status(404).json({ message: \"No matching document found\" });\n     }\n \n     client.close();\n   } catch (error) {\n     console.error(error);\n-    // res.status(500).json({ message: \"Internal Server Error\" });\n+    res.status(500).json({ message: \"Internal Server Error\" });\n   }\n }\n"
                }
            ],
            "date": 1711813322121,
            "name": "Commit-0",
            "content": "import { MongoClient } from \"mongodb\";\n\n// MongoDB URL and database name\nconst MONGO_URL = process.env.MONGO_URL;\nconst DB_NAME = \"ConnectedAdvisor\";\nconst COLLECTION_NAME = \"AdvisorTable\";\n\nasync function connectToDatabase() {\n  const client = new MongoClient(MONGO_URL);\n  await client.connect();\n  const db = client.db(DB_NAME);\n  return { db, client };\n}\n\nexport default async function handler(req, res) {\n  res.setHeader(\"Access-Control-Allow-Origin\", \"*\");\n  res.setHeader(\"Access-Control-Allow-Methods\", \"POST, GET, OPTIONS\");\n  res.setHeader(\"Access-Control-Allow-Headers\", \"Content-Type\");\n\n  if (req.method !== \"POST\") {\n    res.setHeader(\"Allow\", [\"POST\"]);\n    res.status(405).end(`Method ${req.method} Not Allowed`);\n    return;\n  }\n\n  const { oid, name } = req.body;\n\n  if (!oid && !name) {\n    res.status(400).json({ message: \"Missing query parameters\" });\n    return;\n  }\n\n  try {\n    const { db, client } = await connectToDatabase();\n\n    let result;\n    if (oid) {\n      result = await db\n        .collection(COLLECTION_NAME)\n        .findOne({ _id: new ObjectId(oid) });\n    } else if (name) {\n      // 使用正则表达式实现模糊搜索\n      result = await db\n        .collection(COLLECTION_NAME)\n        .find({\n          name: { $regex: new RegExp(name, \"i\") },\n        })\n        .toArray();\n    }\n\n    if (result && result.length > 0) {\n      res.status(200).json(result);\n    } else {\n      res.status(404).json({ message: \"No matching document found\" });\n    }\n\n    client.close();\n  } catch (error) {\n    console.error(error);\n    // res.status(500).json({ message: \"Internal Server Error\" });\n  }\n}\n"
        }
    ]
}