{
    "sourceFile": "src/pages/api/searchRelation.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1711802660572,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1711802667528,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n \n // MongoDB URL and database name\n const MONGO_URL = process.env.MONGO_URL;\n const DB_NAME = \"ConnectedAdvisor\";\n-const COLLECTION_NAME = \"papers\";\n+const COLLECTION_NAME = \"relations\";\n \n async function connectToDatabase() {\n   const client = new MongoClient(MONGO_URL);\n   await client.connect();\n"
                },
                {
                    "date": 1711805759610,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,10 @@\n-import { MongoClient } from \"mongodb\";\n+import { MongoClient, ObjectId } from \"mongodb\";\n \n // MongoDB URL and database name\n const MONGO_URL = process.env.MONGO_URL;\n const DB_NAME = \"ConnectedAdvisor\";\n-const COLLECTION_NAME = \"relations\";\n+const COLLECTION_NAME = \"connections\";\n \n async function connectToDatabase() {\n   const client = new MongoClient(MONGO_URL);\n   await client.connect();\n@@ -22,37 +22,35 @@\n     res.status(405).end(`Method ${req.method} Not Allowed`);\n     return;\n   }\n \n-  const { oid, name } = req.body;\n+  console.log(\"Received request:\", req.method, req.body);\n \n-  if (!oid && !name) {\n-    res.status(400).json({ message: \"Missing query parameters\" });\n+  const id_1 = req.body[\"id-1\"];\n+  const id_2 = req.body[\"id-2\"];\n+\n+  if (!id_1 || !id_2) {\n+    res.status(400).json({ message: \"Missing required parameters\" });\n     return;\n   }\n \n   try {\n     const { db, client } = await connectToDatabase();\n \n-    let result;\n-    if (oid) {\n-      result = await db\n-        .collection(COLLECTION_NAME)\n-        .findOne({ _id: new ObjectId(oid) });\n-    } else if (name) {\n-      // 使用正则表达式实现模糊搜索\n-      result = await db\n-        .collection(COLLECTION_NAME)\n-        .find({\n-          name: { $regex: new RegExp(name, \"i\") },\n-        })\n-        .toArray();\n-    }\n+    const results = await db\n+      .collection(COLLECTION_NAME)\n+      .find({\n+        $or: [\n+          { \"id-1\": id_1, \"id-2\": id_2 },\n+          { \"id-1\": id_2, \"id-2\": id_1 },\n+        ],\n+      })\n+      .toArray();\n \n-    if (result && result.length > 0) {\n-      res.status(200).json(result);\n+    if (results.length > 0) {\n+      res.status(200).json(results);\n     } else {\n-      res.status(404).json({ message: \"No matching document found\" });\n+      res.status(404).json({ message: \"No matching connections found\" });\n     }\n \n     client.close();\n   } catch (error) {\n"
                },
                {
                    "date": 1711806879682,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n \n // MongoDB URL and database name\n const MONGO_URL = process.env.MONGO_URL;\n const DB_NAME = \"ConnectedAdvisor\";\n-const COLLECTION_NAME = \"connections\";\n+const COLLECTION_NAME = \"relations\";\n \n async function connectToDatabase() {\n   const client = new MongoClient(MONGO_URL);\n   await client.connect();\n"
                }
            ],
            "date": 1711802660572,
            "name": "Commit-0",
            "content": "import { MongoClient } from \"mongodb\";\n\n// MongoDB URL and database name\nconst MONGO_URL = process.env.MONGO_URL;\nconst DB_NAME = \"ConnectedAdvisor\";\nconst COLLECTION_NAME = \"papers\";\n\nasync function connectToDatabase() {\n  const client = new MongoClient(MONGO_URL);\n  await client.connect();\n  const db = client.db(DB_NAME);\n  return { db, client };\n}\n\nexport default async function handler(req, res) {\n  res.setHeader(\"Access-Control-Allow-Origin\", \"*\");\n  res.setHeader(\"Access-Control-Allow-Methods\", \"POST, GET, OPTIONS\");\n  res.setHeader(\"Access-Control-Allow-Headers\", \"Content-Type\");\n\n  if (req.method !== \"POST\") {\n    res.setHeader(\"Allow\", [\"POST\"]);\n    res.status(405).end(`Method ${req.method} Not Allowed`);\n    return;\n  }\n\n  const { oid, name } = req.body;\n\n  if (!oid && !name) {\n    res.status(400).json({ message: \"Missing query parameters\" });\n    return;\n  }\n\n  try {\n    const { db, client } = await connectToDatabase();\n\n    let result;\n    if (oid) {\n      result = await db\n        .collection(COLLECTION_NAME)\n        .findOne({ _id: new ObjectId(oid) });\n    } else if (name) {\n      // 使用正则表达式实现模糊搜索\n      result = await db\n        .collection(COLLECTION_NAME)\n        .find({\n          name: { $regex: new RegExp(name, \"i\") },\n        })\n        .toArray();\n    }\n\n    if (result && result.length > 0) {\n      res.status(200).json(result);\n    } else {\n      res.status(404).json({ message: \"No matching document found\" });\n    }\n\n    client.close();\n  } catch (error) {\n    console.error(error);\n    res.status(500).json({ message: \"Internal Server Error\" });\n  }\n}\n"
        }
    ]
}