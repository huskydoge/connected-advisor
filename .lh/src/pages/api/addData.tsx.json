{
    "sourceFile": "src/pages/api/addData.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 7,
            "patches": [
                {
                    "date": 1711641236044,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1711641428696,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n /*\n  * @Author: huskydoge hbh001098hbh@sjtu.edu.cn\n  * @Date: 2024-03-28 21:32:44\n  * @LastEditors: huskydoge hbh001098hbh@sjtu.edu.cn\n- * @LastEditTime: 2024-03-28 23:48:55\n+ * @LastEditTime: 2024-03-28 23:57:08\n  * @FilePath: /connected-advisor/src/data/mongodb_client.tsx\n  * @Description: 这是默认设置,请设置`customMade`, 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE\n  */\n \n@@ -23,24 +23,23 @@\n   return client.db(DB_NAME);\n }\n \n // API handler function\n-export default async function handler(\n-  req: NextApiRequest,\n-  res: NextApiResponse\n-) {\n+export default async function handler(req: NextApiRequest, res: NextApiResponse) {\n+  console.log('Received request:', req.method, req.body);\n   if (req.method === \"POST\") {\n     try {\n       const db = await connectToDatabase();\n+      console.log('Database connected');\n       const collection = db.collection(\"AdvisorTable\");\n       const result = await collection.insertOne(req.body);\n+      console.log('Document inserted', result);\n       res.status(200).json(result);\n     } catch (error) {\n-      res\n-        .status(500)\n-        .json({ error: \"Unable to connect to the database or insert data\" });\n+      console.error('Error occurred:', error);\n+      res.status(500).json({ error: \"Unable to connect to the database or insert data\" });\n     }\n   } else {\n     res.setHeader(\"Allow\", [\"POST\"]);\n     res.status(405).end(`Method ${req.method} Not Allowed`);\n   }\n-}\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1711642352896,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n /*\n  * @Author: huskydoge hbh001098hbh@sjtu.edu.cn\n  * @Date: 2024-03-28 21:32:44\n  * @LastEditors: huskydoge hbh001098hbh@sjtu.edu.cn\n- * @LastEditTime: 2024-03-28 23:57:08\n+ * @LastEditTime: 2024-03-29 00:12:32\n  * @FilePath: /connected-advisor/src/data/mongodb_client.tsx\n  * @Description: 这是默认设置,请设置`customMade`, 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE\n  */\n \n@@ -13,9 +13,9 @@\n import { MongoClient } from \"mongodb\";\n \n // MongoDB URL and database name\n const MONGO_URL = \"mongodb://localhost:27017/\";\n-const DB_NAME = \"Connected-Advisors\";\n+const DB_NAME = \"ConnectedAdvisors\";\n \n // Function to connect to the database\n async function connectToDatabase() {\n   const client = new MongoClient(MONGO_URL);\n"
                },
                {
                    "date": 1711642466019,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n /*\n  * @Author: huskydoge hbh001098hbh@sjtu.edu.cn\n  * @Date: 2024-03-28 21:32:44\n  * @LastEditors: huskydoge hbh001098hbh@sjtu.edu.cn\n- * @LastEditTime: 2024-03-29 00:12:32\n+ * @LastEditTime: 2024-03-29 00:14:26\n  * @FilePath: /connected-advisor/src/data/mongodb_client.tsx\n  * @Description: 这是默认设置,请设置`customMade`, 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE\n  */\n \n@@ -12,9 +12,9 @@\n import type { NextApiRequest, NextApiResponse } from \"next\";\n import { MongoClient } from \"mongodb\";\n \n // MongoDB URL and database name\n-const MONGO_URL = \"mongodb://localhost:27017/\";\n+const MONGO_URL = process.env.MONGO_URL; // Use the environment variable\n const DB_NAME = \"ConnectedAdvisors\";\n \n // Function to connect to the database\n async function connectToDatabase() {\n"
                },
                {
                    "date": 1711642482952,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,23 +23,28 @@\n   return client.db(DB_NAME);\n }\n \n // API handler function\n-export default async function handler(req: NextApiRequest, res: NextApiResponse) {\n-  console.log('Received request:', req.method, req.body);\n+export default async function handler(\n+  req: NextApiRequest,\n+  res: NextApiResponse\n+) {\n+  console.log(\"Received request:\", req.method, req.body);\n   if (req.method === \"POST\") {\n     try {\n       const db = await connectToDatabase();\n-      console.log('Database connected');\n+      console.log(\"Database connected\");\n       const collection = db.collection(\"AdvisorTable\");\n       const result = await collection.insertOne(req.body);\n-      console.log('Document inserted', result);\n+      console.log(\"Document inserted\", result);\n       res.status(200).json(result);\n     } catch (error) {\n-      console.error('Error occurred:', error);\n\\ No newline at end of file\n-      res.status(500).json({ error: \"Unable to connect to the database or insert data\" });\n+      console.error(\"Error occurred:\", error);\n+      res\n+        .status(500)\n+        .json({ error: \"Unable to connect to the database or insert data\" });\n     }\n   } else {\n     res.setHeader(\"Allow\", [\"POST\"]);\n     res.status(405).end(`Method ${req.method} Not Allowed`);\n   }\n-}\n+}\n"
                },
                {
                    "date": 1711727263427,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,28 +23,28 @@\n   return client.db(DB_NAME);\n }\n \n // API handler function\n-export default async function handler(\n-  req: NextApiRequest,\n-  res: NextApiResponse\n-) {\n-  console.log(\"Received request:\", req.method, req.body);\n-  if (req.method === \"POST\") {\n-    try {\n-      const db = await connectToDatabase();\n-      console.log(\"Database connected\");\n-      const collection = db.collection(\"AdvisorTable\");\n-      const result = await collection.insertOne(req.body);\n-      console.log(\"Document inserted\", result);\n-      res.status(200).json(result);\n-    } catch (error) {\n-      console.error(\"Error occurred:\", error);\n-      res\n-        .status(500)\n-        .json({ error: \"Unable to connect to the database or insert data\" });\n-    }\n+export default async function handler(req: NextApiRequest, res: NextApiResponse) {\n+  if (req.method === 'POST') {\n+      const data = req.body;\n+\n+      // 这里是数据处理逻辑\n+      // 例如，将数据保存到数据库\n+\n+      // 进行数据的重新格式化\n+      const formattedData = {\n+          ...data,\n+          'google-scholar': data.publications.googleScholar,\n+          'dblp': data.publications.dblp,\n+          'research-gate': data.publications.researchGate,\n+          'semantic-scholar': data.publications.semanticScholar\n+      };\n+\n+      // 假设保存成功后返回响应\n+      res.status(200).json({ message: 'Data added successfully', addedData: formattedData });\n   } else {\n-    res.setHeader(\"Allow\", [\"POST\"]);\n-    res.status(405).end(`Method ${req.method} Not Allowed`);\n+      // 如果不是 POST 请求，则返回错误\n+      res.setHeader('Allow', ['POST']);\n+      res.status(405).end(`Method ${req.method} Not Allowed`);\n   }\n }\n"
                },
                {
                    "date": 1711727636572,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,29 +27,26 @@\n export default async function handler(\n   req: NextApiRequest,\n   res: NextApiResponse\n ) {\n+  console.log(\"Received request:\", req.method, req.body);\n   if (req.method === \"POST\") {\n-    const data = req.body;\n-\n-    // 这里是数据处理逻辑\n-    // 例如，将数据保存到数据库\n-\n-    // 进行数据的重新格式化\n-    const formattedData = {\n-      ...data,\n-      \"google-scholar\": data.publications.googleScholar,\n-      dblp: data.publications.dblp,\n-      \"research-gate\": data.publications.researchGate,\n-      \"semantic-scholar\": data.publications.semanticScholar,\n-    };\n-\n-    // 假设保存成功后返回响应\n-    res\n-      .status(200)\n-      .json({ message: \"Data added successfully\", addedData: formattedData });\n+    try {\n+      const db = await connectToDatabase();\n+      console.log(\"Database connected\");\n+      const collection = db.collection(\"AdvisorTable\");\n+      const result = await collection.insertOne(req.body);\n+      console.log(\"Document inserted\", result);\n+      res.status(200).json(result);\n+    } catch (error) {\n+      console.error(\"Error occurred:\", error);\n+      res\n+        .status(500)\n+        .json({ error: \"Unable to connect to the database or insert data\" });\n+    }\n   } else {\n-    // 如果不是 POST 请求，则返回错误\n     res.setHeader(\"Allow\", [\"POST\"]);\n     res.status(405).end(`Method ${req.method} Not Allowed`);\n   }\n }\n+\n+\n"
                },
                {
                    "date": 1711727866132,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n import { MongoClient } from \"mongodb\";\n \n // MongoDB URL and database name\n const MONGO_URL = process.env.MONGO_URL; // Use the environment variable\n-const DB_NAME = \"ConnectedAdvisors\";\n+const DB_NAME = \"ConnectedAdvisor\";\n \n // Function to connect to the database\n async function connectToDatabase() {\n   const client = new MongoClient(MONGO_URL);\n"
                }
            ],
            "date": 1711641236044,
            "name": "Commit-0",
            "content": "/*\n * @Author: huskydoge hbh001098hbh@sjtu.edu.cn\n * @Date: 2024-03-28 21:32:44\n * @LastEditors: huskydoge hbh001098hbh@sjtu.edu.cn\n * @LastEditTime: 2024-03-28 23:48:55\n * @FilePath: /connected-advisor/src/data/mongodb_client.tsx\n * @Description: 这是默认设置,请设置`customMade`, 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE\n */\n\n// pages/api/addData.tsx\n\nimport type { NextApiRequest, NextApiResponse } from \"next\";\nimport { MongoClient } from \"mongodb\";\n\n// MongoDB URL and database name\nconst MONGO_URL = \"mongodb://localhost:27017/\";\nconst DB_NAME = \"Connected-Advisors\";\n\n// Function to connect to the database\nasync function connectToDatabase() {\n  const client = new MongoClient(MONGO_URL);\n  await client.connect();\n  return client.db(DB_NAME);\n}\n\n// API handler function\nexport default async function handler(\n  req: NextApiRequest,\n  res: NextApiResponse\n) {\n  if (req.method === \"POST\") {\n    try {\n      const db = await connectToDatabase();\n      const collection = db.collection(\"AdvisorTable\");\n      const result = await collection.insertOne(req.body);\n      res.status(200).json(result);\n    } catch (error) {\n      res\n        .status(500)\n        .json({ error: \"Unable to connect to the database or insert data\" });\n    }\n  } else {\n    res.setHeader(\"Allow\", [\"POST\"]);\n    res.status(405).end(`Method ${req.method} Not Allowed`);\n  }\n}\n"
        }
    ]
}