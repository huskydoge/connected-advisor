{
    "sourceFile": "src/pages/api/fuzzySearchConnection.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1713925086617,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1713925086617,
            "name": "Commit-0",
            "content": "/*\n * @Author: huskydoge hbh001098hbh@sjtu.edu.cn\n * @Date: 2024-03-30 21:06:00\n * @LastEditors: huskydoge hbh001098hbh@sjtu.edu.cn\n * @LastEditTime: 2024-04-24 10:17:07\n * @FilePath: /connected-advisor/src/pages/api/fuzySearchConnection.tsx\n * @Description: 这是默认设置,请设置`customMade`, 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE\n */\nimport { MongoClient, ObjectId } from \"mongodb\";\n\n// MongoDB URL and database name\nconst MONGO_URL = process.env.MONGO_URL || \"\";\nconst DB_NAME = \"ConnectedAdvisor\";\nconst COLLECTION_NAME = \"connections\";\n\nasync function connectToDatabase() {\n  const client = new MongoClient(MONGO_URL);\n  await client.connect();\n  const db = client.db(DB_NAME);\n  return { db, client };\n}\n\nexport default async function handler(req, res) {\n  res.setHeader(\"Access-Control-Allow-Origin\", \"*\");\n  res.setHeader(\"Access-Control-Allow-Methods\", \"POST, GET, OPTIONS\");\n  res.setHeader(\"Access-Control-Allow-Headers\", \"Content-Type\");\n\n  if (req.method !== \"POST\") {\n    res.setHeader(\"Allow\", [\"POST\"]);\n    res.status(405).end(`Method ${req.method} Not Allowed`);\n    return;\n  }\n\n  console.log(\"Received request:\", req.method, req.body);\n\n  const id_1 = req.body[\"id-1\"];\n  const id_2 = req.body[\"id-2\"];\n\n  console.log(\"id-1\", id_1);\n  console.log(\"id-2\", id_2);\n\n  if (!id_1 || !id_2) {\n    res.status(400).json({ message: \"Missing required parameters\" });\n    return;\n  }\n\n  try {\n    const { db, client } = await connectToDatabase();\n\n    const results = await db\n      .collection(COLLECTION_NAME)\n      .find({\n        $or: [\n          { \"id-1\": id_1, \"id-2\": id_2 },\n          { \"id-1\": id_2, \"id-2\": id_1 },\n        ],\n      })\n      .toArray();\n\n    if (results.length > 0) {\n      res.status(200).json(results);\n    } else {\n      res.status(404).json({ message: \"No matching connections found\" });\n    }\n\n    client.close();\n  } catch (error) {\n    console.error(error);\n    res.status(500).json({ message: \"Internal Server Error\" });\n  }\n}\n"
        }
    ]
}