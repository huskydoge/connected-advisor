{
    "sourceFile": "src/components/searchTable.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1715432883902,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1715432890085,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n   AdvisorDetailsWithRelationFactor,\n } from \"@/components/interface\";\n \n // @ts-ignore\n-const TableView = ({ onClickConnection, advisors }) => {\n+const TableView = ({ advisors }) => {\n   const router = useRouter();\n   const handleClickOnAdvisor = (id: string) => {\n     router.push(`${id}?view=graph`, undefined, {\n       shallow: true,\n"
                },
                {
                    "date": 1715432932986,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,17 +32,11 @@\n       <Table stickyHeader>\n         <TableHead>\n           <TableRow>\n             <TableCell align=\"center\">Advisor Name</TableCell>\n-            <TableCell align=\"center\">Influence Factor</TableCell>\n+            <TableCell align=\"center\">Affliation</TableCell>\n             <TableCell align=\"center\">Position</TableCell>\n-            <TableCell align=\"center\">Affliation</TableCell>\n-            <TableCell align=\"center\">HomePage</TableCell>\n-            <TableCell align=\"center\">Email</TableCell>\n-            <TableCell align=\"center\">Twitter</TableCell>\n-            <TableCell align=\"center\">GitHub</TableCell>\n-            <TableCell align=\"center\">Connections</TableCell>\n-            <TableCell align=\"center\">Relation Factor</TableCell>\n+            <TableCell align=\"center\">Tags</TableCell>\n           </TableRow>\n         </TableHead>\n         <TableBody>\n           {advisors?.map((advisor: AdvisorDetailsWithRelationFactor) => (\n"
                }
            ],
            "date": 1715432883902,
            "name": "Commit-0",
            "content": "import {\n    TableContainer,\n    Table,\n    TableHead,\n    TableRow,\n    TableCell,\n    TableBody,\n    Paper,\n    Link,\n    Button,\n    Tooltip,\n  } from \"@mui/material\";\n  \n  import { useRouter } from \"next/router\";\n  import {\n    AdvisorDetails,\n    AdvisorDetailsWithRelationFactor,\n  } from \"@/components/interface\";\n  \n  // @ts-ignore\n  const TableView = ({ onClickConnection, advisors }) => {\n    const router = useRouter();\n    const handleClickOnAdvisor = (id: string) => {\n      router.push(`${id}?view=graph`, undefined, {\n        shallow: true,\n      });\n    };\n  \n    const calculate_influence_factor = (\n      advisor: AdvisorDetailsWithRelationFactor,\n      degree = 1\n    ) => {\n      // TODO, should take the influence of its connected advisors into account, rather than merely count the number of connections\n      let influenceFactor = 0;\n      console.log(advisor);\n      for (let i = 0; i < advisor.connections.length; i++) {\n        let conn = advisor.connections[i];\n        let paper_score = conn.collaborations?.length;\n        influenceFactor += 1 + paper_score;\n      }\n      return influenceFactor;\n    };\n  \n    console.log(\"table\", advisors);\n    return (\n      <TableContainer component={Paper} sx={{ width: \"100%\" }}>\n        <Table stickyHeader>\n          <TableHead>\n            <TableRow>\n              <TableCell align=\"center\">Advisor Name</TableCell>\n              <TableCell align=\"center\">Influence Factor</TableCell>\n              <TableCell align=\"center\">Position</TableCell>\n              <TableCell align=\"center\">Affliation</TableCell>\n              <TableCell align=\"center\">HomePage</TableCell>\n              <TableCell align=\"center\">Email</TableCell>\n              <TableCell align=\"center\">Twitter</TableCell>\n              <TableCell align=\"center\">GitHub</TableCell>\n              <TableCell align=\"center\">Connections</TableCell>\n              <TableCell align=\"center\">Relation Factor</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {advisors?.map((advisor: AdvisorDetailsWithRelationFactor) => (\n              <TableRow sx={{ border: \"none\" }} key={advisor?._id} hover>\n                <TableCell align=\"center\">\n                  <Button onClick={() => handleClickOnAdvisor(advisor._id)}>\n                    {advisor?.name}\n                  </Button>\n                </TableCell>\n                <TableCell align=\"center\">\n                  {calculate_influence_factor(advisor)}\n                </TableCell>\n                <TableCell align=\"center\">{advisor?.position}</TableCell>\n                <TableCell align=\"center\">{advisor?.affiliation}</TableCell>\n                <TableCell align=\"center\">\n                  {advisor[\"homepage\"] ? (\n                    <Link\n                      href={advisor?.homepage}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      {advisor[\"homepage\"]}\n                    </Link>\n                  ) : (\n                    \"N/A\"\n                  )}\n                </TableCell>\n                <TableCell align=\"center\">\n                  <Link href={`mailto:${advisor.email}`}>\n                    {advisor.email ? advisor.email : \"N/A\"}\n                  </Link>\n                </TableCell>\n                <TableCell align=\"center\">\n                  {advisor.twitter ? (\n                    <Link\n                      href={advisor?.twitter}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      {advisor.twitter}\n                    </Link>\n                  ) : (\n                    \"N/A\"\n                  )}\n                </TableCell>\n                <TableCell align=\"center\">\n                  {advisor.github ? (\n                    <Link\n                      href={advisor.github}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      {advisor.github}\n                    </Link>\n                  ) : (\n                    \"N/A\"\n                  )}\n                </TableCell>\n                <TableCell align=\"center\">\n                  {/* Implementation for collaborations and connection cell */}\n                  <Tooltip title=\"show details\">\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      onClick={() => onClickConnection(advisor._id)}\n                    >\n                      Show Relation\n                    </Button>\n                  </Tooltip>\n                </TableCell>\n                <TableCell align=\"center\">{advisor.relationFactor}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    );\n  };\n  \n  export default TableView;\n  "
        }
    ]
}