{
    "sourceFile": "src/components/wrapped_api/fetchConnection.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1713924868485,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1713924868485,
            "name": "Commit-0",
            "content": "const fetchConnection = async (selectedNameOne, selectedNameTwo) => {\n  console.log(selectedNameOne?._id, selectedNameTwo?._id);\n  const response = await fetch(\"/api/fuzzySearchConnection\", {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({\n      \"id-1\": selectedNameOne?._id,\n      \"id-2\": selectedNameTwo?._id,\n    }),\n  });\n  const existingConnection = await response.json();\n  if (!response.ok) {\n    console.error(\"Failed to fetch connection\");\n    return null;\n  } else {\n    return existingConnection;\n  }\n};\n\nconst fetchConnectionById = async (connection_id) => {\n  const response = await fetch(\"/api/searchConnection\", {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({ oid: connection_id }),\n  });\n  const connection = await response.json();\n  if (!response.ok) {\n    console.error(\"Failed to fetch connection by id\");\n    return null;\n  } else {\n    // console.log(\"Successfully fetched connection by id\", connection);\n    return connection;\n  }\n};\n\nconst fetchConnectionByIdLst = async (connection_id_lst) => {\n  // console.log(\"input connection_id_lst\", connection_id_lst);\n  const response = await fetch(\"/api/searchConnection\", {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({ ids: connection_id_lst }),\n  });\n  if (!response.ok) {\n    console.error(\"Failed to fetch connection by id\");\n    return null;\n  }\n  const connection_lst = await response.json();\n  // console.log(\"Successfully fetched connection by id\", connection_lst);\n  return connection_lst;\n};\n\nconst addOrUpdateConnection = async (connectionData) => {\n  // TODO make sure it return correct id. If existing, then return existing id\n  const response = await fetch(\"/api/addConnection\", {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(connectionData),\n  });\n  if (!response.ok) {\n    console.error(\"Failed to add/update connection\");\n    return null;\n  } else {\n    console.log(\"Connection added/updated successfully\");\n    const connection_id = (await response.json())._id;\n    return connection_id;\n  }\n};\n\nexport {\n  fetchConnection,\n  addOrUpdateConnection,\n  fetchConnectionById,\n  fetchConnectionByIdLst,\n};\n"
        }
    ]
}