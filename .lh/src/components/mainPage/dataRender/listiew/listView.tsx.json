{
  "sourceFile": "src/components/mainPage/dataRender/listiew/listView.tsx",
  "activeCommit": 0,
  "commits": [
    {
      "activePatchIndex": 150,
      "patches": [
        {
          "date": 1708503665020,
          "content": "Index: \n===================================================================\n--- \n+++ \n"
        },
        {
          "date": 1708503739126,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,25 @@\n+import React, { useEffect, useRef, useState } from \"react\";\n+interface Advisor {\n+  _id: number;\n+  name: string;\n+  connections: {\n+    _id: number;\n+\n+    relation: Array<{\n+      class: string;\n+      role: string;\n+      duration: {\n+        start: { year: number; month: number };\n+        end: { year: number; month: number };\n+      };\n+    }>;\n+    collaborations: Array<{\n+      papername: string;\n+      year: number;\n+      url: string;\n+    }>;\n+    latestCollaboration: number;\n+    relationFactor: number;\n+  }[];\n+}\n+const advisors: Advisor[] = require(\"../../../data/advisors.json\");\n"
        },
        {
          "date": 1708503751489,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,8 +3,9 @@\n   _id: number;\n   name: string;\n   connections: {\n     _id: number;\n+    affliation: string;\n \n     relation: Array<{\n       class: string;\n       role: string;\n@@ -22,28 +23,4 @@\n     relationFactor: number;\n   }[];\n }\n const advisors: Advisor[] = require(\"../../../data/advisors.json\");\n-import React, { useEffect, useRef, useState } from \"react\";\n-interface Advisor {\n-  _id: number;\n-  name: string;\n-  connections: {\n-    _id: number;\n-    relation: Array<{\n-      class: string;\n-      role: string;\n-      duration: {\n-        start: { year: number; month: number };\n-        end: { year: number; month: number };\n-      };\n-    }>;\n-    collaborations: Array<{\n-      papername: string;\n-      year: number;\n-      url: string;\n-    }>;\n-    latestCollaboration: number;\n-    relationFactor: number;\n-  }[];\n-}\n-const advisors: Advisor[] = require(\"../../../data/advisors.json\");\n"
        },
        {
          "date": 1708503797751,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,12 @@\n   name: string;\n   connections: {\n     _id: number;\n     affliation: string;\n-\n+    hompage: string;\n+    twitter: string;\n+    github: string;\n+    email: string;\n     relation: Array<{\n       class: string;\n       role: string;\n       duration: {\n"
        },
        {
          "date": 1708504018218,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,4 +26,60 @@\n     relationFactor: number;\n   }[];\n }\n const advisors: Advisor[] = require(\"../../../data/advisors.json\");\n+\n+import {\n+  Table,\n+  TableBody,\n+  TableCell,\n+  TableContainer,\n+  TableHead,\n+  TableRow,\n+  Paper,\n+  Box,\n+} from \"@mui/material\";\n+\n+const ListView = ({ advisors }) => {\n+  return (\n+    <TableContainer component={Paper}>\n+      <Table stickyHeader>\n+        <TableHead>\n+          <TableRow>\n+            <TableCell>Advisor Name</TableCell>\n+            {/* 根据需要添加更多的表头 */}\n+            <TableCell>Details</TableCell>\n+          </TableRow>\n+        </TableHead>\n+        <TableBody>\n+          {advisors.map((advisor) => (\n+            <TableRow key={advisor._id} hover>\n+              <TableCell>{advisor.name}</TableCell>\n+              <TableCell>\n+                <Box\n+                  sx={{\n+                    maxWidth: 300,\n+                    overflow: \"auto\",\n+                    whiteSpace: \"nowrap\",\n+                    \"&::-webkit-scrollbar\": {\n+                      display: \"none\",\n+                    },\n+                  }}\n+                >\n+                  {/* 展示advisor的connections和collaborations信息 */}\n+                  {advisor.connections.map((connection, index) => (\n+                    <div key={index}>\n+                      {`Affiliation: ${connection.affliation}, Email: ${connection.email}`}\n+                      {/* 根据需要添加更多信息，省略号显示 */}\n+                    </div>\n+                  ))}\n+                </Box>\n+              </TableCell>\n+            </TableRow>\n+          ))}\n+        </TableBody>\n+      </Table>\n+    </TableContainer>\n+  );\n+};\n+\n+export default ListView;\n"
        },
        {
          "date": 1708504025658,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,85 @@\n+import React, { useEffect, useRef, useState } from \"react\";\n+interface Advisor {\n+  _id: number;\n+  name: string;\n+  connections: {\n+    _id: number;\n+    affliation: string;\n+    hompage: string;\n+    twitter: string;\n+    github: string;\n+    email: string;\n+    relation: Array<{\n+      class: string;\n+      role: string;\n+      duration: {\n+        start: { year: number; month: number };\n+        end: { year: number; month: number };\n+      };\n+    }>;\n+    collaborations: Array<{\n+      papername: string;\n+      year: number;\n+      url: string;\n+    }>;\n+    latestCollaboration: number;\n+    relationFactor: number;\n+  }[];\n+}\n+const advisors: Advisor[] = require(\"../../../data/advisors.json\");\n+\n+import {\n+  Table,\n+  TableBody,\n+  TableCell,\n+  TableContainer,\n+  TableHead,\n+  TableRow,\n+  Paper,\n+  Box,\n+} from \"@mui/material\";\n+\n+const ListView = () => {\n+  return (\n+    <TableContainer component={Paper}>\n+      <Table stickyHeader>\n+        <TableHead>\n+          <TableRow>\n+            <TableCell>Advisor Name</TableCell>\n+            {/* 根据需要添加更多的表头 */}\n+            <TableCell>Details</TableCell>\n+          </TableRow>\n+        </TableHead>\n+        <TableBody>\n+          {advisors.map((advisor) => (\n+            <TableRow key={advisor._id} hover>\n+              <TableCell>{advisor.name}</TableCell>\n+              <TableCell>\n+                <Box\n+                  sx={{\n+                    maxWidth: 300,\n+                    overflow: \"auto\",\n+                    whiteSpace: \"nowrap\",\n+                    \"&::-webkit-scrollbar\": {\n+                      display: \"none\",\n+                    },\n+                  }}\n+                >\n+                  {/* 展示advisor的connections和collaborations信息 */}\n+                  {advisor.connections.map((connection, index) => (\n+                    <div key={index}>\n+                      {`Affiliation: ${connection.affliation}, Email: ${connection.email}`}\n+                      {/* 根据需要添加更多信息，省略号显示 */}\n+                    </div>\n+                  ))}\n+                </Box>\n+              </TableCell>\n+            </TableRow>\n+          ))}\n+        </TableBody>\n+      </Table>\n+    </TableContainer>\n+  );\n+};\n+\n+export default ListView;\n"
        },
        {
          "date": 1708504150336,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n     latestCollaboration: number;\n     relationFactor: number;\n   }[];\n }\n-const advisors: Advisor[] = require(\"../../../data/advisors.json\");\n+const advisors: Advisor[] = require(\"../../../../data/advisors.json\");\n \n import {\n   Table,\n   TableBody,\n@@ -82,89 +82,4 @@\n   );\n };\n \n export default ListView;\n-import React, { useEffect, useRef, useState } from \"react\";\n-interface Advisor {\n-  _id: number;\n-  name: string;\n-  connections: {\n-    _id: number;\n-    affliation: string;\n-    hompage: string;\n-    twitter: string;\n-    github: string;\n-    email: string;\n-    relation: Array<{\n-      class: string;\n-      role: string;\n-      duration: {\n-        start: { year: number; month: number };\n-        end: { year: number; month: number };\n-      };\n-    }>;\n-    collaborations: Array<{\n-      papername: string;\n-      year: number;\n-      url: string;\n-    }>;\n-    latestCollaboration: number;\n-    relationFactor: number;\n-  }[];\n-}\n-const advisors: Advisor[] = require(\"../../../data/advisors.json\");\n-\n-import {\n-  Table,\n-  TableBody,\n-  TableCell,\n-  TableContainer,\n-  TableHead,\n-  TableRow,\n-  Paper,\n-  Box,\n-} from \"@mui/material\";\n-\n-const ListView = ({ advisors }) => {\n-  return (\n-    <TableContainer component={Paper}>\n-      <Table stickyHeader>\n-        <TableHead>\n-          <TableRow>\n-            <TableCell>Advisor Name</TableCell>\n-            {/* 根据需要添加更多的表头 */}\n-            <TableCell>Details</TableCell>\n-          </TableRow>\n-        </TableHead>\n-        <TableBody>\n-          {advisors.map((advisor) => (\n-            <TableRow key={advisor._id} hover>\n-              <TableCell>{advisor.name}</TableCell>\n-              <TableCell>\n-                <Box\n-                  sx={{\n-                    maxWidth: 300,\n-                    overflow: \"auto\",\n-                    whiteSpace: \"nowrap\",\n-                    \"&::-webkit-scrollbar\": {\n-                      display: \"none\",\n-                    },\n-                  }}\n-                >\n-                  {/* 展示advisor的connections和collaborations信息 */}\n-                  {advisor.connections.map((connection, index) => (\n-                    <div key={index}>\n-                      {`Affiliation: ${connection.affliation}, Email: ${connection.email}`}\n-                      {/* 根据需要添加更多信息，省略号显示 */}\n-                    </div>\n-                  ))}\n-                </Box>\n-              </TableCell>\n-            </TableRow>\n-          ))}\n-        </TableBody>\n-      </Table>\n-    </TableContainer>\n-  );\n-};\n-\n-export default ListView;\n"
        },
        {
          "date": 1708504188648,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,9 +45,9 @@\n       <Table stickyHeader>\n         <TableHead>\n           <TableRow>\n             <TableCell>Advisor Name</TableCell>\n-            {/* 根据需要添加更多的表头 */}\n+\n             <TableCell>Details</TableCell>\n           </TableRow>\n         </TableHead>\n         <TableBody>\n"
        },
        {
          "date": 1708504210205,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,10 +45,10 @@\n       <Table stickyHeader>\n         <TableHead>\n           <TableRow>\n             <TableCell>Advisor Name</TableCell>\n-\n-            <TableCell>Details</TableCell>\n+            <TableCell>Position</TableCell>\n+            <TableCell>Affliation</TableCell>\n           </TableRow>\n         </TableHead>\n         <TableBody>\n           {advisors.map((advisor) => (\n"
        },
        {
          "date": 1708504234914,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,8 +47,12 @@\n           <TableRow>\n             <TableCell>Advisor Name</TableCell>\n             <TableCell>Position</TableCell>\n             <TableCell>Affliation</TableCell>\n+            <TableCell>HomePage</TableCell>\n+            <TableCell>Email</TableCell>\n+            <TableCell>Twitter</TableCell>\n+            <TableCell>GitHub</TableCell>\n           </TableRow>\n         </TableHead>\n         <TableBody>\n           {advisors.map((advisor) => (\n"
        },
        {
          "date": 1708504248754,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,8 +51,9 @@\n             <TableCell>HomePage</TableCell>\n             <TableCell>Email</TableCell>\n             <TableCell>Twitter</TableCell>\n             <TableCell>GitHub</TableCell>\n+            <TableCell>Collaborations</TableCell>\n           </TableRow>\n         </TableHead>\n         <TableBody>\n           {advisors.map((advisor) => (\n"
        },
        {
          "date": 1708504374656,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,8 +58,11 @@\n         <TableBody>\n           {advisors.map((advisor) => (\n             <TableRow key={advisor._id} hover>\n               <TableCell>{advisor.name}</TableCell>\n+              <TableCell>{advisor.position}</TableCell>\n+              <TableCell>{advisor.affliation}</TableCell>\n+              <TableCell>{advisor.homepage}</TableCell>\n               <TableCell>\n                 <Box\n                   sx={{\n                     maxWidth: 300,\n"
        },
        {
          "date": 1708504396843,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,94 @@\n+import React, { useEffect, useRef, useState } from \"react\";\n+interface Advisor {\n+  _id: number;\n+  name: string;\n+  affliation: string;\n+  hompage: string;\n+  twitter: string;\n+  github: string;\n+  email: string;\n+  connections: {\n+    _id: number;\n+\n+    relation: Array<{\n+      class: string;\n+      role: string;\n+      duration: {\n+        start: { year: number; month: number };\n+        end: { year: number; month: number };\n+      };\n+    }>;\n+    collaborations: Array<{\n+      papername: string;\n+      year: number;\n+      url: string;\n+    }>;\n+    latestCollaboration: number;\n+    relationFactor: number;\n+  }[];\n+}\n+const advisors: Advisor[] = require(\"../../../../data/advisors.json\");\n+\n+import {\n+  Table,\n+  TableBody,\n+  TableCell,\n+  TableContainer,\n+  TableHead,\n+  TableRow,\n+  Paper,\n+  Box,\n+} from \"@mui/material\";\n+\n+const ListView = () => {\n+  return (\n+    <TableContainer component={Paper}>\n+      <Table stickyHeader>\n+        <TableHead>\n+          <TableRow>\n+            <TableCell>Advisor Name</TableCell>\n+            <TableCell>Position</TableCell>\n+            <TableCell>Affliation</TableCell>\n+            <TableCell>HomePage</TableCell>\n+            <TableCell>Email</TableCell>\n+            <TableCell>Twitter</TableCell>\n+            <TableCell>GitHub</TableCell>\n+            <TableCell>Collaborations</TableCell>\n+          </TableRow>\n+        </TableHead>\n+        <TableBody>\n+          {advisors.map((advisor) => (\n+            <TableRow key={advisor._id} hover>\n+              <TableCell>{advisor.name}</TableCell>\n+              <TableCell>{advisor.position}</TableCell>\n+              <TableCell>{advisor.affliation}</TableCell>\n+              <TableCell>{advisor.homepage}</TableCell>\n+              <TableCell>\n+                <Box\n+                  sx={{\n+                    maxWidth: 300,\n+                    overflow: \"auto\",\n+                    whiteSpace: \"nowrap\",\n+                    \"&::-webkit-scrollbar\": {\n+                      display: \"none\",\n+                    },\n+                  }}\n+                >\n+                  {/* 展示advisor的connections和collaborations信息 */}\n+                  {advisor.connections.map((connection, index) => (\n+                    <div key={index}>\n+                      {`Affiliation: ${connection.affliation}, Email: ${connection.email}`}\n+                      {/* 根据需要添加更多信息，省略号显示 */}\n+                    </div>\n+                  ))}\n+                </Box>\n+              </TableCell>\n+            </TableRow>\n+          ))}\n+        </TableBody>\n+      </Table>\n+    </TableContainer>\n+  );\n+};\n+\n+export default ListView;\n"
        },
        {
          "date": 1708504403712,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,8 +6,9 @@\n   hompage: string;\n   twitter: string;\n   github: string;\n   email: string;\n+  position: string;\n   connections: {\n     _id: number;\n \n     relation: Array<{\n@@ -91,97 +92,4 @@\n   );\n };\n \n export default ListView;\n-import React, { useEffect, useRef, useState } from \"react\";\n-interface Advisor {\n-  _id: number;\n-  name: string;\n-  connections: {\n-    _id: number;\n-    affliation: string;\n-    hompage: string;\n-    twitter: string;\n-    github: string;\n-    email: string;\n-    relation: Array<{\n-      class: string;\n-      role: string;\n-      duration: {\n-        start: { year: number; month: number };\n-        end: { year: number; month: number };\n-      };\n-    }>;\n-    collaborations: Array<{\n-      papername: string;\n-      year: number;\n-      url: string;\n-    }>;\n-    latestCollaboration: number;\n-    relationFactor: number;\n-  }[];\n-}\n-const advisors: Advisor[] = require(\"../../../../data/advisors.json\");\n-\n-import {\n-  Table,\n-  TableBody,\n-  TableCell,\n-  TableContainer,\n-  TableHead,\n-  TableRow,\n-  Paper,\n-  Box,\n-} from \"@mui/material\";\n-\n-const ListView = () => {\n-  return (\n-    <TableContainer component={Paper}>\n-      <Table stickyHeader>\n-        <TableHead>\n-          <TableRow>\n-            <TableCell>Advisor Name</TableCell>\n-            <TableCell>Position</TableCell>\n-            <TableCell>Affliation</TableCell>\n-            <TableCell>HomePage</TableCell>\n-            <TableCell>Email</TableCell>\n-            <TableCell>Twitter</TableCell>\n-            <TableCell>GitHub</TableCell>\n-            <TableCell>Collaborations</TableCell>\n-          </TableRow>\n-        </TableHead>\n-        <TableBody>\n-          {advisors.map((advisor) => (\n-            <TableRow key={advisor._id} hover>\n-              <TableCell>{advisor.name}</TableCell>\n-              <TableCell>{advisor.position}</TableCell>\n-              <TableCell>{advisor.affliation}</TableCell>\n-              <TableCell>{advisor.homepage}</TableCell>\n-              <TableCell>\n-                <Box\n-                  sx={{\n-                    maxWidth: 300,\n-                    overflow: \"auto\",\n-                    whiteSpace: \"nowrap\",\n-                    \"&::-webkit-scrollbar\": {\n-                      display: \"none\",\n-                    },\n-                  }}\n-                >\n-                  {/* 展示advisor的connections和collaborations信息 */}\n-                  {advisor.connections.map((connection, index) => (\n-                    <div key={index}>\n-                      {`Affiliation: ${connection.affliation}, Email: ${connection.email}`}\n-                      {/* 根据需要添加更多信息，省略号显示 */}\n-                    </div>\n-                  ))}\n-                </Box>\n-              </TableCell>\n-            </TableRow>\n-          ))}\n-        </TableBody>\n-      </Table>\n-    </TableContainer>\n-  );\n-};\n-\n-export default ListView;\n"
        },
        {
          "date": 1708504451957,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import React, { useEffect, useRef, useState } from \"react\";\n interface Advisor {\n   _id: number;\n   name: string;\n-  affliation: string;\n+  affiliation: string;\n   hompage: string;\n   twitter: string;\n   github: string;\n   email: string;\n@@ -61,10 +61,10 @@\n           {advisors.map((advisor) => (\n             <TableRow key={advisor._id} hover>\n               <TableCell>{advisor.name}</TableCell>\n               <TableCell>{advisor.position}</TableCell>\n-              <TableCell>{advisor.affliation}</TableCell>\n-              <TableCell>{advisor.homepage}</TableCell>\n+              <TableCell>{advisor.affiliation}</TableCell>\n+              <TableCell>{advisor.hompage}</TableCell>\n               <TableCell>\n                 <Box\n                   sx={{\n                     maxWidth: 300,\n"
        },
        {
          "date": 1708504488562,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,28 +63,11 @@\n               <TableCell>{advisor.name}</TableCell>\n               <TableCell>{advisor.position}</TableCell>\n               <TableCell>{advisor.affiliation}</TableCell>\n               <TableCell>{advisor.hompage}</TableCell>\n-              <TableCell>\n-                <Box\n-                  sx={{\n-                    maxWidth: 300,\n-                    overflow: \"auto\",\n-                    whiteSpace: \"nowrap\",\n-                    \"&::-webkit-scrollbar\": {\n-                      display: \"none\",\n-                    },\n-                  }}\n-                >\n-                  {/* 展示advisor的connections和collaborations信息 */}\n-                  {advisor.connections.map((connection, index) => (\n-                    <div key={index}>\n-                      {`Affiliation: ${connection.affliation}, Email: ${connection.email}`}\n-                      {/* 根据需要添加更多信息，省略号显示 */}\n-                    </div>\n-                  ))}\n-                </Box>\n-              </TableCell>\n+              <TableCell>{advisor.email}</TableCell>\n+              <TableCell>{advisor.twitter}</TableCell>\n+              <TableCell>{advisor.github}</TableCell>\n             </TableRow>\n           ))}\n         </TableBody>\n       </Table>\n"
        },
        {
          "date": 1708504506258,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,8 +66,9 @@\n               <TableCell>{advisor.hompage}</TableCell>\n               <TableCell>{advisor.email}</TableCell>\n               <TableCell>{advisor.twitter}</TableCell>\n               <TableCell>{advisor.github}</TableCell>\n+              // TODO Connection cell, click to jump to connection table\n             </TableRow>\n           ))}\n         </TableBody>\n       </Table>\n"
        },
        {
          "date": 1708504547206,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,8 +42,9 @@\n } from \"@mui/material\";\n \n const ListView = () => {\n   return (\n+    // TODO1: A line, 最左边写着Main Advisor的名字，最右边是一个叉叉，点击之后退出ListView\n     <TableContainer component={Paper}>\n       <Table stickyHeader>\n         <TableHead>\n           <TableRow>\n"
        },
        {
          "date": 1708504587505,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,8 +43,9 @@\n \n const ListView = () => {\n   return (\n     // TODO1: A line, 最左边写着Main Advisor的名字，最右边是一个叉叉，点击之后退出ListView\n+    // TODO2: 使下方这些TableCell的内容居中；且为那些是链接的增添链接标签，是邮箱的增添邮箱标签\n     <TableContainer component={Paper}>\n       <Table stickyHeader>\n         <TableHead>\n           <TableRow>\n@@ -67,9 +68,9 @@\n               <TableCell>{advisor.hompage}</TableCell>\n               <TableCell>{advisor.email}</TableCell>\n               <TableCell>{advisor.twitter}</TableCell>\n               <TableCell>{advisor.github}</TableCell>\n-              // TODO Connection cell, click to jump to connection table\n+              // TODO2 Connection cell, click to jump to connection table\n             </TableRow>\n           ))}\n         </TableBody>\n       </Table>\n"
        },
        {
          "date": 1708504681107,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,43 +39,104 @@\n   TableRow,\n   Paper,\n   Box,\n } from \"@mui/material\";\n+import React from \"react\";\n+import {\n+  TableContainer,\n+  Table,\n+  TableHead,\n+  TableRow,\n+  TableCell,\n+  TableBody,\n+  Paper,\n+  IconButton,\n+  Typography,\n+  Box,\n+  Link,\n+} from \"@mui/material\";\n+import CloseIcon from \"@mui/icons-material/Close\";\n \n-const ListView = () => {\n+const advisors = []; // Assuming advisors data is defined somewhere\n+\n+const ListView = ({ onClose }) => {\n   return (\n-    // TODO1: A line, 最左边写着Main Advisor的名字，最右边是一个叉叉，点击之后退出ListView\n-    // TODO2: 使下方这些TableCell的内容居中；且为那些是链接的增添链接标签，是邮箱的增添邮箱标签\n-    <TableContainer component={Paper}>\n-      <Table stickyHeader>\n-        <TableHead>\n-          <TableRow>\n-            <TableCell>Advisor Name</TableCell>\n-            <TableCell>Position</TableCell>\n-            <TableCell>Affliation</TableCell>\n-            <TableCell>HomePage</TableCell>\n-            <TableCell>Email</TableCell>\n-            <TableCell>Twitter</TableCell>\n-            <TableCell>GitHub</TableCell>\n-            <TableCell>Collaborations</TableCell>\n-          </TableRow>\n-        </TableHead>\n-        <TableBody>\n-          {advisors.map((advisor) => (\n-            <TableRow key={advisor._id} hover>\n-              <TableCell>{advisor.name}</TableCell>\n-              <TableCell>{advisor.position}</TableCell>\n-              <TableCell>{advisor.affiliation}</TableCell>\n-              <TableCell>{advisor.hompage}</TableCell>\n-              <TableCell>{advisor.email}</TableCell>\n-              <TableCell>{advisor.twitter}</TableCell>\n-              <TableCell>{advisor.github}</TableCell>\n-              // TODO2 Connection cell, click to jump to connection table\n+    <Box>\n+      <Box\n+        sx={{\n+          display: \"flex\",\n+          justifyContent: \"space-between\",\n+          alignItems: \"center\",\n+          p: 2,\n+          backgroundColor: \"primary.main\",\n+          color: \"white\",\n+        }}\n+      >\n+        <Typography variant=\"h6\">Main Advisor</Typography>\n+        <IconButton onClick={onClose} color=\"inherit\">\n+          <CloseIcon />\n+        </IconButton>\n+      </Box>\n+      <TableContainer component={Paper}>\n+        <Table stickyHeader>\n+          <TableHead>\n+            <TableRow>\n+              <TableCell align=\"center\">Advisor Name</TableCell>\n+              <TableCell align=\"center\">Position</TableCell>\n+              <TableCell align=\"center\">Affliation</TableCell>\n+              <TableCell align=\"center\">HomePage</TableCell>\n+              <TableCell align=\"center\">Email</TableCell>\n+              <TableCell align=\"center\">Twitter</TableCell>\n+              <TableCell align=\"center\">GitHub</TableCell>\n+              <TableCell align=\"center\">Collaborations</TableCell>\n             </TableRow>\n-          ))}\n-        </TableBody>\n-      </Table>\n-    </TableContainer>\n+          </TableHead>\n+          <TableBody>\n+            {advisors.map((advisor) => (\n+              <TableRow key={advisor._id} hover>\n+                <TableCell align=\"center\">{advisor.name}</TableCell>\n+                <TableCell align=\"center\">{advisor.position}</TableCell>\n+                <TableCell align=\"center\">{advisor.affiliation}</TableCell>\n+                <TableCell align=\"center\">\n+                  <Link\n+                    href={advisor.homepage}\n+                    target=\"_blank\"\n+                    rel=\"noopener noreferrer\"\n+                  >\n+                    {advisor.homepage}\n+                  </Link>\n+                </TableCell>\n+                <TableCell align=\"center\">\n+                  <Link href={`mailto:${advisor.email}`}>{advisor.email}</Link>\n+                </TableCell>\n+                <TableCell align=\"center\">\n+                  <Link\n+                    href={advisor.twitter}\n+                    target=\"_blank\"\n+                    rel=\"noopener noreferrer\"\n+                  >\n+                    {advisor.twitter}\n+                  </Link>\n+                </TableCell>\n+                <TableCell align=\"center\">\n+                  <Link\n+                    href={advisor.github}\n+                    target=\"_blank\"\n+                    rel=\"noopener noreferrer\"\n+                  >\n+                    {advisor.github}\n+                  </Link>\n+                </TableCell>\n+                <TableCell align=\"center\">\n+                  {/* Implementation for collaborations and connection cell */}\n+                  {/* You can add a button or link here to navigate to the connection table */}\n+                </TableCell>\n+              </TableRow>\n+            ))}\n+          </TableBody>\n+        </Table>\n+      </TableContainer>\n+    </Box>\n   );\n };\n \n export default ListView;\n"
        },
        {
          "date": 1708504701866,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,81 @@\n+import React, { useEffect, useRef, useState } from \"react\";\n+interface Advisor {\n+  _id: number;\n+  name: string;\n+  affiliation: string;\n+  hompage: string;\n+  twitter: string;\n+  github: string;\n+  email: string;\n+  position: string;\n+  connections: {\n+    _id: number;\n+\n+    relation: Array<{\n+      class: string;\n+      role: string;\n+      duration: {\n+        start: { year: number; month: number };\n+        end: { year: number; month: number };\n+      };\n+    }>;\n+    collaborations: Array<{\n+      papername: string;\n+      year: number;\n+      url: string;\n+    }>;\n+    latestCollaboration: number;\n+    relationFactor: number;\n+  }[];\n+}\n+const advisors: Advisor[] = require(\"../../../../data/advisors.json\");\n+\n+import {\n+  Table,\n+  TableBody,\n+  TableCell,\n+  TableContainer,\n+  TableHead,\n+  TableRow,\n+  Paper,\n+  Box,\n+} from \"@mui/material\";\n+\n+const ListView = () => {\n+  return (\n+    // TODO1: A line, 最左边写着Main Advisor的名字，最右边是一个叉叉，点击之后退出ListView\n+    // TODO2: 使下方这些TableCell的内容居中；且为那些是链接的增添链接标签，是邮箱的增添邮箱标签\n+    <TableContainer component={Paper}>\n+      <Table stickyHeader>\n+        <TableHead>\n+          <TableRow>\n+            <TableCell>Advisor Name</TableCell>\n+            <TableCell>Position</TableCell>\n+            <TableCell>Affliation</TableCell>\n+            <TableCell>HomePage</TableCell>\n+            <TableCell>Email</TableCell>\n+            <TableCell>Twitter</TableCell>\n+            <TableCell>GitHub</TableCell>\n+            <TableCell>Collaborations</TableCell>\n+          </TableRow>\n+        </TableHead>\n+        <TableBody>\n+          {advisors.map((advisor) => (\n+            <TableRow key={advisor._id} hover>\n+              <TableCell>{advisor.name}</TableCell>\n+              <TableCell>{advisor.position}</TableCell>\n+              <TableCell>{advisor.affiliation}</TableCell>\n+              <TableCell>{advisor.hompage}</TableCell>\n+              <TableCell>{advisor.email}</TableCell>\n+              <TableCell>{advisor.twitter}</TableCell>\n+              <TableCell>{advisor.github}</TableCell>\n+              // TODO2 Connection cell, click to jump to connection table\n+            </TableRow>\n+          ))}\n+        </TableBody>\n+      </Table>\n+    </TableContainer>\n+  );\n+};\n+\n+export default ListView;\n"
        },
        {
          "date": 1708504721846,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,107 +39,10 @@\n   TableRow,\n   Paper,\n   Box,\n } from \"@mui/material\";\n-\n-const ListView = () => {\n-  return (\n-    // TODO1: A line, 最左边写着Main Advisor的名字，最右边是一个叉叉，点击之后退出ListView\n-    // TODO2: 使下方这些TableCell的内容居中；且为那些是链接的增添链接标签，是邮箱的增添邮箱标签\n-    <TableContainer component={Paper}>\n-      <Table stickyHeader>\n-        <TableHead>\n-          <TableRow>\n-            <TableCell>Advisor Name</TableCell>\n-            <TableCell>Position</TableCell>\n-            <TableCell>Affliation</TableCell>\n-            <TableCell>HomePage</TableCell>\n-            <TableCell>Email</TableCell>\n-            <TableCell>Twitter</TableCell>\n-            <TableCell>GitHub</TableCell>\n-            <TableCell>Collaborations</TableCell>\n-          </TableRow>\n-        </TableHead>\n-        <TableBody>\n-          {advisors.map((advisor) => (\n-            <TableRow key={advisor._id} hover>\n-              <TableCell>{advisor.name}</TableCell>\n-              <TableCell>{advisor.position}</TableCell>\n-              <TableCell>{advisor.affiliation}</TableCell>\n-              <TableCell>{advisor.hompage}</TableCell>\n-              <TableCell>{advisor.email}</TableCell>\n-              <TableCell>{advisor.twitter}</TableCell>\n-              <TableCell>{advisor.github}</TableCell>\n-              // TODO2 Connection cell, click to jump to connection table\n-            </TableRow>\n-          ))}\n-        </TableBody>\n-      </Table>\n-    </TableContainer>\n-  );\n-};\n-\n-export default ListView;\n-import React, { useEffect, useRef, useState } from \"react\";\n-interface Advisor {\n-  _id: number;\n-  name: string;\n-  affiliation: string;\n-  hompage: string;\n-  twitter: string;\n-  github: string;\n-  email: string;\n-  position: string;\n-  connections: {\n-    _id: number;\n-\n-    relation: Array<{\n-      class: string;\n-      role: string;\n-      duration: {\n-        start: { year: number; month: number };\n-        end: { year: number; month: number };\n-      };\n-    }>;\n-    collaborations: Array<{\n-      papername: string;\n-      year: number;\n-      url: string;\n-    }>;\n-    latestCollaboration: number;\n-    relationFactor: number;\n-  }[];\n-}\n-const advisors: Advisor[] = require(\"../../../../data/advisors.json\");\n-\n-import {\n-  Table,\n-  TableBody,\n-  TableCell,\n-  TableContainer,\n-  TableHead,\n-  TableRow,\n-  Paper,\n-  Box,\n-} from \"@mui/material\";\n-import React from \"react\";\n-import {\n-  TableContainer,\n-  Table,\n-  TableHead,\n-  TableRow,\n-  TableCell,\n-  TableBody,\n-  Paper,\n-  IconButton,\n-  Typography,\n-  Box,\n-  Link,\n-} from \"@mui/material\";\n import CloseIcon from \"@mui/icons-material/Close\";\n \n-const advisors = []; // Assuming advisors data is defined somewhere\n-\n const ListView = ({ onClose }) => {\n   return (\n     <Box>\n       <Box\n@@ -218,6 +121,4 @@\n       </TableContainer>\n     </Box>\n   );\n };\n-\n-export default ListView;\n"
        },
        {
          "date": 1708504734697,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,17 +30,21 @@\n }\n const advisors: Advisor[] = require(\"../../../../data/advisors.json\");\n \n import {\n+  TableContainer,\n   Table,\n-  TableBody,\n-  TableCell,\n-  TableContainer,\n   TableHead,\n   TableRow,\n+  TableCell,\n+  TableBody,\n   Paper,\n+  IconButton,\n+  Typography,\n   Box,\n+  Link,\n } from \"@mui/material\";\n+\n import CloseIcon from \"@mui/icons-material/Close\";\n \n const ListView = ({ onClose }) => {\n   return (\n"
        },
        {
          "date": 1708504750456,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n interface Advisor {\n   _id: number;\n   name: string;\n   affiliation: string;\n-  hompage: string;\n+  homepage: string;\n   twitter: string;\n   github: string;\n   email: string;\n   position: string;\n"
        },
        {
          "date": 1708504774118,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -125,4 +125,6 @@\n       </TableContainer>\n     </Box>\n   );\n };\n+\n+export default ListView;\n"
        },
        {
          "date": 1708504811738,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,8 +56,9 @@\n           alignItems: \"center\",\n           p: 2,\n           backgroundColor: \"primary.main\",\n           color: \"white\",\n+          width: \"100%\",\n         }}\n       >\n         <Typography variant=\"h6\">Main Advisor</Typography>\n         <IconButton onClick={onClose} color=\"inherit\">\n"
        },
        {
          "date": 1708504845062,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,9 +64,9 @@\n         <IconButton onClick={onClose} color=\"inherit\">\n           <CloseIcon />\n         </IconButton>\n       </Box>\n-      <TableContainer component={Paper}>\n+      <TableContainer component={Paper} sx={{ width: \"100%\" }}>\n         <Table stickyHeader>\n           <TableHead>\n             <TableRow>\n               <TableCell align=\"center\">Advisor Name</TableCell>\n"
        },
        {
          "date": 1708505002722,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,9 +47,9 @@\n import CloseIcon from \"@mui/icons-material/Close\";\n \n const ListView = ({ onClose }) => {\n   return (\n-    <Box>\n+    <Box sx={{ width: '100%' }}> {/* 确保这一层也是充满父元素的 */}\n       <Box\n         sx={{\n           display: \"flex\",\n           justifyContent: \"space-between\",\n@@ -123,9 +123,9 @@\n             ))}\n           </TableBody>\n         </Table>\n       </TableContainer>\n-    </Box>\n+    </>\n   );\n };\n \n export default ListView;\n"
        },
        {
          "date": 1708505013379,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,131 @@\n+import React, { useEffect, useRef, useState } from \"react\";\n+interface Advisor {\n+  _id: number;\n+  name: string;\n+  affiliation: string;\n+  homepage: string;\n+  twitter: string;\n+  github: string;\n+  email: string;\n+  position: string;\n+  connections: {\n+    _id: number;\n+\n+    relation: Array<{\n+      class: string;\n+      role: string;\n+      duration: {\n+        start: { year: number; month: number };\n+        end: { year: number; month: number };\n+      };\n+    }>;\n+    collaborations: Array<{\n+      papername: string;\n+      year: number;\n+      url: string;\n+    }>;\n+    latestCollaboration: number;\n+    relationFactor: number;\n+  }[];\n+}\n+const advisors: Advisor[] = require(\"../../../../data/advisors.json\");\n+\n+import {\n+  TableContainer,\n+  Table,\n+  TableHead,\n+  TableRow,\n+  TableCell,\n+  TableBody,\n+  Paper,\n+  IconButton,\n+  Typography,\n+  Box,\n+  Link,\n+} from \"@mui/material\";\n+\n+import CloseIcon from \"@mui/icons-material/Close\";\n+\n+const ListView = ({ onClose }) => {\n+  return (\n+    <Box sx={{ width: '100%' }}> {/* 确保这一层也是充满父元素的 */}\n+      <Box\n+        sx={{\n+          display: \"flex\",\n+          justifyContent: \"space-between\",\n+          alignItems: \"center\",\n+          p: 2,\n+          backgroundColor: \"primary.main\",\n+          color: \"white\",\n+          width: \"100%\",\n+        }}\n+      >\n+        <Typography variant=\"h6\">Main Advisor</Typography>\n+        <IconButton onClick={onClose} color=\"inherit\">\n+          <CloseIcon />\n+        </IconButton>\n+      </Box>\n+      <TableContainer component={Paper} sx={{ width: \"100%\" }}>\n+        <Table stickyHeader>\n+          <TableHead>\n+            <TableRow>\n+              <TableCell align=\"center\">Advisor Name</TableCell>\n+              <TableCell align=\"center\">Position</TableCell>\n+              <TableCell align=\"center\">Affliation</TableCell>\n+              <TableCell align=\"center\">HomePage</TableCell>\n+              <TableCell align=\"center\">Email</TableCell>\n+              <TableCell align=\"center\">Twitter</TableCell>\n+              <TableCell align=\"center\">GitHub</TableCell>\n+              <TableCell align=\"center\">Collaborations</TableCell>\n+            </TableRow>\n+          </TableHead>\n+          <TableBody>\n+            {advisors.map((advisor) => (\n+              <TableRow key={advisor._id} hover>\n+                <TableCell align=\"center\">{advisor.name}</TableCell>\n+                <TableCell align=\"center\">{advisor.position}</TableCell>\n+                <TableCell align=\"center\">{advisor.affiliation}</TableCell>\n+                <TableCell align=\"center\">\n+                  <Link\n+                    href={advisor.homepage}\n+                    target=\"_blank\"\n+                    rel=\"noopener noreferrer\"\n+                  >\n+                    {advisor.homepage}\n+                  </Link>\n+                </TableCell>\n+                <TableCell align=\"center\">\n+                  <Link href={`mailto:${advisor.email}`}>{advisor.email}</Link>\n+                </TableCell>\n+                <TableCell align=\"center\">\n+                  <Link\n+                    href={advisor.twitter}\n+                    target=\"_blank\"\n+                    rel=\"noopener noreferrer\"\n+                  >\n+                    {advisor.twitter}\n+                  </Link>\n+                </TableCell>\n+                <TableCell align=\"center\">\n+                  <Link\n+                    href={advisor.github}\n+                    target=\"_blank\"\n+                    rel=\"noopener noreferrer\"\n+                  >\n+                    {advisor.github}\n+                  </Link>\n+                </TableCell>\n+                <TableCell align=\"center\">\n+                  {/* Implementation for collaborations and connection cell */}\n+                  {/* You can add a button or link here to navigate to the connection table */}\n+                </TableCell>\n+              </TableRow>\n+            ))}\n+          </TableBody>\n+        </Table>\n+      </TableContainer>\n+    </>\n+  );\n+};\n+\n+export default ListView;\n"
        },
        {
          "date": 1708505020773,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,131 @@\n+import React, { useEffect, useRef, useState } from \"react\";\n+interface Advisor {\n+  _id: number;\n+  name: string;\n+  affiliation: string;\n+  homepage: string;\n+  twitter: string;\n+  github: string;\n+  email: string;\n+  position: string;\n+  connections: {\n+    _id: number;\n+\n+    relation: Array<{\n+      class: string;\n+      role: string;\n+      duration: {\n+        start: { year: number; month: number };\n+        end: { year: number; month: number };\n+      };\n+    }>;\n+    collaborations: Array<{\n+      papername: string;\n+      year: number;\n+      url: string;\n+    }>;\n+    latestCollaboration: number;\n+    relationFactor: number;\n+  }[];\n+}\n+const advisors: Advisor[] = require(\"../../../../data/advisors.json\");\n+\n+import {\n+  TableContainer,\n+  Table,\n+  TableHead,\n+  TableRow,\n+  TableCell,\n+  TableBody,\n+  Paper,\n+  IconButton,\n+  Typography,\n+  Box,\n+  Link,\n+} from \"@mui/material\";\n+\n+import CloseIcon from \"@mui/icons-material/Close\";\n+\n+const ListView = ({ onClose }) => {\n+  return (\n+    <Box>\n+      <Box\n+        sx={{\n+          display: \"flex\",\n+          justifyContent: \"space-between\",\n+          alignItems: \"center\",\n+          p: 2,\n+          backgroundColor: \"primary.main\",\n+          color: \"white\",\n+          width: \"100%\",\n+        }}\n+      >\n+        <Typography variant=\"h6\">Main Advisor</Typography>\n+        <IconButton onClick={onClose} color=\"inherit\">\n+          <CloseIcon />\n+        </IconButton>\n+      </Box>\n+      <TableContainer component={Paper} sx={{ width: \"100%\" }}>\n+        <Table stickyHeader>\n+          <TableHead>\n+            <TableRow>\n+              <TableCell align=\"center\">Advisor Name</TableCell>\n+              <TableCell align=\"center\">Position</TableCell>\n+              <TableCell align=\"center\">Affliation</TableCell>\n+              <TableCell align=\"center\">HomePage</TableCell>\n+              <TableCell align=\"center\">Email</TableCell>\n+              <TableCell align=\"center\">Twitter</TableCell>\n+              <TableCell align=\"center\">GitHub</TableCell>\n+              <TableCell align=\"center\">Collaborations</TableCell>\n+            </TableRow>\n+          </TableHead>\n+          <TableBody>\n+            {advisors.map((advisor) => (\n+              <TableRow key={advisor._id} hover>\n+                <TableCell align=\"center\">{advisor.name}</TableCell>\n+                <TableCell align=\"center\">{advisor.position}</TableCell>\n+                <TableCell align=\"center\">{advisor.affiliation}</TableCell>\n+                <TableCell align=\"center\">\n+                  <Link\n+                    href={advisor.homepage}\n+                    target=\"_blank\"\n+                    rel=\"noopener noreferrer\"\n+                  >\n+                    {advisor.homepage}\n+                  </Link>\n+                </TableCell>\n+                <TableCell align=\"center\">\n+                  <Link href={`mailto:${advisor.email}`}>{advisor.email}</Link>\n+                </TableCell>\n+                <TableCell align=\"center\">\n+                  <Link\n+                    href={advisor.twitter}\n+                    target=\"_blank\"\n+                    rel=\"noopener noreferrer\"\n+                  >\n+                    {advisor.twitter}\n+                  </Link>\n+                </TableCell>\n+                <TableCell align=\"center\">\n+                  <Link\n+                    href={advisor.github}\n+                    target=\"_blank\"\n+                    rel=\"noopener noreferrer\"\n+                  >\n+                    {advisor.github}\n+                  </Link>\n+                </TableCell>\n+                <TableCell align=\"center\">\n+                  {/* Implementation for collaborations and connection cell */}\n+                  {/* You can add a button or link here to navigate to the connection table */}\n+                </TableCell>\n+              </TableRow>\n+            ))}\n+          </TableBody>\n+        </Table>\n+      </TableContainer>\n+    </Box>\n+  );\n+};\n+\n+export default ListView;\n"
        },
        {
          "date": 1708505029607,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,9 +47,11 @@\n import CloseIcon from \"@mui/icons-material/Close\";\n \n const ListView = ({ onClose }) => {\n   return (\n-    <Box>\n+    <Box sx={{ width: \"100%\" }}>\n+      {\" \"}\n+      {/* 确保这一层也是充满父元素的 */}\n       <Box\n         sx={{\n           display: \"flex\",\n           justifyContent: \"space-between\",\n@@ -128,266 +130,4 @@\n   );\n };\n \n export default ListView;\n-import React, { useEffect, useRef, useState } from \"react\";\n-interface Advisor {\n-  _id: number;\n-  name: string;\n-  affiliation: string;\n-  homepage: string;\n-  twitter: string;\n-  github: string;\n-  email: string;\n-  position: string;\n-  connections: {\n-    _id: number;\n-\n-    relation: Array<{\n-      class: string;\n-      role: string;\n-      duration: {\n-        start: { year: number; month: number };\n-        end: { year: number; month: number };\n-      };\n-    }>;\n-    collaborations: Array<{\n-      papername: string;\n-      year: number;\n-      url: string;\n-    }>;\n-    latestCollaboration: number;\n-    relationFactor: number;\n-  }[];\n-}\n-const advisors: Advisor[] = require(\"../../../../data/advisors.json\");\n-\n-import {\n-  TableContainer,\n-  Table,\n-  TableHead,\n-  TableRow,\n-  TableCell,\n-  TableBody,\n-  Paper,\n-  IconButton,\n-  Typography,\n-  Box,\n-  Link,\n-} from \"@mui/material\";\n-\n-import CloseIcon from \"@mui/icons-material/Close\";\n-\n-const ListView = ({ onClose }) => {\n-  return (\n-    <Box sx={{ width: '100%' }}> {/* 确保这一层也是充满父元素的 */}\n-      <Box\n-        sx={{\n-          display: \"flex\",\n-          justifyContent: \"space-between\",\n-          alignItems: \"center\",\n-          p: 2,\n-          backgroundColor: \"primary.main\",\n-          color: \"white\",\n-          width: \"100%\",\n-        }}\n-      >\n-        <Typography variant=\"h6\">Main Advisor</Typography>\n-        <IconButton onClick={onClose} color=\"inherit\">\n-          <CloseIcon />\n-        </IconButton>\n-      </Box>\n-      <TableContainer component={Paper} sx={{ width: \"100%\" }}>\n-        <Table stickyHeader>\n-          <TableHead>\n-            <TableRow>\n-              <TableCell align=\"center\">Advisor Name</TableCell>\n-              <TableCell align=\"center\">Position</TableCell>\n-              <TableCell align=\"center\">Affliation</TableCell>\n-              <TableCell align=\"center\">HomePage</TableCell>\n-              <TableCell align=\"center\">Email</TableCell>\n-              <TableCell align=\"center\">Twitter</TableCell>\n-              <TableCell align=\"center\">GitHub</TableCell>\n-              <TableCell align=\"center\">Collaborations</TableCell>\n-            </TableRow>\n-          </TableHead>\n-          <TableBody>\n-            {advisors.map((advisor) => (\n-              <TableRow key={advisor._id} hover>\n-                <TableCell align=\"center\">{advisor.name}</TableCell>\n-                <TableCell align=\"center\">{advisor.position}</TableCell>\n-                <TableCell align=\"center\">{advisor.affiliation}</TableCell>\n-                <TableCell align=\"center\">\n-                  <Link\n-                    href={advisor.homepage}\n-                    target=\"_blank\"\n-                    rel=\"noopener noreferrer\"\n-                  >\n-                    {advisor.homepage}\n-                  </Link>\n-                </TableCell>\n-                <TableCell align=\"center\">\n-                  <Link href={`mailto:${advisor.email}`}>{advisor.email}</Link>\n-                </TableCell>\n-                <TableCell align=\"center\">\n-                  <Link\n-                    href={advisor.twitter}\n-                    target=\"_blank\"\n-                    rel=\"noopener noreferrer\"\n-                  >\n-                    {advisor.twitter}\n-                  </Link>\n-                </TableCell>\n-                <TableCell align=\"center\">\n-                  <Link\n-                    href={advisor.github}\n-                    target=\"_blank\"\n-                    rel=\"noopener noreferrer\"\n-                  >\n-                    {advisor.github}\n-                  </Link>\n-                </TableCell>\n-                <TableCell align=\"center\">\n-                  {/* Implementation for collaborations and connection cell */}\n-                  {/* You can add a button or link here to navigate to the connection table */}\n-                </TableCell>\n-              </TableRow>\n-            ))}\n-          </TableBody>\n-        </Table>\n-      </TableContainer>\n-    </>\n-  );\n-};\n-\n-export default ListView;\n-import React, { useEffect, useRef, useState } from \"react\";\n-interface Advisor {\n-  _id: number;\n-  name: string;\n-  affiliation: string;\n-  homepage: string;\n-  twitter: string;\n-  github: string;\n-  email: string;\n-  position: string;\n-  connections: {\n-    _id: number;\n-\n-    relation: Array<{\n-      class: string;\n-      role: string;\n-      duration: {\n-        start: { year: number; month: number };\n-        end: { year: number; month: number };\n-      };\n-    }>;\n-    collaborations: Array<{\n-      papername: string;\n-      year: number;\n-      url: string;\n-    }>;\n-    latestCollaboration: number;\n-    relationFactor: number;\n-  }[];\n-}\n-const advisors: Advisor[] = require(\"../../../../data/advisors.json\");\n-\n-import {\n-  TableContainer,\n-  Table,\n-  TableHead,\n-  TableRow,\n-  TableCell,\n-  TableBody,\n-  Paper,\n-  IconButton,\n-  Typography,\n-  Box,\n-  Link,\n-} from \"@mui/material\";\n-\n-import CloseIcon from \"@mui/icons-material/Close\";\n-\n-const ListView = ({ onClose }) => {\n-  return (\n-    <Box sx={{ width: '100%' }}> {/* 确保这一层也是充满父元素的 */}\n-      <Box\n-        sx={{\n-          display: \"flex\",\n-          justifyContent: \"space-between\",\n-          alignItems: \"center\",\n-          p: 2,\n-          backgroundColor: \"primary.main\",\n-          color: \"white\",\n-          width: \"100%\",\n-        }}\n-      >\n-        <Typography variant=\"h6\">Main Advisor</Typography>\n-        <IconButton onClick={onClose} color=\"inherit\">\n-          <CloseIcon />\n-        </IconButton>\n-      </Box>\n-      <TableContainer component={Paper} sx={{ width: \"100%\" }}>\n-        <Table stickyHeader>\n-          <TableHead>\n-            <TableRow>\n-              <TableCell align=\"center\">Advisor Name</TableCell>\n-              <TableCell align=\"center\">Position</TableCell>\n-              <TableCell align=\"center\">Affliation</TableCell>\n-              <TableCell align=\"center\">HomePage</TableCell>\n-              <TableCell align=\"center\">Email</TableCell>\n-              <TableCell align=\"center\">Twitter</TableCell>\n-              <TableCell align=\"center\">GitHub</TableCell>\n-              <TableCell align=\"center\">Collaborations</TableCell>\n-            </TableRow>\n-          </TableHead>\n-          <TableBody>\n-            {advisors.map((advisor) => (\n-              <TableRow key={advisor._id} hover>\n-                <TableCell align=\"center\">{advisor.name}</TableCell>\n-                <TableCell align=\"center\">{advisor.position}</TableCell>\n-                <TableCell align=\"center\">{advisor.affiliation}</TableCell>\n-                <TableCell align=\"center\">\n-                  <Link\n-                    href={advisor.homepage}\n-                    target=\"_blank\"\n-                    rel=\"noopener noreferrer\"\n-                  >\n-                    {advisor.homepage}\n-                  </Link>\n-                </TableCell>\n-                <TableCell align=\"center\">\n-                  <Link href={`mailto:${advisor.email}`}>{advisor.email}</Link>\n-                </TableCell>\n-                <TableCell align=\"center\">\n-                  <Link\n-                    href={advisor.twitter}\n-                    target=\"_blank\"\n-                    rel=\"noopener noreferrer\"\n-                  >\n-                    {advisor.twitter}\n-                  </Link>\n-                </TableCell>\n-                <TableCell align=\"center\">\n-                  <Link\n-                    href={advisor.github}\n-                    target=\"_blank\"\n-                    rel=\"noopener noreferrer\"\n-                  >\n-                    {advisor.github}\n-                  </Link>\n-                </TableCell>\n-                <TableCell align=\"center\">\n-                  {/* Implementation for collaborations and connection cell */}\n-                  {/* You can add a button or link here to navigate to the connection table */}\n-                </TableCell>\n-              </TableRow>\n-            ))}\n-          </TableBody>\n-        </Table>\n-      </TableContainer>\n-    </>\n-  );\n-};\n-\n-export default ListView;\n"
        },
        {
          "date": 1708505042791,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,9 +47,9 @@\n import CloseIcon from \"@mui/icons-material/Close\";\n \n const ListView = ({ onClose }) => {\n   return (\n-    <Box sx={{ width: \"100%\" }}>\n+    <Box sx={{ width: \"90%\" }}>\n       {\" \"}\n       {/* 确保这一层也是充满父元素的 */}\n       <Box\n         sx={{\n"
        },
        {
          "date": 1708505050520,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,133 @@\n+import React, { useEffect, useRef, useState } from \"react\";\n+interface Advisor {\n+  _id: number;\n+  name: string;\n+  affiliation: string;\n+  homepage: string;\n+  twitter: string;\n+  github: string;\n+  email: string;\n+  position: string;\n+  connections: {\n+    _id: number;\n+\n+    relation: Array<{\n+      class: string;\n+      role: string;\n+      duration: {\n+        start: { year: number; month: number };\n+        end: { year: number; month: number };\n+      };\n+    }>;\n+    collaborations: Array<{\n+      papername: string;\n+      year: number;\n+      url: string;\n+    }>;\n+    latestCollaboration: number;\n+    relationFactor: number;\n+  }[];\n+}\n+const advisors: Advisor[] = require(\"../../../../data/advisors.json\");\n+\n+import {\n+  TableContainer,\n+  Table,\n+  TableHead,\n+  TableRow,\n+  TableCell,\n+  TableBody,\n+  Paper,\n+  IconButton,\n+  Typography,\n+  Box,\n+  Link,\n+} from \"@mui/material\";\n+\n+import CloseIcon from \"@mui/icons-material/Close\";\n+\n+const ListView = ({ onClose }) => {\n+  return (\n+    <Box sx={{ width: \"100%\" }}>\n+      {\" \"}\n+      {/* 确保这一层也是充满父元素的 */}\n+      <Box\n+        sx={{\n+          display: \"flex\",\n+          justifyContent: \"space-between\",\n+          alignItems: \"center\",\n+          p: 2,\n+          backgroundColor: \"primary.main\",\n+          color: \"white\",\n+          width: \"100%\",\n+        }}\n+      >\n+        <Typography variant=\"h6\">Main Advisor</Typography>\n+        <IconButton onClick={onClose} color=\"inherit\">\n+          <CloseIcon />\n+        </IconButton>\n+      </Box>\n+      <TableContainer component={Paper} sx={{ width: \"100%\" }}>\n+        <Table stickyHeader>\n+          <TableHead>\n+            <TableRow>\n+              <TableCell align=\"center\">Advisor Name</TableCell>\n+              <TableCell align=\"center\">Position</TableCell>\n+              <TableCell align=\"center\">Affliation</TableCell>\n+              <TableCell align=\"center\">HomePage</TableCell>\n+              <TableCell align=\"center\">Email</TableCell>\n+              <TableCell align=\"center\">Twitter</TableCell>\n+              <TableCell align=\"center\">GitHub</TableCell>\n+              <TableCell align=\"center\">Collaborations</TableCell>\n+            </TableRow>\n+          </TableHead>\n+          <TableBody>\n+            {advisors.map((advisor) => (\n+              <TableRow key={advisor._id} hover>\n+                <TableCell align=\"center\">{advisor.name}</TableCell>\n+                <TableCell align=\"center\">{advisor.position}</TableCell>\n+                <TableCell align=\"center\">{advisor.affiliation}</TableCell>\n+                <TableCell align=\"center\">\n+                  <Link\n+                    href={advisor.homepage}\n+                    target=\"_blank\"\n+                    rel=\"noopener noreferrer\"\n+                  >\n+                    {advisor.homepage}\n+                  </Link>\n+                </TableCell>\n+                <TableCell align=\"center\">\n+                  <Link href={`mailto:${advisor.email}`}>{advisor.email}</Link>\n+                </TableCell>\n+                <TableCell align=\"center\">\n+                  <Link\n+                    href={advisor.twitter}\n+                    target=\"_blank\"\n+                    rel=\"noopener noreferrer\"\n+                  >\n+                    {advisor.twitter}\n+                  </Link>\n+                </TableCell>\n+                <TableCell align=\"center\">\n+                  <Link\n+                    href={advisor.github}\n+                    target=\"_blank\"\n+                    rel=\"noopener noreferrer\"\n+                  >\n+                    {advisor.github}\n+                  </Link>\n+                </TableCell>\n+                <TableCell align=\"center\">\n+                  {/* Implementation for collaborations and connection cell */}\n+                  {/* You can add a button or link here to navigate to the connection table */}\n+                </TableCell>\n+              </TableRow>\n+            ))}\n+          </TableBody>\n+        </Table>\n+      </TableContainer>\n+    </Box>\n+  );\n+};\n+\n+export default ListView;\n"
        },
        {
          "date": 1708505069240,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,9 +47,9 @@\n import CloseIcon from \"@mui/icons-material/Close\";\n \n const ListView = ({ onClose }) => {\n   return (\n-    <Box sx={{ width: \"100%\" }}>\n+    <Box sx={{ width: \"100%\", paddingLeft: 5, paddingRight: 5 }}>\n       {\" \"}\n       {/* 确保这一层也是充满父元素的 */}\n       <Box\n         sx={{\n@@ -130,137 +130,4 @@\n   );\n };\n \n export default ListView;\n-import React, { useEffect, useRef, useState } from \"react\";\n-interface Advisor {\n-  _id: number;\n-  name: string;\n-  affiliation: string;\n-  homepage: string;\n-  twitter: string;\n-  github: string;\n-  email: string;\n-  position: string;\n-  connections: {\n-    _id: number;\n-\n-    relation: Array<{\n-      class: string;\n-      role: string;\n-      duration: {\n-        start: { year: number; month: number };\n-        end: { year: number; month: number };\n-      };\n-    }>;\n-    collaborations: Array<{\n-      papername: string;\n-      year: number;\n-      url: string;\n-    }>;\n-    latestCollaboration: number;\n-    relationFactor: number;\n-  }[];\n-}\n-const advisors: Advisor[] = require(\"../../../../data/advisors.json\");\n-\n-import {\n-  TableContainer,\n-  Table,\n-  TableHead,\n-  TableRow,\n-  TableCell,\n-  TableBody,\n-  Paper,\n-  IconButton,\n-  Typography,\n-  Box,\n-  Link,\n-} from \"@mui/material\";\n-\n-import CloseIcon from \"@mui/icons-material/Close\";\n-\n-const ListView = ({ onClose }) => {\n-  return (\n-    <Box sx={{ width: \"90%\" }}>\n-      {\" \"}\n-      {/* 确保这一层也是充满父元素的 */}\n-      <Box\n-        sx={{\n-          display: \"flex\",\n-          justifyContent: \"space-between\",\n-          alignItems: \"center\",\n-          p: 2,\n-          backgroundColor: \"primary.main\",\n-          color: \"white\",\n-          width: \"100%\",\n-        }}\n-      >\n-        <Typography variant=\"h6\">Main Advisor</Typography>\n-        <IconButton onClick={onClose} color=\"inherit\">\n-          <CloseIcon />\n-        </IconButton>\n-      </Box>\n-      <TableContainer component={Paper} sx={{ width: \"100%\" }}>\n-        <Table stickyHeader>\n-          <TableHead>\n-            <TableRow>\n-              <TableCell align=\"center\">Advisor Name</TableCell>\n-              <TableCell align=\"center\">Position</TableCell>\n-              <TableCell align=\"center\">Affliation</TableCell>\n-              <TableCell align=\"center\">HomePage</TableCell>\n-              <TableCell align=\"center\">Email</TableCell>\n-              <TableCell align=\"center\">Twitter</TableCell>\n-              <TableCell align=\"center\">GitHub</TableCell>\n-              <TableCell align=\"center\">Collaborations</TableCell>\n-            </TableRow>\n-          </TableHead>\n-          <TableBody>\n-            {advisors.map((advisor) => (\n-              <TableRow key={advisor._id} hover>\n-                <TableCell align=\"center\">{advisor.name}</TableCell>\n-                <TableCell align=\"center\">{advisor.position}</TableCell>\n-                <TableCell align=\"center\">{advisor.affiliation}</TableCell>\n-                <TableCell align=\"center\">\n-                  <Link\n-                    href={advisor.homepage}\n-                    target=\"_blank\"\n-                    rel=\"noopener noreferrer\"\n-                  >\n-                    {advisor.homepage}\n-                  </Link>\n-                </TableCell>\n-                <TableCell align=\"center\">\n-                  <Link href={`mailto:${advisor.email}`}>{advisor.email}</Link>\n-                </TableCell>\n-                <TableCell align=\"center\">\n-                  <Link\n-                    href={advisor.twitter}\n-                    target=\"_blank\"\n-                    rel=\"noopener noreferrer\"\n-                  >\n-                    {advisor.twitter}\n-                  </Link>\n-                </TableCell>\n-                <TableCell align=\"center\">\n-                  <Link\n-                    href={advisor.github}\n-                    target=\"_blank\"\n-                    rel=\"noopener noreferrer\"\n-                  >\n-                    {advisor.github}\n-                  </Link>\n-                </TableCell>\n-                <TableCell align=\"center\">\n-                  {/* Implementation for collaborations and connection cell */}\n-                  {/* You can add a button or link here to navigate to the connection table */}\n-                </TableCell>\n-              </TableRow>\n-            ))}\n-          </TableBody>\n-        </Table>\n-      </TableContainer>\n-    </Box>\n-  );\n-};\n-\n-export default ListView;\n"
        },
        {
          "date": 1708505082161,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,9 +47,9 @@\n import CloseIcon from \"@mui/icons-material/Close\";\n \n const ListView = ({ onClose }) => {\n   return (\n-    <Box sx={{ width: \"100%\", paddingLeft: 5, paddingRight: 5 }}>\n+    <Box sx={{ width: \"100%\", paddingLeft: 2, paddingRight: 2 }}>\n       {\" \"}\n       {/* 确保这一层也是充满父元素的 */}\n       <Box\n         sx={{\n"
        },
        {
          "date": 1708505093249,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,133 @@\n+import React, { useEffect, useRef, useState } from \"react\";\n+interface Advisor {\n+  _id: number;\n+  name: string;\n+  affiliation: string;\n+  homepage: string;\n+  twitter: string;\n+  github: string;\n+  email: string;\n+  position: string;\n+  connections: {\n+    _id: number;\n+\n+    relation: Array<{\n+      class: string;\n+      role: string;\n+      duration: {\n+        start: { year: number; month: number };\n+        end: { year: number; month: number };\n+      };\n+    }>;\n+    collaborations: Array<{\n+      papername: string;\n+      year: number;\n+      url: string;\n+    }>;\n+    latestCollaboration: number;\n+    relationFactor: number;\n+  }[];\n+}\n+const advisors: Advisor[] = require(\"../../../../data/advisors.json\");\n+\n+import {\n+  TableContainer,\n+  Table,\n+  TableHead,\n+  TableRow,\n+  TableCell,\n+  TableBody,\n+  Paper,\n+  IconButton,\n+  Typography,\n+  Box,\n+  Link,\n+} from \"@mui/material\";\n+\n+import CloseIcon from \"@mui/icons-material/Close\";\n+\n+const ListView = ({ onClose }) => {\n+  return (\n+    <Box sx={{ width: \"100%\", paddingLeft: 2, paddingRight: 2, paddingTop: 2 }}>\n+      {\" \"}\n+      {/* 确保这一层也是充满父元素的 */}\n+      <Box\n+        sx={{\n+          display: \"flex\",\n+          justifyContent: \"space-between\",\n+          alignItems: \"center\",\n+          p: 2,\n+          backgroundColor: \"primary.main\",\n+          color: \"white\",\n+          width: \"100%\",\n+        }}\n+      >\n+        <Typography variant=\"h6\">Main Advisor</Typography>\n+        <IconButton onClick={onClose} color=\"inherit\">\n+          <CloseIcon />\n+        </IconButton>\n+      </Box>\n+      <TableContainer component={Paper} sx={{ width: \"100%\" }}>\n+        <Table stickyHeader>\n+          <TableHead>\n+            <TableRow>\n+              <TableCell align=\"center\">Advisor Name</TableCell>\n+              <TableCell align=\"center\">Position</TableCell>\n+              <TableCell align=\"center\">Affliation</TableCell>\n+              <TableCell align=\"center\">HomePage</TableCell>\n+              <TableCell align=\"center\">Email</TableCell>\n+              <TableCell align=\"center\">Twitter</TableCell>\n+              <TableCell align=\"center\">GitHub</TableCell>\n+              <TableCell align=\"center\">Collaborations</TableCell>\n+            </TableRow>\n+          </TableHead>\n+          <TableBody>\n+            {advisors.map((advisor) => (\n+              <TableRow key={advisor._id} hover>\n+                <TableCell align=\"center\">{advisor.name}</TableCell>\n+                <TableCell align=\"center\">{advisor.position}</TableCell>\n+                <TableCell align=\"center\">{advisor.affiliation}</TableCell>\n+                <TableCell align=\"center\">\n+                  <Link\n+                    href={advisor.homepage}\n+                    target=\"_blank\"\n+                    rel=\"noopener noreferrer\"\n+                  >\n+                    {advisor.homepage}\n+                  </Link>\n+                </TableCell>\n+                <TableCell align=\"center\">\n+                  <Link href={`mailto:${advisor.email}`}>{advisor.email}</Link>\n+                </TableCell>\n+                <TableCell align=\"center\">\n+                  <Link\n+                    href={advisor.twitter}\n+                    target=\"_blank\"\n+                    rel=\"noopener noreferrer\"\n+                  >\n+                    {advisor.twitter}\n+                  </Link>\n+                </TableCell>\n+                <TableCell align=\"center\">\n+                  <Link\n+                    href={advisor.github}\n+                    target=\"_blank\"\n+                    rel=\"noopener noreferrer\"\n+                  >\n+                    {advisor.github}\n+                  </Link>\n+                </TableCell>\n+                <TableCell align=\"center\">\n+                  {/* Implementation for collaborations and connection cell */}\n+                  {/* You can add a button or link here to navigate to the connection table */}\n+                </TableCell>\n+              </TableRow>\n+            ))}\n+          </TableBody>\n+        </Table>\n+      </TableContainer>\n+    </Box>\n+  );\n+};\n+\n+export default ListView;\n"
        },
        {
          "date": 1708505132999,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,9 +56,8 @@\n           display: \"flex\",\n           justifyContent: \"space-between\",\n           alignItems: \"center\",\n           p: 2,\n-          backgroundColor: \"primary.main\",\n           color: \"white\",\n           width: \"100%\",\n         }}\n       >\n@@ -130,137 +129,4 @@\n   );\n };\n \n export default ListView;\n-import React, { useEffect, useRef, useState } from \"react\";\n-interface Advisor {\n-  _id: number;\n-  name: string;\n-  affiliation: string;\n-  homepage: string;\n-  twitter: string;\n-  github: string;\n-  email: string;\n-  position: string;\n-  connections: {\n-    _id: number;\n-\n-    relation: Array<{\n-      class: string;\n-      role: string;\n-      duration: {\n-        start: { year: number; month: number };\n-        end: { year: number; month: number };\n-      };\n-    }>;\n-    collaborations: Array<{\n-      papername: string;\n-      year: number;\n-      url: string;\n-    }>;\n-    latestCollaboration: number;\n-    relationFactor: number;\n-  }[];\n-}\n-const advisors: Advisor[] = require(\"../../../../data/advisors.json\");\n-\n-import {\n-  TableContainer,\n-  Table,\n-  TableHead,\n-  TableRow,\n-  TableCell,\n-  TableBody,\n-  Paper,\n-  IconButton,\n-  Typography,\n-  Box,\n-  Link,\n-} from \"@mui/material\";\n-\n-import CloseIcon from \"@mui/icons-material/Close\";\n-\n-const ListView = ({ onClose }) => {\n-  return (\n-    <Box sx={{ width: \"100%\", paddingLeft: 2, paddingRight: 2 }}>\n-      {\" \"}\n-      {/* 确保这一层也是充满父元素的 */}\n-      <Box\n-        sx={{\n-          display: \"flex\",\n-          justifyContent: \"space-between\",\n-          alignItems: \"center\",\n-          p: 2,\n-          backgroundColor: \"primary.main\",\n-          color: \"white\",\n-          width: \"100%\",\n-        }}\n-      >\n-        <Typography variant=\"h6\">Main Advisor</Typography>\n-        <IconButton onClick={onClose} color=\"inherit\">\n-          <CloseIcon />\n-        </IconButton>\n-      </Box>\n-      <TableContainer component={Paper} sx={{ width: \"100%\" }}>\n-        <Table stickyHeader>\n-          <TableHead>\n-            <TableRow>\n-              <TableCell align=\"center\">Advisor Name</TableCell>\n-              <TableCell align=\"center\">Position</TableCell>\n-              <TableCell align=\"center\">Affliation</TableCell>\n-              <TableCell align=\"center\">HomePage</TableCell>\n-              <TableCell align=\"center\">Email</TableCell>\n-              <TableCell align=\"center\">Twitter</TableCell>\n-              <TableCell align=\"center\">GitHub</TableCell>\n-              <TableCell align=\"center\">Collaborations</TableCell>\n-            </TableRow>\n-          </TableHead>\n-          <TableBody>\n-            {advisors.map((advisor) => (\n-              <TableRow key={advisor._id} hover>\n-                <TableCell align=\"center\">{advisor.name}</TableCell>\n-                <TableCell align=\"center\">{advisor.position}</TableCell>\n-                <TableCell align=\"center\">{advisor.affiliation}</TableCell>\n-                <TableCell align=\"center\">\n-                  <Link\n-                    href={advisor.homepage}\n-                    target=\"_blank\"\n-                    rel=\"noopener noreferrer\"\n-                  >\n-                    {advisor.homepage}\n-                  </Link>\n-                </TableCell>\n-                <TableCell align=\"center\">\n-                  <Link href={`mailto:${advisor.email}`}>{advisor.email}</Link>\n-                </TableCell>\n-                <TableCell align=\"center\">\n-                  <Link\n-                    href={advisor.twitter}\n-                    target=\"_blank\"\n-                    rel=\"noopener noreferrer\"\n-                  >\n-                    {advisor.twitter}\n-                  </Link>\n-                </TableCell>\n-                <TableCell align=\"center\">\n-                  <Link\n-                    href={advisor.github}\n-                    target=\"_blank\"\n-                    rel=\"noopener noreferrer\"\n-                  >\n-                    {advisor.github}\n-                  </Link>\n-                </TableCell>\n-                <TableCell align=\"center\">\n-                  {/* Implementation for collaborations and connection cell */}\n-                  {/* You can add a button or link here to navigate to the connection table */}\n-                </TableCell>\n-              </TableRow>\n-            ))}\n-          </TableBody>\n-        </Table>\n-      </TableContainer>\n-    </Box>\n-  );\n-};\n-\n-export default ListView;\n"
        },
        {
          "date": 1708505140610,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,9 +56,8 @@\n           display: \"flex\",\n           justifyContent: \"space-between\",\n           alignItems: \"center\",\n           p: 2,\n-          color: \"white\",\n           width: \"100%\",\n         }}\n       >\n         <Typography variant=\"h6\">Main Advisor</Typography>\n"
        },
        {
          "date": 1708505235253,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,131 @@\n+import React, { useEffect, useRef, useState } from \"react\";\n+interface Advisor {\n+  _id: number;\n+  name: string;\n+  affiliation: string;\n+  homepage: string;\n+  twitter: string;\n+  github: string;\n+  email: string;\n+  position: string;\n+  connections: {\n+    _id: number;\n+\n+    relation: Array<{\n+      class: string;\n+      role: string;\n+      duration: {\n+        start: { year: number; month: number };\n+        end: { year: number; month: number };\n+      };\n+    }>;\n+    collaborations: Array<{\n+      papername: string;\n+      year: number;\n+      url: string;\n+    }>;\n+    latestCollaboration: number;\n+    relationFactor: number;\n+  }[];\n+}\n+const advisors: Advisor[] = require(\"../../../../data/advisors.json\");\n+\n+import {\n+  TableContainer,\n+  Table,\n+  TableHead,\n+  TableRow,\n+  TableCell,\n+  TableBody,\n+  Paper,\n+  IconButton,\n+  Typography,\n+  Box,\n+  Link,\n+} from \"@mui/material\";\n+\n+import CloseIcon from \"@mui/icons-material/Close\";\n+\n+const ListView = ({ onClose: any }) => {\n+  return (\n+    <Box sx={{ width: \"100%\", paddingLeft: 2, paddingRight: 2, paddingTop: 2 }}>\n+      {\" \"}\n+      {/* 确保这一层也是充满父元素的 */}\n+      <Box\n+        sx={{\n+          display: \"flex\",\n+          justifyContent: \"space-between\",\n+          alignItems: \"center\",\n+          p: 2,\n+          width: \"100%\",\n+        }}\n+      >\n+        <Typography variant=\"h6\">Main Advisor</Typography>\n+        <IconButton onClick={onClose} color=\"inherit\">\n+          <CloseIcon />\n+        </IconButton>\n+      </Box>\n+      <TableContainer component={Paper} sx={{ width: \"100%\" }}>\n+        <Table stickyHeader>\n+          <TableHead>\n+            <TableRow>\n+              <TableCell align=\"center\">Advisor Name</TableCell>\n+              <TableCell align=\"center\">Position</TableCell>\n+              <TableCell align=\"center\">Affliation</TableCell>\n+              <TableCell align=\"center\">HomePage</TableCell>\n+              <TableCell align=\"center\">Email</TableCell>\n+              <TableCell align=\"center\">Twitter</TableCell>\n+              <TableCell align=\"center\">GitHub</TableCell>\n+              <TableCell align=\"center\">Collaborations</TableCell>\n+            </TableRow>\n+          </TableHead>\n+          <TableBody>\n+            {advisors.map((advisor) => (\n+              <TableRow key={advisor._id} hover>\n+                <TableCell align=\"center\">{advisor.name}</TableCell>\n+                <TableCell align=\"center\">{advisor.position}</TableCell>\n+                <TableCell align=\"center\">{advisor.affiliation}</TableCell>\n+                <TableCell align=\"center\">\n+                  <Link\n+                    href={advisor.homepage}\n+                    target=\"_blank\"\n+                    rel=\"noopener noreferrer\"\n+                  >\n+                    {advisor.homepage}\n+                  </Link>\n+                </TableCell>\n+                <TableCell align=\"center\">\n+                  <Link href={`mailto:${advisor.email}`}>{advisor.email}</Link>\n+                </TableCell>\n+                <TableCell align=\"center\">\n+                  <Link\n+                    href={advisor.twitter}\n+                    target=\"_blank\"\n+                    rel=\"noopener noreferrer\"\n+                  >\n+                    {advisor.twitter}\n+                  </Link>\n+                </TableCell>\n+                <TableCell align=\"center\">\n+                  <Link\n+                    href={advisor.github}\n+                    target=\"_blank\"\n+                    rel=\"noopener noreferrer\"\n+                  >\n+                    {advisor.github}\n+                  </Link>\n+                </TableCell>\n+                <TableCell align=\"center\">\n+                  {/* Implementation for collaborations and connection cell */}\n+                  {/* You can add a button or link here to navigate to the connection table */}\n+                </TableCell>\n+              </TableRow>\n+            ))}\n+          </TableBody>\n+        </Table>\n+      </TableContainer>\n+    </Box>\n+  );\n+};\n+\n+export default ListView;\n"
        },
        {
          "date": 1708505242639,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,139 +45,9 @@\n } from \"@mui/material\";\n \n import CloseIcon from \"@mui/icons-material/Close\";\n \n-const ListView = ({ onClose: any }) => {\n-  return (\n-    <Box sx={{ width: \"100%\", paddingLeft: 2, paddingRight: 2, paddingTop: 2 }}>\n-      {\" \"}\n-      {/* 确保这一层也是充满父元素的 */}\n-      <Box\n-        sx={{\n-          display: \"flex\",\n-          justifyContent: \"space-between\",\n-          alignItems: \"center\",\n-          p: 2,\n-          width: \"100%\",\n-        }}\n-      >\n-        <Typography variant=\"h6\">Main Advisor</Typography>\n-        <IconButton onClick={onClose} color=\"inherit\">\n-          <CloseIcon />\n-        </IconButton>\n-      </Box>\n-      <TableContainer component={Paper} sx={{ width: \"100%\" }}>\n-        <Table stickyHeader>\n-          <TableHead>\n-            <TableRow>\n-              <TableCell align=\"center\">Advisor Name</TableCell>\n-              <TableCell align=\"center\">Position</TableCell>\n-              <TableCell align=\"center\">Affliation</TableCell>\n-              <TableCell align=\"center\">HomePage</TableCell>\n-              <TableCell align=\"center\">Email</TableCell>\n-              <TableCell align=\"center\">Twitter</TableCell>\n-              <TableCell align=\"center\">GitHub</TableCell>\n-              <TableCell align=\"center\">Collaborations</TableCell>\n-            </TableRow>\n-          </TableHead>\n-          <TableBody>\n-            {advisors.map((advisor) => (\n-              <TableRow key={advisor._id} hover>\n-                <TableCell align=\"center\">{advisor.name}</TableCell>\n-                <TableCell align=\"center\">{advisor.position}</TableCell>\n-                <TableCell align=\"center\">{advisor.affiliation}</TableCell>\n-                <TableCell align=\"center\">\n-                  <Link\n-                    href={advisor.homepage}\n-                    target=\"_blank\"\n-                    rel=\"noopener noreferrer\"\n-                  >\n-                    {advisor.homepage}\n-                  </Link>\n-                </TableCell>\n-                <TableCell align=\"center\">\n-                  <Link href={`mailto:${advisor.email}`}>{advisor.email}</Link>\n-                </TableCell>\n-                <TableCell align=\"center\">\n-                  <Link\n-                    href={advisor.twitter}\n-                    target=\"_blank\"\n-                    rel=\"noopener noreferrer\"\n-                  >\n-                    {advisor.twitter}\n-                  </Link>\n-                </TableCell>\n-                <TableCell align=\"center\">\n-                  <Link\n-                    href={advisor.github}\n-                    target=\"_blank\"\n-                    rel=\"noopener noreferrer\"\n-                  >\n-                    {advisor.github}\n-                  </Link>\n-                </TableCell>\n-                <TableCell align=\"center\">\n-                  {/* Implementation for collaborations and connection cell */}\n-                  {/* You can add a button or link here to navigate to the connection table */}\n-                </TableCell>\n-              </TableRow>\n-            ))}\n-          </TableBody>\n-        </Table>\n-      </TableContainer>\n-    </Box>\n-  );\n-};\n-\n-export default ListView;\n-import React, { useEffect, useRef, useState } from \"react\";\n-interface Advisor {\n-  _id: number;\n-  name: string;\n-  affiliation: string;\n-  homepage: string;\n-  twitter: string;\n-  github: string;\n-  email: string;\n-  position: string;\n-  connections: {\n-    _id: number;\n-\n-    relation: Array<{\n-      class: string;\n-      role: string;\n-      duration: {\n-        start: { year: number; month: number };\n-        end: { year: number; month: number };\n-      };\n-    }>;\n-    collaborations: Array<{\n-      papername: string;\n-      year: number;\n-      url: string;\n-    }>;\n-    latestCollaboration: number;\n-    relationFactor: number;\n-  }[];\n-}\n-const advisors: Advisor[] = require(\"../../../../data/advisors.json\");\n-\n-import {\n-  TableContainer,\n-  Table,\n-  TableHead,\n-  TableRow,\n-  TableCell,\n-  TableBody,\n-  Paper,\n-  IconButton,\n-  Typography,\n-  Box,\n-  Link,\n-} from \"@mui/material\";\n-\n-import CloseIcon from \"@mui/icons-material/Close\";\n-\n+//@ts-ignore\n const ListView = ({ onClose }) => {\n   return (\n     <Box sx={{ width: \"100%\", paddingLeft: 2, paddingRight: 2, paddingTop: 2 }}>\n       {\" \"}\n"
        },
        {
          "date": 1708505275054,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,9 +66,9 @@\n           <CloseIcon />\n         </IconButton>\n       </Box>\n       <TableContainer component={Paper} sx={{ width: \"100%\" }}>\n-        <Table stickyHeader>\n+        <Table stickyHeader sx={{ border: \"none\" }}>\n           <TableHead>\n             <TableRow>\n               <TableCell align=\"center\">Advisor Name</TableCell>\n               <TableCell align=\"center\">Position</TableCell>\n"
        },
        {
          "date": 1708505288670,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,132 @@\n+import React, { useEffect, useRef, useState } from \"react\";\n+interface Advisor {\n+  _id: number;\n+  name: string;\n+  affiliation: string;\n+  homepage: string;\n+  twitter: string;\n+  github: string;\n+  email: string;\n+  position: string;\n+  connections: {\n+    _id: number;\n+\n+    relation: Array<{\n+      class: string;\n+      role: string;\n+      duration: {\n+        start: { year: number; month: number };\n+        end: { year: number; month: number };\n+      };\n+    }>;\n+    collaborations: Array<{\n+      papername: string;\n+      year: number;\n+      url: string;\n+    }>;\n+    latestCollaboration: number;\n+    relationFactor: number;\n+  }[];\n+}\n+const advisors: Advisor[] = require(\"../../../../data/advisors.json\");\n+\n+import {\n+  TableContainer,\n+  Table,\n+  TableHead,\n+  TableRow,\n+  TableCell,\n+  TableBody,\n+  Paper,\n+  IconButton,\n+  Typography,\n+  Box,\n+  Link,\n+} from \"@mui/material\";\n+\n+import CloseIcon from \"@mui/icons-material/Close\";\n+\n+//@ts-ignore\n+const ListView = ({ onClose }) => {\n+  return (\n+    <Box sx={{ width: \"100%\", paddingLeft: 2, paddingRight: 2, paddingTop: 2 }}>\n+      {\" \"}\n+      {/* 确保这一层也是充满父元素的 */}\n+      <Box\n+        sx={{\n+          display: \"flex\",\n+          justifyContent: \"space-between\",\n+          alignItems: \"center\",\n+          p: 2,\n+          width: \"100%\",\n+        }}\n+      >\n+        <Typography variant=\"h6\">Main Advisor</Typography>\n+        <IconButton onClick={onClose} color=\"inherit\">\n+          <CloseIcon />\n+        </IconButton>\n+      </Box>\n+      <TableContainer component={Paper} sx={{ width: \"100%\" }}>\n+        <Table stickyHeader sx={{ border: \"none\" }}>\n+          <TableHead>\n+            <TableRow>\n+              <TableCell align=\"center\">Advisor Name</TableCell>\n+              <TableCell align=\"center\">Position</TableCell>\n+              <TableCell align=\"center\">Affliation</TableCell>\n+              <TableCell align=\"center\">HomePage</TableCell>\n+              <TableCell align=\"center\">Email</TableCell>\n+              <TableCell align=\"center\">Twitter</TableCell>\n+              <TableCell align=\"center\">GitHub</TableCell>\n+              <TableCell align=\"center\">Collaborations</TableCell>\n+            </TableRow>\n+          </TableHead>\n+          <TableBody>\n+            {advisors.map((advisor) => (\n+              <TableRow key={advisor._id} hover>\n+                <TableCell align=\"center\">{advisor.name}</TableCell>\n+                <TableCell align=\"center\">{advisor.position}</TableCell>\n+                <TableCell align=\"center\">{advisor.affiliation}</TableCell>\n+                <TableCell align=\"center\">\n+                  <Link\n+                    href={advisor.homepage}\n+                    target=\"_blank\"\n+                    rel=\"noopener noreferrer\"\n+                  >\n+                    {advisor.homepage}\n+                  </Link>\n+                </TableCell>\n+                <TableCell align=\"center\">\n+                  <Link href={`mailto:${advisor.email}`}>{advisor.email}</Link>\n+                </TableCell>\n+                <TableCell align=\"center\">\n+                  <Link\n+                    href={advisor.twitter}\n+                    target=\"_blank\"\n+                    rel=\"noopener noreferrer\"\n+                  >\n+                    {advisor.twitter}\n+                  </Link>\n+                </TableCell>\n+                <TableCell align=\"center\">\n+                  <Link\n+                    href={advisor.github}\n+                    target=\"_blank\"\n+                    rel=\"noopener noreferrer\"\n+                  >\n+                    {advisor.github}\n+                  </Link>\n+                </TableCell>\n+                <TableCell align=\"center\">\n+                  {/* Implementation for collaborations and connection cell */}\n+                  {/* You can add a button or link here to navigate to the connection table */}\n+                </TableCell>\n+              </TableRow>\n+            ))}\n+          </TableBody>\n+        </Table>\n+      </TableContainer>\n+    </Box>\n+  );\n+};\n+\n+export default ListView;\n"
        },
        {
          "date": 1708505300990,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,132 @@\n+import React, { useEffect, useRef, useState } from \"react\";\n+interface Advisor {\n+  _id: number;\n+  name: string;\n+  affiliation: string;\n+  homepage: string;\n+  twitter: string;\n+  github: string;\n+  email: string;\n+  position: string;\n+  connections: {\n+    _id: number;\n+\n+    relation: Array<{\n+      class: string;\n+      role: string;\n+      duration: {\n+        start: { year: number; month: number };\n+        end: { year: number; month: number };\n+      };\n+    }>;\n+    collaborations: Array<{\n+      papername: string;\n+      year: number;\n+      url: string;\n+    }>;\n+    latestCollaboration: number;\n+    relationFactor: number;\n+  }[];\n+}\n+const advisors: Advisor[] = require(\"../../../../data/advisors.json\");\n+\n+import {\n+  TableContainer,\n+  Table,\n+  TableHead,\n+  TableRow,\n+  TableCell,\n+  TableBody,\n+  Paper,\n+  IconButton,\n+  Typography,\n+  Box,\n+  Link,\n+} from \"@mui/material\";\n+\n+import CloseIcon from \"@mui/icons-material/Close\";\n+\n+//@ts-ignore\n+const ListView = ({ onClose }) => {\n+  return (\n+    <Box sx={{ width: \"100%\", paddingLeft: 2, paddingRight: 2, paddingTop: 2 }}>\n+      {\" \"}\n+      {/* 确保这一层也是充满父元素的 */}\n+      <Box\n+        sx={{\n+          display: \"flex\",\n+          justifyContent: \"space-between\",\n+          alignItems: \"center\",\n+          p: 2,\n+          width: \"100%\",\n+        }}\n+      >\n+        <Typography variant=\"h6\">Main Advisor</Typography>\n+        <IconButton onClick={onClose} color=\"inherit\">\n+          <CloseIcon />\n+        </IconButton>\n+      </Box>\n+      <TableContainer component={Paper} sx={{ width: \"100%\" }}>\n+        <Table stickyHeader>\n+          <TableHead>\n+            <TableRow>\n+              <TableCell align=\"center\">Advisor Name</TableCell>\n+              <TableCell align=\"center\">Position</TableCell>\n+              <TableCell align=\"center\">Affliation</TableCell>\n+              <TableCell align=\"center\">HomePage</TableCell>\n+              <TableCell align=\"center\">Email</TableCell>\n+              <TableCell align=\"center\">Twitter</TableCell>\n+              <TableCell align=\"center\">GitHub</TableCell>\n+              <TableCell align=\"center\">Collaborations</TableCell>\n+            </TableRow>\n+          </TableHead>\n+          <TableBody>\n+            {advisors.map((advisor) => (\n+              <TableRow key={advisor._id} hover>\n+                <TableCell align=\"center\">{advisor.name}</TableCell>\n+                <TableCell align=\"center\">{advisor.position}</TableCell>\n+                <TableCell align=\"center\">{advisor.affiliation}</TableCell>\n+                <TableCell align=\"center\">\n+                  <Link\n+                    href={advisor.homepage}\n+                    target=\"_blank\"\n+                    rel=\"noopener noreferrer\"\n+                  >\n+                    {advisor.homepage}\n+                  </Link>\n+                </TableCell>\n+                <TableCell align=\"center\">\n+                  <Link href={`mailto:${advisor.email}`}>{advisor.email}</Link>\n+                </TableCell>\n+                <TableCell align=\"center\">\n+                  <Link\n+                    href={advisor.twitter}\n+                    target=\"_blank\"\n+                    rel=\"noopener noreferrer\"\n+                  >\n+                    {advisor.twitter}\n+                  </Link>\n+                </TableCell>\n+                <TableCell align=\"center\">\n+                  <Link\n+                    href={advisor.github}\n+                    target=\"_blank\"\n+                    rel=\"noopener noreferrer\"\n+                  >\n+                    {advisor.github}\n+                  </Link>\n+                </TableCell>\n+                <TableCell align=\"center\">\n+                  {/* Implementation for collaborations and connection cell */}\n+                  {/* You can add a button or link here to navigate to the connection table */}\n+                </TableCell>\n+              </TableRow>\n+            ))}\n+          </TableBody>\n+        </Table>\n+      </TableContainer>\n+    </Box>\n+  );\n+};\n+\n+export default ListView;\n"
        },
        {
          "date": 1708505368421,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,132 @@\n+import React, { useEffect, useRef, useState } from \"react\";\n+interface Advisor {\n+  _id: number;\n+  name: string;\n+  affiliation: string;\n+  homepage: string;\n+  twitter: string;\n+  github: string;\n+  email: string;\n+  position: string;\n+  connections: {\n+    _id: number;\n+\n+    relation: Array<{\n+      class: string;\n+      role: string;\n+      duration: {\n+        start: { year: number; month: number };\n+        end: { year: number; month: number };\n+      };\n+    }>;\n+    collaborations: Array<{\n+      papername: string;\n+      year: number;\n+      url: string;\n+    }>;\n+    latestCollaboration: number;\n+    relationFactor: number;\n+  }[];\n+}\n+const advisors: Advisor[] = require(\"../../../../data/advisors.json\");\n+\n+import {\n+  TableContainer,\n+  Table,\n+  TableHead,\n+  TableRow,\n+  TableCell,\n+  TableBody,\n+  Paper,\n+  IconButton,\n+  Typography,\n+  Box,\n+  Link,\n+} from \"@mui/material\";\n+\n+import CloseIcon from \"@mui/icons-material/Close\";\n+\n+//@ts-ignore\n+const ListView = ({ onClose }) => {\n+  return (\n+    <Box sx={{ width: \"100%\", paddingLeft: 2, paddingRight: 2, paddingTop: 2 }}>\n+      {\" \"}\n+      {/* 确保这一层也是充满父元素的 */}\n+      <Box\n+        sx={{\n+          display: \"flex\",\n+          justifyContent: \"space-between\",\n+          alignItems: \"center\",\n+          p: 2,\n+          width: \"100%\",\n+        }}\n+      >\n+        <Typography variant=\"h6\">Main Advisor</Typography>\n+        <IconButton onClick={onClose} color=\"inherit\">\n+          <CloseIcon />\n+        </IconButton>\n+      </Box>\n+      <TableContainer component={Paper} sx={{ width: \"100%\" }}>\n+        <Table stickyHeader>\n+          <TableHead>\n+            <TableRow>\n+              <TableCell align=\"center\">Advisor Name</TableCell>\n+              <TableCell align=\"center\">Position</TableCell>\n+              <TableCell align=\"center\">Affliation</TableCell>\n+              <TableCell align=\"center\">HomePage</TableCell>\n+              <TableCell align=\"center\">Email</TableCell>\n+              <TableCell align=\"center\">Twitter</TableCell>\n+              <TableCell align=\"center\">GitHub</TableCell>\n+              <TableCell align=\"center\">Collaborations</TableCell>\n+            </TableRow>\n+          </TableHead>\n+          <TableBody>\n+            {advisors.map((advisor) => (\n+              <TableRow sx={{ border: \"none\" }} key={advisor._id} hover>\n+                <TableCell align=\"center\">{advisor.name}</TableCell>\n+                <TableCell align=\"center\">{advisor.position}</TableCell>\n+                <TableCell align=\"center\">{advisor.affiliation}</TableCell>\n+                <TableCell align=\"center\">\n+                  <Link\n+                    href={advisor.homepage}\n+                    target=\"_blank\"\n+                    rel=\"noopener noreferrer\"\n+                  >\n+                    {advisor.homepage}\n+                  </Link>\n+                </TableCell>\n+                <TableCell align=\"center\">\n+                  <Link href={`mailto:${advisor.email}`}>{advisor.email}</Link>\n+                </TableCell>\n+                <TableCell align=\"center\">\n+                  <Link\n+                    href={advisor.twitter}\n+                    target=\"_blank\"\n+                    rel=\"noopener noreferrer\"\n+                  >\n+                    {advisor.twitter}\n+                  </Link>\n+                </TableCell>\n+                <TableCell align=\"center\">\n+                  <Link\n+                    href={advisor.github}\n+                    target=\"_blank\"\n+                    rel=\"noopener noreferrer\"\n+                  >\n+                    {advisor.github}\n+                  </Link>\n+                </TableCell>\n+                <TableCell align=\"center\">\n+                  {/* Implementation for collaborations and connection cell */}\n+                  {/* You can add a button or link here to navigate to the connection table */}\n+                </TableCell>\n+              </TableRow>\n+            ))}\n+          </TableBody>\n+        </Table>\n+      </TableContainer>\n+    </Box>\n+  );\n+};\n+\n+export default ListView;\n"
        },
        {
          "date": 1708505377694,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,132 @@\n+import React, { useEffect, useRef, useState } from \"react\";\n+interface Advisor {\n+  _id: number;\n+  name: string;\n+  affiliation: string;\n+  homepage: string;\n+  twitter: string;\n+  github: string;\n+  email: string;\n+  position: string;\n+  connections: {\n+    _id: number;\n+\n+    relation: Array<{\n+      class: string;\n+      role: string;\n+      duration: {\n+        start: { year: number; month: number };\n+        end: { year: number; month: number };\n+      };\n+    }>;\n+    collaborations: Array<{\n+      papername: string;\n+      year: number;\n+      url: string;\n+    }>;\n+    latestCollaboration: number;\n+    relationFactor: number;\n+  }[];\n+}\n+const advisors: Advisor[] = require(\"../../../../data/advisors.json\");\n+\n+import {\n+  TableContainer,\n+  Table,\n+  TableHead,\n+  TableRow,\n+  TableCell,\n+  TableBody,\n+  Paper,\n+  IconButton,\n+  Typography,\n+  Box,\n+  Link,\n+} from \"@mui/material\";\n+\n+import CloseIcon from \"@mui/icons-material/Close\";\n+\n+//@ts-ignore\n+const ListView = ({ onClose }) => {\n+  return (\n+    <Box sx={{ width: \"100%\", paddingLeft: 2, paddingRight: 2, paddingTop: 2 }}>\n+      {\" \"}\n+      {/* 确保这一层也是充满父元素的 */}\n+      <Box\n+        sx={{\n+          display: \"flex\",\n+          justifyContent: \"space-between\",\n+          alignItems: \"center\",\n+          p: 2,\n+          width: \"100%\",\n+        }}\n+      >\n+        <Typography variant=\"h6\">Main Advisor</Typography>\n+        <IconButton onClick={onClose} color=\"inherit\">\n+          <CloseIcon />\n+        </IconButton>\n+      </Box>\n+      <TableContainer component={Paper} sx={{ width: \"100%\" }}>\n+        <Table stickyHeader>\n+          <TableHead>\n+            <TableRow>\n+              <TableCell align=\"center\">Advisor Name</TableCell>\n+              <TableCell align=\"center\">Position</TableCell>\n+              <TableCell align=\"center\">Affliation</TableCell>\n+              <TableCell align=\"center\">HomePage</TableCell>\n+              <TableCell align=\"center\">Email</TableCell>\n+              <TableCell align=\"center\">Twitter</TableCell>\n+              <TableCell align=\"center\">GitHub</TableCell>\n+              <TableCell align=\"center\">Collaborations</TableCell>\n+            </TableRow>\n+          </TableHead>\n+          <TableBody>\n+            {advisors.map((advisor) => (\n+              <TableRow sx={{ border: \"none\" }} key={advisor._id} hover>\n+                <TableCell align=\"center sx={{ border: \"none\" }}>{advisor.name}</TableCell>\n+                <TableCell align=\"center\">{advisor.position}</TableCell>\n+                <TableCell align=\"center\">{advisor.affiliation}</TableCell>\n+                <TableCell align=\"center\">\n+                  <Link\n+                    href={advisor.homepage}\n+                    target=\"_blank\"\n+                    rel=\"noopener noreferrer\"\n+                  >\n+                    {advisor.homepage}\n+                  </Link>\n+                </TableCell>\n+                <TableCell align=\"center\">\n+                  <Link href={`mailto:${advisor.email}`}>{advisor.email}</Link>\n+                </TableCell>\n+                <TableCell align=\"center\">\n+                  <Link\n+                    href={advisor.twitter}\n+                    target=\"_blank\"\n+                    rel=\"noopener noreferrer\"\n+                  >\n+                    {advisor.twitter}\n+                  </Link>\n+                </TableCell>\n+                <TableCell align=\"center\">\n+                  <Link\n+                    href={advisor.github}\n+                    target=\"_blank\"\n+                    rel=\"noopener noreferrer\"\n+                  >\n+                    {advisor.github}\n+                  </Link>\n+                </TableCell>\n+                <TableCell align=\"center\">\n+                  {/* Implementation for collaborations and connection cell */}\n+                  {/* You can add a button or link here to navigate to the connection table */}\n+                </TableCell>\n+              </TableRow>\n+            ))}\n+          </TableBody>\n+        </Table>\n+      </TableContainer>\n+    </Box>\n+  );\n+};\n+\n+export default ListView;\n"
        },
        {
          "date": 1708505383556,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,9 +82,9 @@\n           </TableHead>\n           <TableBody>\n             {advisors.map((advisor) => (\n               <TableRow sx={{ border: \"none\" }} key={advisor._id} hover>\n-                <TableCell align=\"center sx={{ border: \"none\" }}>{advisor.name}</TableCell>\n+                <TableCell align=\"center >{advisor.name}</TableCell>\n                 <TableCell align=\"center\">{advisor.position}</TableCell>\n                 <TableCell align=\"center\">{advisor.affiliation}</TableCell>\n                 <TableCell align=\"center\">\n                   <Link\n"
        },
        {
          "date": 1708505390728,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,134 @@\n+import React, { useEffect, useRef, useState } from \"react\";\n+interface Advisor {\n+  _id: number;\n+  name: string;\n+  affiliation: string;\n+  homepage: string;\n+  twitter: string;\n+  github: string;\n+  email: string;\n+  position: string;\n+  connections: {\n+    _id: number;\n+\n+    relation: Array<{\n+      class: string;\n+      role: string;\n+      duration: {\n+        start: { year: number; month: number };\n+        end: { year: number; month: number };\n+      };\n+    }>;\n+    collaborations: Array<{\n+      papername: string;\n+      year: number;\n+      url: string;\n+    }>;\n+    latestCollaboration: number;\n+    relationFactor: number;\n+  }[];\n+}\n+const advisors: Advisor[] = require(\"../../../../data/advisors.json\");\n+\n+import {\n+  TableContainer,\n+  Table,\n+  TableHead,\n+  TableRow,\n+  TableCell,\n+  TableBody,\n+  Paper,\n+  IconButton,\n+  Typography,\n+  Box,\n+  Link,\n+} from \"@mui/material\";\n+\n+import CloseIcon from \"@mui/icons-material/Close\";\n+\n+//@ts-ignore\n+const ListView = ({ onClose }) => {\n+  return (\n+    <Box sx={{ width: \"100%\", paddingLeft: 2, paddingRight: 2, paddingTop: 2 }}>\n+      {\" \"}\n+      {/* 确保这一层也是充满父元素的 */}\n+      <Box\n+        sx={{\n+          display: \"flex\",\n+          justifyContent: \"space-between\",\n+          alignItems: \"center\",\n+          p: 2,\n+          width: \"100%\",\n+        }}\n+      >\n+        <Typography variant=\"h6\">Main Advisor</Typography>\n+        <IconButton onClick={onClose} color=\"inherit\">\n+          <CloseIcon />\n+        </IconButton>\n+      </Box>\n+      <TableContainer component={Paper} sx={{ width: \"100%\" }}>\n+        <Table stickyHeader>\n+          <TableHead>\n+            <TableRow>\n+              <TableCell align=\"center\">Advisor Name</TableCell>\n+              <TableCell align=\"center\">Position</TableCell>\n+              <TableCell align=\"center\">Affliation</TableCell>\n+              <TableCell align=\"center\">HomePage</TableCell>\n+              <TableCell align=\"center\">Email</TableCell>\n+              <TableCell align=\"center\">Twitter</TableCell>\n+              <TableCell align=\"center\">GitHub</TableCell>\n+              <TableCell align=\"center\">Collaborations</TableCell>\n+            </TableRow>\n+          </TableHead>\n+          <TableBody>\n+            {advisors.map((advisor) => (\n+              <TableRow sx={{ border: \"none\" }} key={advisor._id} hover>\n+                <TableCell align=\"center\" sx={{ border: \"none\" }}>\n+                  {advisor.name}\n+                </TableCell>\n+                <TableCell align=\"center\">{advisor.position}</TableCell>\n+                <TableCell align=\"center\">{advisor.affiliation}</TableCell>\n+                <TableCell align=\"center\">\n+                  <Link\n+                    href={advisor.homepage}\n+                    target=\"_blank\"\n+                    rel=\"noopener noreferrer\"\n+                  >\n+                    {advisor.homepage}\n+                  </Link>\n+                </TableCell>\n+                <TableCell align=\"center\">\n+                  <Link href={`mailto:${advisor.email}`}>{advisor.email}</Link>\n+                </TableCell>\n+                <TableCell align=\"center\">\n+                  <Link\n+                    href={advisor.twitter}\n+                    target=\"_blank\"\n+                    rel=\"noopener noreferrer\"\n+                  >\n+                    {advisor.twitter}\n+                  </Link>\n+                </TableCell>\n+                <TableCell align=\"center\">\n+                  <Link\n+                    href={advisor.github}\n+                    target=\"_blank\"\n+                    rel=\"noopener noreferrer\"\n+                  >\n+                    {advisor.github}\n+                  </Link>\n+                </TableCell>\n+                <TableCell align=\"center\">\n+                  {/* Implementation for collaborations and connection cell */}\n+                  {/* You can add a button or link here to navigate to the connection table */}\n+                </TableCell>\n+              </TableRow>\n+            ))}\n+          </TableBody>\n+        </Table>\n+      </TableContainer>\n+    </Box>\n+  );\n+};\n+\n+export default ListView;\n"
        },
        {
          "date": 1708505400386,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,274 +82,8 @@\n           </TableHead>\n           <TableBody>\n             {advisors.map((advisor) => (\n               <TableRow sx={{ border: \"none\" }} key={advisor._id} hover>\n-                <TableCell align=\"center\" sx={{ border: \"none\" }}>\n-                  {advisor.name}\n-                </TableCell>\n-                <TableCell align=\"center\">{advisor.position}</TableCell>\n-                <TableCell align=\"center\">{advisor.affiliation}</TableCell>\n-                <TableCell align=\"center\">\n-                  <Link\n-                    href={advisor.homepage}\n-                    target=\"_blank\"\n-                    rel=\"noopener noreferrer\"\n-                  >\n-                    {advisor.homepage}\n-                  </Link>\n-                </TableCell>\n-                <TableCell align=\"center\">\n-                  <Link href={`mailto:${advisor.email}`}>{advisor.email}</Link>\n-                </TableCell>\n-                <TableCell align=\"center\">\n-                  <Link\n-                    href={advisor.twitter}\n-                    target=\"_blank\"\n-                    rel=\"noopener noreferrer\"\n-                  >\n-                    {advisor.twitter}\n-                  </Link>\n-                </TableCell>\n-                <TableCell align=\"center\">\n-                  <Link\n-                    href={advisor.github}\n-                    target=\"_blank\"\n-                    rel=\"noopener noreferrer\"\n-                  >\n-                    {advisor.github}\n-                  </Link>\n-                </TableCell>\n-                <TableCell align=\"center\">\n-                  {/* Implementation for collaborations and connection cell */}\n-                  {/* You can add a button or link here to navigate to the connection table */}\n-                </TableCell>\n-              </TableRow>\n-            ))}\n-          </TableBody>\n-        </Table>\n-      </TableContainer>\n-    </Box>\n-  );\n-};\n-\n-export default ListView;\n-import React, { useEffect, useRef, useState } from \"react\";\n-interface Advisor {\n-  _id: number;\n-  name: string;\n-  affiliation: string;\n-  homepage: string;\n-  twitter: string;\n-  github: string;\n-  email: string;\n-  position: string;\n-  connections: {\n-    _id: number;\n-\n-    relation: Array<{\n-      class: string;\n-      role: string;\n-      duration: {\n-        start: { year: number; month: number };\n-        end: { year: number; month: number };\n-      };\n-    }>;\n-    collaborations: Array<{\n-      papername: string;\n-      year: number;\n-      url: string;\n-    }>;\n-    latestCollaboration: number;\n-    relationFactor: number;\n-  }[];\n-}\n-const advisors: Advisor[] = require(\"../../../../data/advisors.json\");\n-\n-import {\n-  TableContainer,\n-  Table,\n-  TableHead,\n-  TableRow,\n-  TableCell,\n-  TableBody,\n-  Paper,\n-  IconButton,\n-  Typography,\n-  Box,\n-  Link,\n-} from \"@mui/material\";\n-\n-import CloseIcon from \"@mui/icons-material/Close\";\n-\n-//@ts-ignore\n-const ListView = ({ onClose }) => {\n-  return (\n-    <Box sx={{ width: \"100%\", paddingLeft: 2, paddingRight: 2, paddingTop: 2 }}>\n-      {\" \"}\n-      {/* 确保这一层也是充满父元素的 */}\n-      <Box\n-        sx={{\n-          display: \"flex\",\n-          justifyContent: \"space-between\",\n-          alignItems: \"center\",\n-          p: 2,\n-          width: \"100%\",\n-        }}\n-      >\n-        <Typography variant=\"h6\">Main Advisor</Typography>\n-        <IconButton onClick={onClose} color=\"inherit\">\n-          <CloseIcon />\n-        </IconButton>\n-      </Box>\n-      <TableContainer component={Paper} sx={{ width: \"100%\" }}>\n-        <Table stickyHeader>\n-          <TableHead>\n-            <TableRow>\n-              <TableCell align=\"center\">Advisor Name</TableCell>\n-              <TableCell align=\"center\">Position</TableCell>\n-              <TableCell align=\"center\">Affliation</TableCell>\n-              <TableCell align=\"center\">HomePage</TableCell>\n-              <TableCell align=\"center\">Email</TableCell>\n-              <TableCell align=\"center\">Twitter</TableCell>\n-              <TableCell align=\"center\">GitHub</TableCell>\n-              <TableCell align=\"center\">Collaborations</TableCell>\n-            </TableRow>\n-          </TableHead>\n-          <TableBody>\n-            {advisors.map((advisor) => (\n-              <TableRow sx={{ border: \"none\" }} key={advisor._id} hover>\n-                <TableCell align=\"center >{advisor.name}</TableCell>\n-                <TableCell align=\"center\">{advisor.position}</TableCell>\n-                <TableCell align=\"center\">{advisor.affiliation}</TableCell>\n-                <TableCell align=\"center\">\n-                  <Link\n-                    href={advisor.homepage}\n-                    target=\"_blank\"\n-                    rel=\"noopener noreferrer\"\n-                  >\n-                    {advisor.homepage}\n-                  </Link>\n-                </TableCell>\n-                <TableCell align=\"center\">\n-                  <Link href={`mailto:${advisor.email}`}>{advisor.email}</Link>\n-                </TableCell>\n-                <TableCell align=\"center\">\n-                  <Link\n-                    href={advisor.twitter}\n-                    target=\"_blank\"\n-                    rel=\"noopener noreferrer\"\n-                  >\n-                    {advisor.twitter}\n-                  </Link>\n-                </TableCell>\n-                <TableCell align=\"center\">\n-                  <Link\n-                    href={advisor.github}\n-                    target=\"_blank\"\n-                    rel=\"noopener noreferrer\"\n-                  >\n-                    {advisor.github}\n-                  </Link>\n-                </TableCell>\n-                <TableCell align=\"center\">\n-                  {/* Implementation for collaborations and connection cell */}\n-                  {/* You can add a button or link here to navigate to the connection table */}\n-                </TableCell>\n-              </TableRow>\n-            ))}\n-          </TableBody>\n-        </Table>\n-      </TableContainer>\n-    </Box>\n-  );\n-};\n-\n-export default ListView;\n-import React, { useEffect, useRef, useState } from \"react\";\n-interface Advisor {\n-  _id: number;\n-  name: string;\n-  affiliation: string;\n-  homepage: string;\n-  twitter: string;\n-  github: string;\n-  email: string;\n-  position: string;\n-  connections: {\n-    _id: number;\n-\n-    relation: Array<{\n-      class: string;\n-      role: string;\n-      duration: {\n-        start: { year: number; month: number };\n-        end: { year: number; month: number };\n-      };\n-    }>;\n-    collaborations: Array<{\n-      papername: string;\n-      year: number;\n-      url: string;\n-    }>;\n-    latestCollaboration: number;\n-    relationFactor: number;\n-  }[];\n-}\n-const advisors: Advisor[] = require(\"../../../../data/advisors.json\");\n-\n-import {\n-  TableContainer,\n-  Table,\n-  TableHead,\n-  TableRow,\n-  TableCell,\n-  TableBody,\n-  Paper,\n-  IconButton,\n-  Typography,\n-  Box,\n-  Link,\n-} from \"@mui/material\";\n-\n-import CloseIcon from \"@mui/icons-material/Close\";\n-\n-//@ts-ignore\n-const ListView = ({ onClose }) => {\n-  return (\n-    <Box sx={{ width: \"100%\", paddingLeft: 2, paddingRight: 2, paddingTop: 2 }}>\n-      {\" \"}\n-      {/* 确保这一层也是充满父元素的 */}\n-      <Box\n-        sx={{\n-          display: \"flex\",\n-          justifyContent: \"space-between\",\n-          alignItems: \"center\",\n-          p: 2,\n-          width: \"100%\",\n-        }}\n-      >\n-        <Typography variant=\"h6\">Main Advisor</Typography>\n-        <IconButton onClick={onClose} color=\"inherit\">\n-          <CloseIcon />\n-        </IconButton>\n-      </Box>\n-      <TableContainer component={Paper} sx={{ width: \"100%\" }}>\n-        <Table stickyHeader>\n-          <TableHead>\n-            <TableRow>\n-              <TableCell align=\"center\">Advisor Name</TableCell>\n-              <TableCell align=\"center\">Position</TableCell>\n-              <TableCell align=\"center\">Affliation</TableCell>\n-              <TableCell align=\"center\">HomePage</TableCell>\n-              <TableCell align=\"center\">Email</TableCell>\n-              <TableCell align=\"center\">Twitter</TableCell>\n-              <TableCell align=\"center\">GitHub</TableCell>\n-              <TableCell align=\"center\">Collaborations</TableCell>\n-            </TableRow>\n-          </TableHead>\n-          <TableBody>\n-            {advisors.map((advisor) => (\n-              <TableRow sx={{ border: \"none\" }} key={advisor._id} hover>\n                 <TableCell align=\"center\">{advisor.name}</TableCell>\n                 <TableCell align=\"center\">{advisor.position}</TableCell>\n                 <TableCell align=\"center\">{advisor.affiliation}</TableCell>\n                 <TableCell align=\"center\">\n@@ -395,400 +129,4 @@\n   );\n };\n \n export default ListView;\n-import React, { useEffect, useRef, useState } from \"react\";\n-interface Advisor {\n-  _id: number;\n-  name: string;\n-  affiliation: string;\n-  homepage: string;\n-  twitter: string;\n-  github: string;\n-  email: string;\n-  position: string;\n-  connections: {\n-    _id: number;\n-\n-    relation: Array<{\n-      class: string;\n-      role: string;\n-      duration: {\n-        start: { year: number; month: number };\n-        end: { year: number; month: number };\n-      };\n-    }>;\n-    collaborations: Array<{\n-      papername: string;\n-      year: number;\n-      url: string;\n-    }>;\n-    latestCollaboration: number;\n-    relationFactor: number;\n-  }[];\n-}\n-const advisors: Advisor[] = require(\"../../../../data/advisors.json\");\n-\n-import {\n-  TableContainer,\n-  Table,\n-  TableHead,\n-  TableRow,\n-  TableCell,\n-  TableBody,\n-  Paper,\n-  IconButton,\n-  Typography,\n-  Box,\n-  Link,\n-} from \"@mui/material\";\n-\n-import CloseIcon from \"@mui/icons-material/Close\";\n-\n-//@ts-ignore\n-const ListView = ({ onClose }) => {\n-  return (\n-    <Box sx={{ width: \"100%\", paddingLeft: 2, paddingRight: 2, paddingTop: 2 }}>\n-      {\" \"}\n-      {/* 确保这一层也是充满父元素的 */}\n-      <Box\n-        sx={{\n-          display: \"flex\",\n-          justifyContent: \"space-between\",\n-          alignItems: \"center\",\n-          p: 2,\n-          width: \"100%\",\n-        }}\n-      >\n-        <Typography variant=\"h6\">Main Advisor</Typography>\n-        <IconButton onClick={onClose} color=\"inherit\">\n-          <CloseIcon />\n-        </IconButton>\n-      </Box>\n-      <TableContainer component={Paper} sx={{ width: \"100%\" }}>\n-        <Table stickyHeader>\n-          <TableHead>\n-            <TableRow>\n-              <TableCell align=\"center\">Advisor Name</TableCell>\n-              <TableCell align=\"center\">Position</TableCell>\n-              <TableCell align=\"center\">Affliation</TableCell>\n-              <TableCell align=\"center\">HomePage</TableCell>\n-              <TableCell align=\"center\">Email</TableCell>\n-              <TableCell align=\"center\">Twitter</TableCell>\n-              <TableCell align=\"center\">GitHub</TableCell>\n-              <TableCell align=\"center\">Collaborations</TableCell>\n-            </TableRow>\n-          </TableHead>\n-          <TableBody>\n-            {advisors.map((advisor) => (\n-              <TableRow key={advisor._id} hover>\n-                <TableCell align=\"center\">{advisor.name}</TableCell>\n-                <TableCell align=\"center\">{advisor.position}</TableCell>\n-                <TableCell align=\"center\">{advisor.affiliation}</TableCell>\n-                <TableCell align=\"center\">\n-                  <Link\n-                    href={advisor.homepage}\n-                    target=\"_blank\"\n-                    rel=\"noopener noreferrer\"\n-                  >\n-                    {advisor.homepage}\n-                  </Link>\n-                </TableCell>\n-                <TableCell align=\"center\">\n-                  <Link href={`mailto:${advisor.email}`}>{advisor.email}</Link>\n-                </TableCell>\n-                <TableCell align=\"center\">\n-                  <Link\n-                    href={advisor.twitter}\n-                    target=\"_blank\"\n-                    rel=\"noopener noreferrer\"\n-                  >\n-                    {advisor.twitter}\n-                  </Link>\n-                </TableCell>\n-                <TableCell align=\"center\">\n-                  <Link\n-                    href={advisor.github}\n-                    target=\"_blank\"\n-                    rel=\"noopener noreferrer\"\n-                  >\n-                    {advisor.github}\n-                  </Link>\n-                </TableCell>\n-                <TableCell align=\"center\">\n-                  {/* Implementation for collaborations and connection cell */}\n-                  {/* You can add a button or link here to navigate to the connection table */}\n-                </TableCell>\n-              </TableRow>\n-            ))}\n-          </TableBody>\n-        </Table>\n-      </TableContainer>\n-    </Box>\n-  );\n-};\n-\n-export default ListView;\n-import React, { useEffect, useRef, useState } from \"react\";\n-interface Advisor {\n-  _id: number;\n-  name: string;\n-  affiliation: string;\n-  homepage: string;\n-  twitter: string;\n-  github: string;\n-  email: string;\n-  position: string;\n-  connections: {\n-    _id: number;\n-\n-    relation: Array<{\n-      class: string;\n-      role: string;\n-      duration: {\n-        start: { year: number; month: number };\n-        end: { year: number; month: number };\n-      };\n-    }>;\n-    collaborations: Array<{\n-      papername: string;\n-      year: number;\n-      url: string;\n-    }>;\n-    latestCollaboration: number;\n-    relationFactor: number;\n-  }[];\n-}\n-const advisors: Advisor[] = require(\"../../../../data/advisors.json\");\n-\n-import {\n-  TableContainer,\n-  Table,\n-  TableHead,\n-  TableRow,\n-  TableCell,\n-  TableBody,\n-  Paper,\n-  IconButton,\n-  Typography,\n-  Box,\n-  Link,\n-} from \"@mui/material\";\n-\n-import CloseIcon from \"@mui/icons-material/Close\";\n-\n-//@ts-ignore\n-const ListView = ({ onClose }) => {\n-  return (\n-    <Box sx={{ width: \"100%\", paddingLeft: 2, paddingRight: 2, paddingTop: 2 }}>\n-      {\" \"}\n-      {/* 确保这一层也是充满父元素的 */}\n-      <Box\n-        sx={{\n-          display: \"flex\",\n-          justifyContent: \"space-between\",\n-          alignItems: \"center\",\n-          p: 2,\n-          width: \"100%\",\n-        }}\n-      >\n-        <Typography variant=\"h6\">Main Advisor</Typography>\n-        <IconButton onClick={onClose} color=\"inherit\">\n-          <CloseIcon />\n-        </IconButton>\n-      </Box>\n-      <TableContainer component={Paper} sx={{ width: \"100%\" }}>\n-        <Table stickyHeader sx={{ border: \"none\" }}>\n-          <TableHead>\n-            <TableRow>\n-              <TableCell align=\"center\">Advisor Name</TableCell>\n-              <TableCell align=\"center\">Position</TableCell>\n-              <TableCell align=\"center\">Affliation</TableCell>\n-              <TableCell align=\"center\">HomePage</TableCell>\n-              <TableCell align=\"center\">Email</TableCell>\n-              <TableCell align=\"center\">Twitter</TableCell>\n-              <TableCell align=\"center\">GitHub</TableCell>\n-              <TableCell align=\"center\">Collaborations</TableCell>\n-            </TableRow>\n-          </TableHead>\n-          <TableBody>\n-            {advisors.map((advisor) => (\n-              <TableRow key={advisor._id} hover>\n-                <TableCell align=\"center\">{advisor.name}</TableCell>\n-                <TableCell align=\"center\">{advisor.position}</TableCell>\n-                <TableCell align=\"center\">{advisor.affiliation}</TableCell>\n-                <TableCell align=\"center\">\n-                  <Link\n-                    href={advisor.homepage}\n-                    target=\"_blank\"\n-                    rel=\"noopener noreferrer\"\n-                  >\n-                    {advisor.homepage}\n-                  </Link>\n-                </TableCell>\n-                <TableCell align=\"center\">\n-                  <Link href={`mailto:${advisor.email}`}>{advisor.email}</Link>\n-                </TableCell>\n-                <TableCell align=\"center\">\n-                  <Link\n-                    href={advisor.twitter}\n-                    target=\"_blank\"\n-                    rel=\"noopener noreferrer\"\n-                  >\n-                    {advisor.twitter}\n-                  </Link>\n-                </TableCell>\n-                <TableCell align=\"center\">\n-                  <Link\n-                    href={advisor.github}\n-                    target=\"_blank\"\n-                    rel=\"noopener noreferrer\"\n-                  >\n-                    {advisor.github}\n-                  </Link>\n-                </TableCell>\n-                <TableCell align=\"center\">\n-                  {/* Implementation for collaborations and connection cell */}\n-                  {/* You can add a button or link here to navigate to the connection table */}\n-                </TableCell>\n-              </TableRow>\n-            ))}\n-          </TableBody>\n-        </Table>\n-      </TableContainer>\n-    </Box>\n-  );\n-};\n-\n-export default ListView;\n-import React, { useEffect, useRef, useState } from \"react\";\n-interface Advisor {\n-  _id: number;\n-  name: string;\n-  affiliation: string;\n-  homepage: string;\n-  twitter: string;\n-  github: string;\n-  email: string;\n-  position: string;\n-  connections: {\n-    _id: number;\n-\n-    relation: Array<{\n-      class: string;\n-      role: string;\n-      duration: {\n-        start: { year: number; month: number };\n-        end: { year: number; month: number };\n-      };\n-    }>;\n-    collaborations: Array<{\n-      papername: string;\n-      year: number;\n-      url: string;\n-    }>;\n-    latestCollaboration: number;\n-    relationFactor: number;\n-  }[];\n-}\n-const advisors: Advisor[] = require(\"../../../../data/advisors.json\");\n-\n-import {\n-  TableContainer,\n-  Table,\n-  TableHead,\n-  TableRow,\n-  TableCell,\n-  TableBody,\n-  Paper,\n-  IconButton,\n-  Typography,\n-  Box,\n-  Link,\n-} from \"@mui/material\";\n-\n-import CloseIcon from \"@mui/icons-material/Close\";\n-\n-//@ts-ignore\n-const ListView = ({ onClose }) => {\n-  return (\n-    <Box sx={{ width: \"100%\", paddingLeft: 2, paddingRight: 2, paddingTop: 2 }}>\n-      {\" \"}\n-      {/* 确保这一层也是充满父元素的 */}\n-      <Box\n-        sx={{\n-          display: \"flex\",\n-          justifyContent: \"space-between\",\n-          alignItems: \"center\",\n-          p: 2,\n-          width: \"100%\",\n-        }}\n-      >\n-        <Typography variant=\"h6\">Main Advisor</Typography>\n-        <IconButton onClick={onClose} color=\"inherit\">\n-          <CloseIcon />\n-        </IconButton>\n-      </Box>\n-      <TableContainer component={Paper} sx={{ width: \"100%\" }}>\n-        <Table stickyHeader sx={{ border: \"none\" }}>\n-          <TableHead>\n-            <TableRow>\n-              <TableCell align=\"center\">Advisor Name</TableCell>\n-              <TableCell align=\"center\">Position</TableCell>\n-              <TableCell align=\"center\">Affliation</TableCell>\n-              <TableCell align=\"center\">HomePage</TableCell>\n-              <TableCell align=\"center\">Email</TableCell>\n-              <TableCell align=\"center\">Twitter</TableCell>\n-              <TableCell align=\"center\">GitHub</TableCell>\n-              <TableCell align=\"center\">Collaborations</TableCell>\n-            </TableRow>\n-          </TableHead>\n-          <TableBody>\n-            {advisors.map((advisor) => (\n-              <TableRow key={advisor._id} hover>\n-                <TableCell align=\"center\">{advisor.name}</TableCell>\n-                <TableCell align=\"center\">{advisor.position}</TableCell>\n-                <TableCell align=\"center\">{advisor.affiliation}</TableCell>\n-                <TableCell align=\"center\">\n-                  <Link\n-                    href={advisor.homepage}\n-                    target=\"_blank\"\n-                    rel=\"noopener noreferrer\"\n-                  >\n-                    {advisor.homepage}\n-                  </Link>\n-                </TableCell>\n-                <TableCell align=\"center\">\n-                  <Link href={`mailto:${advisor.email}`}>{advisor.email}</Link>\n-                </TableCell>\n-                <TableCell align=\"center\">\n-                  <Link\n-                    href={advisor.twitter}\n-                    target=\"_blank\"\n-                    rel=\"noopener noreferrer\"\n-                  >\n-                    {advisor.twitter}\n-                  </Link>\n-                </TableCell>\n-                <TableCell align=\"center\">\n-                  <Link\n-                    href={advisor.github}\n-                    target=\"_blank\"\n-                    rel=\"noopener noreferrer\"\n-                  >\n-                    {advisor.github}\n-                  </Link>\n-                </TableCell>\n-                <TableCell align=\"center\">\n-                  {/* Implementation for collaborations and connection cell */}\n-                  {/* You can add a button or link here to navigate to the connection table */}\n-                </TableCell>\n-              </TableRow>\n-            ))}\n-          </TableBody>\n-        </Table>\n-      </TableContainer>\n-    </Box>\n-  );\n-};\n-\n-export default ListView;\n"
        },
        {
          "date": 1708505549242,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,9 +48,11 @@\n \n //@ts-ignore\n const ListView = ({ onClose }) => {\n   return (\n-    <Box sx={{ width: \"100%\", paddingLeft: 2, paddingRight: 2, paddingTop: 2 }}>\n+    <Paper\n+      sx={{ width: \"100%\", paddingLeft: 2, paddingRight: 2, paddingTop: 2 }}\n+    >\n       {\" \"}\n       {/* 确保这一层也是充满父元素的 */}\n       <Box\n         sx={{\n@@ -124,9 +126,9 @@\n             ))}\n           </TableBody>\n         </Table>\n       </TableContainer>\n-    </Box>\n+    </Paper>\n   );\n };\n \n export default ListView;\n"
        },
        {
          "date": 1708505608589,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,134 @@\n+import React, { useEffect, useRef, useState } from \"react\";\n+interface Advisor {\n+  _id: number;\n+  name: string;\n+  affiliation: string;\n+  homepage: string;\n+  twitter: string;\n+  github: string;\n+  email: string;\n+  position: string;\n+  connections: {\n+    _id: number;\n+\n+    relation: Array<{\n+      class: string;\n+      role: string;\n+      duration: {\n+        start: { year: number; month: number };\n+        end: { year: number; month: number };\n+      };\n+    }>;\n+    collaborations: Array<{\n+      papername: string;\n+      year: number;\n+      url: string;\n+    }>;\n+    latestCollaboration: number;\n+    relationFactor: number;\n+  }[];\n+}\n+const advisors: Advisor[] = require(\"../../../../data/advisors.json\");\n+\n+import {\n+  TableContainer,\n+  Table,\n+  TableHead,\n+  TableRow,\n+  TableCell,\n+  TableBody,\n+  Paper,\n+  IconButton,\n+  Typography,\n+  Box,\n+  Link,\n+} from \"@mui/material\";\n+\n+import CloseIcon from \"@mui/icons-material/Close\";\n+\n+//@ts-ignore\n+const ListView = ({ onClose }) => {\n+  return (\n+    <Paper\n+      sx={{ width: \"100%\", paddingLeft: 2, paddingRight: 2, paddingTop: 2 }}\n+    >\n+      {\" \"}\n+      {/* 确保这一层也是充满父元素的 */}\n+      <Toolbar\n+        sx={{\n+          display: \"flex\",\n+          justifyContent: \"space-between\",\n+          alignItems: \"center\",\n+          p: 2,\n+          width: \"100%\",\n+        }}\n+      >\n+        <Typography variant=\"h6\">Main Advisor</Typography>\n+        <IconButton onClick={onClose} color=\"inherit\">\n+          <CloseIcon />\n+        </IconButton>\n+      </Toolbar>\n+      <TableContainer component={Paper} sx={{ width: \"100%\" }}>\n+        <Table stickyHeader>\n+          <TableHead>\n+            <TableRow>\n+              <TableCell align=\"center\">Advisor Name</TableCell>\n+              <TableCell align=\"center\">Position</TableCell>\n+              <TableCell align=\"center\">Affliation</TableCell>\n+              <TableCell align=\"center\">HomePage</TableCell>\n+              <TableCell align=\"center\">Email</TableCell>\n+              <TableCell align=\"center\">Twitter</TableCell>\n+              <TableCell align=\"center\">GitHub</TableCell>\n+              <TableCell align=\"center\">Collaborations</TableCell>\n+            </TableRow>\n+          </TableHead>\n+          <TableBody>\n+            {advisors.map((advisor) => (\n+              <TableRow sx={{ border: \"none\" }} key={advisor._id} hover>\n+                <TableCell align=\"center\">{advisor.name}</TableCell>\n+                <TableCell align=\"center\">{advisor.position}</TableCell>\n+                <TableCell align=\"center\">{advisor.affiliation}</TableCell>\n+                <TableCell align=\"center\">\n+                  <Link\n+                    href={advisor.homepage}\n+                    target=\"_blank\"\n+                    rel=\"noopener noreferrer\"\n+                  >\n+                    {advisor.homepage}\n+                  </Link>\n+                </TableCell>\n+                <TableCell align=\"center\">\n+                  <Link href={`mailto:${advisor.email}`}>{advisor.email}</Link>\n+                </TableCell>\n+                <TableCell align=\"center\">\n+                  <Link\n+                    href={advisor.twitter}\n+                    target=\"_blank\"\n+                    rel=\"noopener noreferrer\"\n+                  >\n+                    {advisor.twitter}\n+                  </Link>\n+                </TableCell>\n+                <TableCell align=\"center\">\n+                  <Link\n+                    href={advisor.github}\n+                    target=\"_blank\"\n+                    rel=\"noopener noreferrer\"\n+                  >\n+                    {advisor.github}\n+                  </Link>\n+                </TableCell>\n+                <TableCell align=\"center\">\n+                  {/* Implementation for collaborations and connection cell */}\n+                  {/* You can add a button or link here to navigate to the connection table */}\n+                </TableCell>\n+              </TableRow>\n+            ))}\n+          </TableBody>\n+        </Table>\n+      </TableContainer>\n+    </Paper>\n+  );\n+};\n+\n+export default ListView;\n"
        },
        {
          "date": 1708505613887,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,17 +53,9 @@\n       sx={{ width: \"100%\", paddingLeft: 2, paddingRight: 2, paddingTop: 2 }}\n     >\n       {\" \"}\n       {/* 确保这一层也是充满父元素的 */}\n-      <Toolbar\n-        sx={{\n-          display: \"flex\",\n-          justifyContent: \"space-between\",\n-          alignItems: \"center\",\n-          p: 2,\n-          width: \"100%\",\n-        }}\n-      >\n+      <Toolbar>\n         <Typography variant=\"h6\">Main Advisor</Typography>\n         <IconButton onClick={onClose} color=\"inherit\">\n           <CloseIcon />\n         </IconButton>\n"
        },
        {
          "date": 1708505620756,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,9 +39,9 @@\n   TableBody,\n   Paper,\n   IconButton,\n   Typography,\n-  Box,\n+  Toolbar\n   Link,\n } from \"@mui/material\";\n \n import CloseIcon from \"@mui/icons-material/Close\";\n@@ -53,135 +53,9 @@\n       sx={{ width: \"100%\", paddingLeft: 2, paddingRight: 2, paddingTop: 2 }}\n     >\n       {\" \"}\n       {/* 确保这一层也是充满父元素的 */}\n-      <Toolbar>\n-        <Typography variant=\"h6\">Main Advisor</Typography>\n-        <IconButton onClick={onClose} color=\"inherit\">\n-          <CloseIcon />\n-        </IconButton>\n-      </Toolbar>\n-      <TableContainer component={Paper} sx={{ width: \"100%\" }}>\n-        <Table stickyHeader>\n-          <TableHead>\n-            <TableRow>\n-              <TableCell align=\"center\">Advisor Name</TableCell>\n-              <TableCell align=\"center\">Position</TableCell>\n-              <TableCell align=\"center\">Affliation</TableCell>\n-              <TableCell align=\"center\">HomePage</TableCell>\n-              <TableCell align=\"center\">Email</TableCell>\n-              <TableCell align=\"center\">Twitter</TableCell>\n-              <TableCell align=\"center\">GitHub</TableCell>\n-              <TableCell align=\"center\">Collaborations</TableCell>\n-            </TableRow>\n-          </TableHead>\n-          <TableBody>\n-            {advisors.map((advisor) => (\n-              <TableRow sx={{ border: \"none\" }} key={advisor._id} hover>\n-                <TableCell align=\"center\">{advisor.name}</TableCell>\n-                <TableCell align=\"center\">{advisor.position}</TableCell>\n-                <TableCell align=\"center\">{advisor.affiliation}</TableCell>\n-                <TableCell align=\"center\">\n-                  <Link\n-                    href={advisor.homepage}\n-                    target=\"_blank\"\n-                    rel=\"noopener noreferrer\"\n-                  >\n-                    {advisor.homepage}\n-                  </Link>\n-                </TableCell>\n-                <TableCell align=\"center\">\n-                  <Link href={`mailto:${advisor.email}`}>{advisor.email}</Link>\n-                </TableCell>\n-                <TableCell align=\"center\">\n-                  <Link\n-                    href={advisor.twitter}\n-                    target=\"_blank\"\n-                    rel=\"noopener noreferrer\"\n-                  >\n-                    {advisor.twitter}\n-                  </Link>\n-                </TableCell>\n-                <TableCell align=\"center\">\n-                  <Link\n-                    href={advisor.github}\n-                    target=\"_blank\"\n-                    rel=\"noopener noreferrer\"\n-                  >\n-                    {advisor.github}\n-                  </Link>\n-                </TableCell>\n-                <TableCell align=\"center\">\n-                  {/* Implementation for collaborations and connection cell */}\n-                  {/* You can add a button or link here to navigate to the connection table */}\n-                </TableCell>\n-              </TableRow>\n-            ))}\n-          </TableBody>\n-        </Table>\n-      </TableContainer>\n-    </Paper>\n-  );\n-};\n-\n-export default ListView;\n-import React, { useEffect, useRef, useState } from \"react\";\n-interface Advisor {\n-  _id: number;\n-  name: string;\n-  affiliation: string;\n-  homepage: string;\n-  twitter: string;\n-  github: string;\n-  email: string;\n-  position: string;\n-  connections: {\n-    _id: number;\n-\n-    relation: Array<{\n-      class: string;\n-      role: string;\n-      duration: {\n-        start: { year: number; month: number };\n-        end: { year: number; month: number };\n-      };\n-    }>;\n-    collaborations: Array<{\n-      papername: string;\n-      year: number;\n-      url: string;\n-    }>;\n-    latestCollaboration: number;\n-    relationFactor: number;\n-  }[];\n-}\n-const advisors: Advisor[] = require(\"../../../../data/advisors.json\");\n-\n-import {\n-  TableContainer,\n-  Table,\n-  TableHead,\n-  TableRow,\n-  TableCell,\n-  TableBody,\n-  Paper,\n-  IconButton,\n-  Typography,\n-  Box,\n-  Link,\n-} from \"@mui/material\";\n-\n-import CloseIcon from \"@mui/icons-material/Close\";\n-\n-//@ts-ignore\n-const ListView = ({ onClose }) => {\n-  return (\n-    <Paper\n-      sx={{ width: \"100%\", paddingLeft: 2, paddingRight: 2, paddingTop: 2 }}\n-    >\n-      {\" \"}\n-      {/* 确保这一层也是充满父元素的 */}\n-      <Box\n+      <Toolbar\n         sx={{\n           display: \"flex\",\n           justifyContent: \"space-between\",\n           alignItems: \"center\",\n@@ -192,9 +66,9 @@\n         <Typography variant=\"h6\">Main Advisor</Typography>\n         <IconButton onClick={onClose} color=\"inherit\">\n           <CloseIcon />\n         </IconButton>\n-      </Box>\n+      </Toolbar>\n       <TableContainer component={Paper} sx={{ width: \"100%\" }}>\n         <Table stickyHeader>\n           <TableHead>\n             <TableRow>\n"
        },
        {
          "date": 1708505646936,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,9 +39,9 @@\n   TableBody,\n   Paper,\n   IconButton,\n   Typography,\n-  Toolbar\n+  Toolbar,\n   Link,\n } from \"@mui/material\";\n \n import CloseIcon from \"@mui/icons-material/Close\";\n"
        },
        {
          "date": 1708505701536,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,8 +45,32 @@\n } from \"@mui/material\";\n \n import CloseIcon from \"@mui/icons-material/Close\";\n \n+const useStyles = makeStyles((theme) => ({\n+  root: {\n+    width: \"100%\",\n+  },\n+  paper: {\n+    width: \"100%\",\n+    marginBottom: theme.spacing(2),\n+  },\n+  table: {\n+    minWidth: 750,\n+  },\n+  visuallyHidden: {\n+    border: 0,\n+    clip: \"rect(0 0 0 0)\",\n+    height: 1,\n+    margin: -1,\n+    overflow: \"hidden\",\n+    padding: 0,\n+    position: \"absolute\",\n+    top: 20,\n+    width: 1,\n+  },\n+}));\n+\n //@ts-ignore\n const ListView = ({ onClose }) => {\n   return (\n     <Paper\n"
        },
        {
          "date": 1708505715676,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,7 @@\n import React, { useEffect, useRef, useState } from \"react\";\n+import { lighten, makeStyles } from \"@material-ui/core/styles\";\n+\n interface Advisor {\n   _id: number;\n   name: string;\n   affiliation: string;\n"
        },
        {
          "date": 1708505764676,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,8 +73,9 @@\n }));\n \n //@ts-ignore\n const ListView = ({ onClose }) => {\n+  onst classes = useStyles();\n   return (\n     <Paper\n       sx={{ width: \"100%\", paddingLeft: 2, paddingRight: 2, paddingTop: 2 }}\n     >\n"
        },
        {
          "date": 1708505801097,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,9 +73,9 @@\n }));\n \n //@ts-ignore\n const ListView = ({ onClose }) => {\n-  onst classes = useStyles();\n+  const classes = useStyles();\n   return (\n     <Paper\n       sx={{ width: \"100%\", paddingLeft: 2, paddingRight: 2, paddingTop: 2 }}\n     >\n@@ -95,9 +95,9 @@\n           <CloseIcon />\n         </IconButton>\n       </Toolbar>\n       <TableContainer component={Paper} sx={{ width: \"100%\" }}>\n-        <Table stickyHeader>\n+        <Table stickyHeader className={classes.table}>\n           <TableHead>\n             <TableRow>\n               <TableCell align=\"center\">Advisor Name</TableCell>\n               <TableCell align=\"center\">Position</TableCell>\n"
        },
        {
          "date": 1708506015152,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,183 @@\n+import React, { useEffect, useRef, useState } from \"react\";\n+import { lighten, makeStyles } from \"@material-ui/core/styles\";\n+\n+interface Advisor {\n+  _id: number;\n+  name: string;\n+  affiliation: string;\n+  homepage: string;\n+  twitter: string;\n+  github: string;\n+  email: string;\n+  position: string;\n+  connections: {\n+    _id: number;\n+\n+    relation: Array<{\n+      class: string;\n+      role: string;\n+      duration: {\n+        start: { year: number; month: number };\n+        end: { year: number; month: number };\n+      };\n+    }>;\n+    collaborations: Array<{\n+      papername: string;\n+      year: number;\n+      url: string;\n+    }>;\n+    latestCollaboration: number;\n+    relationFactor: number;\n+  }[];\n+}\n+const advisors: Advisor[] = require(\"../../../../data/advisors.json\");\n+\n+import {\n+  TableContainer,\n+  Table,\n+  TableHead,\n+  TableRow,\n+  TableCell,\n+  TableBody,\n+  Paper,\n+  IconButton,\n+  Typography,\n+  Toolbar,\n+  Link,\n+} from \"@mui/material\";\n+\n+import CloseIcon from \"@mui/icons-material/Close\";\n+\n+const useStyles = makeStyles((theme) => ({\n+  root: {\n+    width: \"100%\",\n+  },\n+  paper: {\n+    width: \"100%\",\n+    marginBottom: theme.spacing(2),\n+  },\n+  table: {\n+    minWidth: 750,\n+  },\n+  visuallyHidden: {\n+    border: 0,\n+    clip: \"rect(0 0 0 0)\",\n+    height: 1,\n+    margin: -1,\n+    overflow: \"hidden\",\n+    padding: 0,\n+    position: \"absolute\",\n+    top: 20,\n+    width: 1,\n+  },\n+}));\n+\n+const useToolbarStyles = makeStyles((theme: Theme) =>\n+  createStyles({\n+    root: {\n+      paddingLeft: theme.spacing(2),\n+      paddingRight: theme.spacing(1),\n+    },\n+    highlight:\n+      theme.palette.type === \"light\"\n+        ? {\n+            color: theme.palette.secondary.main,\n+            backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n+          }\n+        : {\n+            color: theme.palette.text.primary,\n+            backgroundColor: theme.palette.secondary.dark,\n+          },\n+    title: {\n+      flex: \"1 1 100%\",\n+    },\n+  })\n+);\n+\n+//@ts-ignore\n+const ListView = ({ onClose }) => {\n+  const classes = useStyles();\n+  return (\n+    <Paper\n+      sx={{ width: \"100%\", paddingLeft: 2, paddingRight: 2, paddingTop: 2 }}\n+    >\n+      {\" \"}\n+      {/* 确保这一层也是充满父元素的 */}\n+      <Toolbar\n+        sx={{\n+          display: \"flex\",\n+          justifyContent: \"space-between\",\n+          alignItems: \"center\",\n+          p: 2,\n+          width: \"100%\",\n+        }}\n+      >\n+        <Typography variant=\"h6\">Main Advisor</Typography>\n+        <IconButton onClick={onClose} color=\"inherit\">\n+          <CloseIcon />\n+        </IconButton>\n+      </Toolbar>\n+      <TableContainer component={Paper} sx={{ width: \"100%\" }}>\n+        <Table stickyHeader className={classes.table}>\n+          <TableHead>\n+            <TableRow>\n+              <TableCell align=\"center\">Advisor Name</TableCell>\n+              <TableCell align=\"center\">Position</TableCell>\n+              <TableCell align=\"center\">Affliation</TableCell>\n+              <TableCell align=\"center\">HomePage</TableCell>\n+              <TableCell align=\"center\">Email</TableCell>\n+              <TableCell align=\"center\">Twitter</TableCell>\n+              <TableCell align=\"center\">GitHub</TableCell>\n+              <TableCell align=\"center\">Collaborations</TableCell>\n+            </TableRow>\n+          </TableHead>\n+          <TableBody>\n+            {advisors.map((advisor) => (\n+              <TableRow sx={{ border: \"none\" }} key={advisor._id} hover>\n+                <TableCell align=\"center\">{advisor.name}</TableCell>\n+                <TableCell align=\"center\">{advisor.position}</TableCell>\n+                <TableCell align=\"center\">{advisor.affiliation}</TableCell>\n+                <TableCell align=\"center\">\n+                  <Link\n+                    href={advisor.homepage}\n+                    target=\"_blank\"\n+                    rel=\"noopener noreferrer\"\n+                  >\n+                    {advisor.homepage}\n+                  </Link>\n+                </TableCell>\n+                <TableCell align=\"center\">\n+                  <Link href={`mailto:${advisor.email}`}>{advisor.email}</Link>\n+                </TableCell>\n+                <TableCell align=\"center\">\n+                  <Link\n+                    href={advisor.twitter}\n+                    target=\"_blank\"\n+                    rel=\"noopener noreferrer\"\n+                  >\n+                    {advisor.twitter}\n+                  </Link>\n+                </TableCell>\n+                <TableCell align=\"center\">\n+                  <Link\n+                    href={advisor.github}\n+                    target=\"_blank\"\n+                    rel=\"noopener noreferrer\"\n+                  >\n+                    {advisor.github}\n+                  </Link>\n+                </TableCell>\n+                <TableCell align=\"center\">\n+                  {/* Implementation for collaborations and connection cell */}\n+                  {/* You can add a button or link here to navigate to the connection table */}\n+                </TableCell>\n+              </TableRow>\n+            ))}\n+          </TableBody>\n+        </Table>\n+      </TableContainer>\n+    </Paper>\n+  );\n+};\n+\n+export default ListView;\n"
        },
        {
          "date": 1708506060440,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,11 @@\n import React, { useEffect, useRef, useState } from \"react\";\n-import { lighten, makeStyles } from \"@material-ui/core/styles\";\n+import {\n+  createStyles,\n+  lighten,\n+  makeStyles,\n+  Theme,\n+} from \"@material-ui/core/styles\";\n \n interface Advisor {\n   _id: number;\n   name: string;\n@@ -47,31 +52,33 @@\n } from \"@mui/material\";\n \n import CloseIcon from \"@mui/icons-material/Close\";\n \n-const useStyles = makeStyles((theme) => ({\n-  root: {\n-    width: \"100%\",\n-  },\n-  paper: {\n-    width: \"100%\",\n-    marginBottom: theme.spacing(2),\n-  },\n-  table: {\n-    minWidth: 750,\n-  },\n-  visuallyHidden: {\n-    border: 0,\n-    clip: \"rect(0 0 0 0)\",\n-    height: 1,\n-    margin: -1,\n-    overflow: \"hidden\",\n-    padding: 0,\n-    position: \"absolute\",\n-    top: 20,\n-    width: 1,\n-  },\n-}));\n+const useStyles = makeStyles((theme: Theme) =>\n+  createStyles({\n+    root: {\n+      width: \"100%\",\n+    },\n+    paper: {\n+      width: \"100%\",\n+      marginBottom: theme.spacing(2),\n+    },\n+    table: {\n+      minWidth: 750,\n+    },\n+    visuallyHidden: {\n+      border: 0,\n+      clip: \"rect(0 0 0 0)\",\n+      height: 1,\n+      margin: -1,\n+      overflow: \"hidden\",\n+      padding: 0,\n+      position: \"absolute\",\n+      top: 20,\n+      width: 1,\n+    },\n+  })\n+);\n \n const useToolbarStyles = makeStyles((theme: Theme) =>\n   createStyles({\n     root: {\n@@ -180,165 +187,4 @@\n   );\n };\n \n export default ListView;\n-import React, { useEffect, useRef, useState } from \"react\";\n-import { lighten, makeStyles } from \"@material-ui/core/styles\";\n-\n-interface Advisor {\n-  _id: number;\n-  name: string;\n-  affiliation: string;\n-  homepage: string;\n-  twitter: string;\n-  github: string;\n-  email: string;\n-  position: string;\n-  connections: {\n-    _id: number;\n-\n-    relation: Array<{\n-      class: string;\n-      role: string;\n-      duration: {\n-        start: { year: number; month: number };\n-        end: { year: number; month: number };\n-      };\n-    }>;\n-    collaborations: Array<{\n-      papername: string;\n-      year: number;\n-      url: string;\n-    }>;\n-    latestCollaboration: number;\n-    relationFactor: number;\n-  }[];\n-}\n-const advisors: Advisor[] = require(\"../../../../data/advisors.json\");\n-\n-import {\n-  TableContainer,\n-  Table,\n-  TableHead,\n-  TableRow,\n-  TableCell,\n-  TableBody,\n-  Paper,\n-  IconButton,\n-  Typography,\n-  Toolbar,\n-  Link,\n-} from \"@mui/material\";\n-\n-import CloseIcon from \"@mui/icons-material/Close\";\n-\n-const useStyles = makeStyles((theme) => ({\n-  root: {\n-    width: \"100%\",\n-  },\n-  paper: {\n-    width: \"100%\",\n-    marginBottom: theme.spacing(2),\n-  },\n-  table: {\n-    minWidth: 750,\n-  },\n-  visuallyHidden: {\n-    border: 0,\n-    clip: \"rect(0 0 0 0)\",\n-    height: 1,\n-    margin: -1,\n-    overflow: \"hidden\",\n-    padding: 0,\n-    position: \"absolute\",\n-    top: 20,\n-    width: 1,\n-  },\n-}));\n-\n-//@ts-ignore\n-const ListView = ({ onClose }) => {\n-  const classes = useStyles();\n-  return (\n-    <Paper\n-      sx={{ width: \"100%\", paddingLeft: 2, paddingRight: 2, paddingTop: 2 }}\n-    >\n-      {\" \"}\n-      {/* 确保这一层也是充满父元素的 */}\n-      <Toolbar\n-        sx={{\n-          display: \"flex\",\n-          justifyContent: \"space-between\",\n-          alignItems: \"center\",\n-          p: 2,\n-          width: \"100%\",\n-        }}\n-      >\n-        <Typography variant=\"h6\">Main Advisor</Typography>\n-        <IconButton onClick={onClose} color=\"inherit\">\n-          <CloseIcon />\n-        </IconButton>\n-      </Toolbar>\n-      <TableContainer component={Paper} sx={{ width: \"100%\" }}>\n-        <Table stickyHeader className={classes.table}>\n-          <TableHead>\n-            <TableRow>\n-              <TableCell align=\"center\">Advisor Name</TableCell>\n-              <TableCell align=\"center\">Position</TableCell>\n-              <TableCell align=\"center\">Affliation</TableCell>\n-              <TableCell align=\"center\">HomePage</TableCell>\n-              <TableCell align=\"center\">Email</TableCell>\n-              <TableCell align=\"center\">Twitter</TableCell>\n-              <TableCell align=\"center\">GitHub</TableCell>\n-              <TableCell align=\"center\">Collaborations</TableCell>\n-            </TableRow>\n-          </TableHead>\n-          <TableBody>\n-            {advisors.map((advisor) => (\n-              <TableRow sx={{ border: \"none\" }} key={advisor._id} hover>\n-                <TableCell align=\"center\">{advisor.name}</TableCell>\n-                <TableCell align=\"center\">{advisor.position}</TableCell>\n-                <TableCell align=\"center\">{advisor.affiliation}</TableCell>\n-                <TableCell align=\"center\">\n-                  <Link\n-                    href={advisor.homepage}\n-                    target=\"_blank\"\n-                    rel=\"noopener noreferrer\"\n-                  >\n-                    {advisor.homepage}\n-                  </Link>\n-                </TableCell>\n-                <TableCell align=\"center\">\n-                  <Link href={`mailto:${advisor.email}`}>{advisor.email}</Link>\n-                </TableCell>\n-                <TableCell align=\"center\">\n-                  <Link\n-                    href={advisor.twitter}\n-                    target=\"_blank\"\n-                    rel=\"noopener noreferrer\"\n-                  >\n-                    {advisor.twitter}\n-                  </Link>\n-                </TableCell>\n-                <TableCell align=\"center\">\n-                  <Link\n-                    href={advisor.github}\n-                    target=\"_blank\"\n-                    rel=\"noopener noreferrer\"\n-                  >\n-                    {advisor.github}\n-                  </Link>\n-                </TableCell>\n-                <TableCell align=\"center\">\n-                  {/* Implementation for collaborations and connection cell */}\n-                  {/* You can add a button or link here to navigate to the connection table */}\n-                </TableCell>\n-              </TableRow>\n-            ))}\n-          </TableBody>\n-        </Table>\n-      </TableContainer>\n-    </Paper>\n-  );\n-};\n-\n-export default ListView;\n"
        },
        {
          "date": 1708506140811,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -103,15 +103,17 @@\n \n //@ts-ignore\n const ListView = ({ onClose }) => {\n   const classes = useStyles();\n+  const toolClasses = useToolbarStyles();\n   return (\n     <Paper\n       sx={{ width: \"100%\", paddingLeft: 2, paddingRight: 2, paddingTop: 2 }}\n     >\n       {\" \"}\n       {/* 确保这一层也是充满父元素的 */}\n       <Toolbar\n+        className=\"toolClasses.root\"\n         sx={{\n           display: \"flex\",\n           justifyContent: \"space-between\",\n           alignItems: \"center\",\n"
        },
        {
          "date": 1708506150758,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,192 @@\n+import React, { useEffect, useRef, useState } from \"react\";\n+import {\n+  createStyles,\n+  lighten,\n+  makeStyles,\n+  Theme,\n+} from \"@material-ui/core/styles\";\n+\n+interface Advisor {\n+  _id: number;\n+  name: string;\n+  affiliation: string;\n+  homepage: string;\n+  twitter: string;\n+  github: string;\n+  email: string;\n+  position: string;\n+  connections: {\n+    _id: number;\n+\n+    relation: Array<{\n+      class: string;\n+      role: string;\n+      duration: {\n+        start: { year: number; month: number };\n+        end: { year: number; month: number };\n+      };\n+    }>;\n+    collaborations: Array<{\n+      papername: string;\n+      year: number;\n+      url: string;\n+    }>;\n+    latestCollaboration: number;\n+    relationFactor: number;\n+  }[];\n+}\n+const advisors: Advisor[] = require(\"../../../../data/advisors.json\");\n+\n+import {\n+  TableContainer,\n+  Table,\n+  TableHead,\n+  TableRow,\n+  TableCell,\n+  TableBody,\n+  Paper,\n+  IconButton,\n+  Typography,\n+  Toolbar,\n+  Link,\n+} from \"@mui/material\";\n+\n+import CloseIcon from \"@mui/icons-material/Close\";\n+\n+const useStyles = makeStyles((theme: Theme) =>\n+  createStyles({\n+    root: {\n+      width: \"100%\",\n+    },\n+    paper: {\n+      width: \"100%\",\n+      marginBottom: theme.spacing(2),\n+    },\n+    table: {\n+      minWidth: 750,\n+    },\n+    visuallyHidden: {\n+      border: 0,\n+      clip: \"rect(0 0 0 0)\",\n+      height: 1,\n+      margin: -1,\n+      overflow: \"hidden\",\n+      padding: 0,\n+      position: \"absolute\",\n+      top: 20,\n+      width: 1,\n+    },\n+  })\n+);\n+\n+const useToolbarStyles = makeStyles((theme: Theme) =>\n+  createStyles({\n+    root: {\n+      paddingLeft: theme.spacing(2),\n+      paddingRight: theme.spacing(1),\n+    },\n+    highlight:\n+      theme.palette.type === \"light\"\n+        ? {\n+            color: theme.palette.secondary.main,\n+            backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n+          }\n+        : {\n+            color: theme.palette.text.primary,\n+            backgroundColor: theme.palette.secondary.dark,\n+          },\n+    title: {\n+      flex: \"1 1 100%\",\n+    },\n+  })\n+);\n+\n+//@ts-ignore\n+const ListView = ({ onClose }) => {\n+  const classes = useStyles();\n+  const toolClasses = useToolbarStyles();\n+  return (\n+    <Paper\n+      sx={{ width: \"100%\", paddingLeft: 2, paddingRight: 2, paddingTop: 2 }}\n+    >\n+      {\" \"}\n+      {/* 确保这一层也是充满父元素的 */}\n+      <Toolbar\n+        className={toolClasses.root}\n+        sx={{\n+          display: \"flex\",\n+          justifyContent: \"space-between\",\n+          alignItems: \"center\",\n+          p: 2,\n+          width: \"100%\",\n+        }}\n+      >\n+        <Typography variant=\"h6\">Main Advisor</Typography>\n+        <IconButton onClick={onClose} color=\"inherit\">\n+          <CloseIcon />\n+        </IconButton>\n+      </Toolbar>\n+      <TableContainer component={Paper} sx={{ width: \"100%\" }}>\n+        <Table stickyHeader className={classes.table}>\n+          <TableHead>\n+            <TableRow>\n+              <TableCell align=\"center\">Advisor Name</TableCell>\n+              <TableCell align=\"center\">Position</TableCell>\n+              <TableCell align=\"center\">Affliation</TableCell>\n+              <TableCell align=\"center\">HomePage</TableCell>\n+              <TableCell align=\"center\">Email</TableCell>\n+              <TableCell align=\"center\">Twitter</TableCell>\n+              <TableCell align=\"center\">GitHub</TableCell>\n+              <TableCell align=\"center\">Collaborations</TableCell>\n+            </TableRow>\n+          </TableHead>\n+          <TableBody>\n+            {advisors.map((advisor) => (\n+              <TableRow sx={{ border: \"none\" }} key={advisor._id} hover>\n+                <TableCell align=\"center\">{advisor.name}</TableCell>\n+                <TableCell align=\"center\">{advisor.position}</TableCell>\n+                <TableCell align=\"center\">{advisor.affiliation}</TableCell>\n+                <TableCell align=\"center\">\n+                  <Link\n+                    href={advisor.homepage}\n+                    target=\"_blank\"\n+                    rel=\"noopener noreferrer\"\n+                  >\n+                    {advisor.homepage}\n+                  </Link>\n+                </TableCell>\n+                <TableCell align=\"center\">\n+                  <Link href={`mailto:${advisor.email}`}>{advisor.email}</Link>\n+                </TableCell>\n+                <TableCell align=\"center\">\n+                  <Link\n+                    href={advisor.twitter}\n+                    target=\"_blank\"\n+                    rel=\"noopener noreferrer\"\n+                  >\n+                    {advisor.twitter}\n+                  </Link>\n+                </TableCell>\n+                <TableCell align=\"center\">\n+                  <Link\n+                    href={advisor.github}\n+                    target=\"_blank\"\n+                    rel=\"noopener noreferrer\"\n+                  >\n+                    {advisor.github}\n+                  </Link>\n+                </TableCell>\n+                <TableCell align=\"center\">\n+                  {/* Implementation for collaborations and connection cell */}\n+                  {/* You can add a button or link here to navigate to the connection table */}\n+                </TableCell>\n+              </TableRow>\n+            ))}\n+          </TableBody>\n+        </Table>\n+      </TableContainer>\n+    </Paper>\n+  );\n+};\n+\n+export default ListView;\n"
        },
        {
          "date": 1708506266777,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -106,8 +106,9 @@\n   const classes = useStyles();\n   const toolClasses = useToolbarStyles();\n   return (\n     <Paper\n+      className={classes.paper}\n       sx={{ width: \"100%\", paddingLeft: 2, paddingRight: 2, paddingTop: 2 }}\n     >\n       {\" \"}\n       {/* 确保这一层也是充满父元素的 */}\n@@ -189,196 +190,4 @@\n   );\n };\n \n export default ListView;\n-import React, { useEffect, useRef, useState } from \"react\";\n-import {\n-  createStyles,\n-  lighten,\n-  makeStyles,\n-  Theme,\n-} from \"@material-ui/core/styles\";\n-\n-interface Advisor {\n-  _id: number;\n-  name: string;\n-  affiliation: string;\n-  homepage: string;\n-  twitter: string;\n-  github: string;\n-  email: string;\n-  position: string;\n-  connections: {\n-    _id: number;\n-\n-    relation: Array<{\n-      class: string;\n-      role: string;\n-      duration: {\n-        start: { year: number; month: number };\n-        end: { year: number; month: number };\n-      };\n-    }>;\n-    collaborations: Array<{\n-      papername: string;\n-      year: number;\n-      url: string;\n-    }>;\n-    latestCollaboration: number;\n-    relationFactor: number;\n-  }[];\n-}\n-const advisors: Advisor[] = require(\"../../../../data/advisors.json\");\n-\n-import {\n-  TableContainer,\n-  Table,\n-  TableHead,\n-  TableRow,\n-  TableCell,\n-  TableBody,\n-  Paper,\n-  IconButton,\n-  Typography,\n-  Toolbar,\n-  Link,\n-} from \"@mui/material\";\n-\n-import CloseIcon from \"@mui/icons-material/Close\";\n-\n-const useStyles = makeStyles((theme: Theme) =>\n-  createStyles({\n-    root: {\n-      width: \"100%\",\n-    },\n-    paper: {\n-      width: \"100%\",\n-      marginBottom: theme.spacing(2),\n-    },\n-    table: {\n-      minWidth: 750,\n-    },\n-    visuallyHidden: {\n-      border: 0,\n-      clip: \"rect(0 0 0 0)\",\n-      height: 1,\n-      margin: -1,\n-      overflow: \"hidden\",\n-      padding: 0,\n-      position: \"absolute\",\n-      top: 20,\n-      width: 1,\n-    },\n-  })\n-);\n-\n-const useToolbarStyles = makeStyles((theme: Theme) =>\n-  createStyles({\n-    root: {\n-      paddingLeft: theme.spacing(2),\n-      paddingRight: theme.spacing(1),\n-    },\n-    highlight:\n-      theme.palette.type === \"light\"\n-        ? {\n-            color: theme.palette.secondary.main,\n-            backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n-          }\n-        : {\n-            color: theme.palette.text.primary,\n-            backgroundColor: theme.palette.secondary.dark,\n-          },\n-    title: {\n-      flex: \"1 1 100%\",\n-    },\n-  })\n-);\n-\n-//@ts-ignore\n-const ListView = ({ onClose }) => {\n-  const classes = useStyles();\n-  const toolClasses = useToolbarStyles();\n-  return (\n-    <Paper\n-      sx={{ width: \"100%\", paddingLeft: 2, paddingRight: 2, paddingTop: 2 }}\n-    >\n-      {\" \"}\n-      {/* 确保这一层也是充满父元素的 */}\n-      <Toolbar\n-        className=\"toolClasses.root\"\n-        sx={{\n-          display: \"flex\",\n-          justifyContent: \"space-between\",\n-          alignItems: \"center\",\n-          p: 2,\n-          width: \"100%\",\n-        }}\n-      >\n-        <Typography variant=\"h6\">Main Advisor</Typography>\n-        <IconButton onClick={onClose} color=\"inherit\">\n-          <CloseIcon />\n-        </IconButton>\n-      </Toolbar>\n-      <TableContainer component={Paper} sx={{ width: \"100%\" }}>\n-        <Table stickyHeader className={classes.table}>\n-          <TableHead>\n-            <TableRow>\n-              <TableCell align=\"center\">Advisor Name</TableCell>\n-              <TableCell align=\"center\">Position</TableCell>\n-              <TableCell align=\"center\">Affliation</TableCell>\n-              <TableCell align=\"center\">HomePage</TableCell>\n-              <TableCell align=\"center\">Email</TableCell>\n-              <TableCell align=\"center\">Twitter</TableCell>\n-              <TableCell align=\"center\">GitHub</TableCell>\n-              <TableCell align=\"center\">Collaborations</TableCell>\n-            </TableRow>\n-          </TableHead>\n-          <TableBody>\n-            {advisors.map((advisor) => (\n-              <TableRow sx={{ border: \"none\" }} key={advisor._id} hover>\n-                <TableCell align=\"center\">{advisor.name}</TableCell>\n-                <TableCell align=\"center\">{advisor.position}</TableCell>\n-                <TableCell align=\"center\">{advisor.affiliation}</TableCell>\n-                <TableCell align=\"center\">\n-                  <Link\n-                    href={advisor.homepage}\n-                    target=\"_blank\"\n-                    rel=\"noopener noreferrer\"\n-                  >\n-                    {advisor.homepage}\n-                  </Link>\n-                </TableCell>\n-                <TableCell align=\"center\">\n-                  <Link href={`mailto:${advisor.email}`}>{advisor.email}</Link>\n-                </TableCell>\n-                <TableCell align=\"center\">\n-                  <Link\n-                    href={advisor.twitter}\n-                    target=\"_blank\"\n-                    rel=\"noopener noreferrer\"\n-                  >\n-                    {advisor.twitter}\n-                  </Link>\n-                </TableCell>\n-                <TableCell align=\"center\">\n-                  <Link\n-                    href={advisor.github}\n-                    target=\"_blank\"\n-                    rel=\"noopener noreferrer\"\n-                  >\n-                    {advisor.github}\n-                  </Link>\n-                </TableCell>\n-                <TableCell align=\"center\">\n-                  {/* Implementation for collaborations and connection cell */}\n-                  {/* You can add a button or link here to navigate to the connection table */}\n-                </TableCell>\n-              </TableRow>\n-            ))}\n-          </TableBody>\n-        </Table>\n-      </TableContainer>\n-    </Paper>\n-  );\n-};\n-\n-export default ListView;\n"
        },
        {
          "date": 1708506282914,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -105,89 +105,97 @@\n const ListView = ({ onClose }) => {\n   const classes = useStyles();\n   const toolClasses = useToolbarStyles();\n   return (\n-    <Paper\n-      className={classes.paper}\n-      sx={{ width: \"100%\", paddingLeft: 2, paddingRight: 2, paddingTop: 2 }}\n-    >\n-      {\" \"}\n-      {/* 确保这一层也是充满父元素的 */}\n-      <Toolbar\n-        className={toolClasses.root}\n-        sx={{\n-          display: \"flex\",\n-          justifyContent: \"space-between\",\n-          alignItems: \"center\",\n-          p: 2,\n-          width: \"100%\",\n-        }}\n+    <div className={classes.paper}>\n+      <Paper\n+        className={classes.paper}\n+        sx={{ width: \"100%\", paddingLeft: 2, paddingRight: 2, paddingTop: 2 }}\n       >\n-        <Typography variant=\"h6\">Main Advisor</Typography>\n-        <IconButton onClick={onClose} color=\"inherit\">\n-          <CloseIcon />\n-        </IconButton>\n-      </Toolbar>\n-      <TableContainer component={Paper} sx={{ width: \"100%\" }}>\n-        <Table stickyHeader className={classes.table}>\n-          <TableHead>\n-            <TableRow>\n-              <TableCell align=\"center\">Advisor Name</TableCell>\n-              <TableCell align=\"center\">Position</TableCell>\n-              <TableCell align=\"center\">Affliation</TableCell>\n-              <TableCell align=\"center\">HomePage</TableCell>\n-              <TableCell align=\"center\">Email</TableCell>\n-              <TableCell align=\"center\">Twitter</TableCell>\n-              <TableCell align=\"center\">GitHub</TableCell>\n-              <TableCell align=\"center\">Collaborations</TableCell>\n-            </TableRow>\n-          </TableHead>\n-          <TableBody>\n-            {advisors.map((advisor) => (\n-              <TableRow sx={{ border: \"none\" }} key={advisor._id} hover>\n-                <TableCell align=\"center\">{advisor.name}</TableCell>\n-                <TableCell align=\"center\">{advisor.position}</TableCell>\n-                <TableCell align=\"center\">{advisor.affiliation}</TableCell>\n-                <TableCell align=\"center\">\n-                  <Link\n-                    href={advisor.homepage}\n-                    target=\"_blank\"\n-                    rel=\"noopener noreferrer\"\n-                  >\n-                    {advisor.homepage}\n-                  </Link>\n-                </TableCell>\n-                <TableCell align=\"center\">\n-                  <Link href={`mailto:${advisor.email}`}>{advisor.email}</Link>\n-                </TableCell>\n-                <TableCell align=\"center\">\n-                  <Link\n-                    href={advisor.twitter}\n-                    target=\"_blank\"\n-                    rel=\"noopener noreferrer\"\n-                  >\n-                    {advisor.twitter}\n-                  </Link>\n-                </TableCell>\n-                <TableCell align=\"center\">\n-                  <Link\n-                    href={advisor.github}\n-                    target=\"_blank\"\n-                    rel=\"noopener noreferrer\"\n-                  >\n-                    {advisor.github}\n-                  </Link>\n-                </TableCell>\n-                <TableCell align=\"center\">\n-                  {/* Implementation for collaborations and connection cell */}\n-                  {/* You can add a button or link here to navigate to the connection table */}\n-                </TableCell>\n+        {\" \"}\n+        {/* 确保这一层也是充满父元素的 */}\n+        <Toolbar\n+          className={toolClasses.root}\n+          sx={{\n+            display: \"flex\",\n+            justifyContent: \"space-between\",\n+            alignItems: \"center\",\n+            p: 2,\n+            width: \"100%\",\n+          }}\n+        >\n+          <Typography variant=\"h6\">Main Advisor</Typography>\n+          <IconButton onClick={onClose} color=\"inherit\">\n+            <CloseIcon />\n+          </IconButton>\n+        </Toolbar>\n+        <TableContainer component={Paper} sx={{ width: \"100%\" }}>\n+          <Table stickyHeader className={classes.table}>\n+            <TableHead>\n+              <TableRow>\n+                <TableCell align=\"center\">Advisor Name</TableCell>\n+                <TableCell align=\"center\">Position</TableCell>\n+                <TableCell align=\"center\">Affliation</TableCell>\n+                <TableCell align=\"center\">HomePage</TableCell>\n+                <TableCell align=\"center\">Email</TableCell>\n+                <TableCell align=\"center\">Twitter</TableCell>\n+                <TableCell align=\"center\">GitHub</TableCell>\n+                <TableCell align=\"center\">Collaborations</TableCell>\n               </TableRow>\n-            ))}\n-          </TableBody>\n-        </Table>\n-      </TableContainer>\n-    </Paper>\n+            </TableHead>\n+            <TableBody>\n+              {advisors.map((advisor) => (\n+                <TableRow\n+                  sx={{ border: \"none\" }}\n+                  key={advisor._id}\n+                  hover\n+                >\n+                  <TableCell align=\"center\">{advisor.name}</TableCell>\n+                  <TableCell align=\"center\">{advisor.position}</TableCell>\n+                  <TableCell align=\"center\">{advisor.affiliation}</TableCell>\n+                  <TableCell align=\"center\">\n+                    <Link\n+                      href={advisor.homepage}\n+                      target=\"_blank\"\n+                      rel=\"noopener noreferrer\"\n+                    >\n+                      {advisor.homepage}\n+                    </Link>\n+                  </TableCell>\n+                  <TableCell align=\"center\">\n+                    <Link href={`mailto:${advisor.email}`}>\n+                      {advisor.email}\n+                    </Link>\n+                  </TableCell>\n+                  <TableCell align=\"center\">\n+                    <Link\n+                      href={advisor.twitter}\n+                      target=\"_blank\"\n+                      rel=\"noopener noreferrer\"\n+                    >\n+                      {advisor.twitter}\n+                    </Link>\n+                  </TableCell>\n+                  <TableCell align=\"center\">\n+                    <Link\n+                      href={advisor.github}\n+                      target=\"_blank\"\n+                      rel=\"noopener noreferrer\"\n+                    >\n+                      {advisor.github}\n+                    </Link>\n+                  </TableCell>\n+                  <TableCell align=\"center\">\n+                    {/* Implementation for collaborations and connection cell */}\n+                    {/* You can add a button or link here to navigate to the connection table */}\n+                  </TableCell>\n+                </TableRow>\n+              ))}\n+            </TableBody>\n+          </Table>\n+        </TableContainer>\n+      </Paper>\n+    </div>\n   );\n };\n \n export default ListView;\n"
        },
        {
          "date": 1708506455360,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,8 +64,12 @@\n     },\n     table: {\n       minWidth: 750,\n     },\n+    tableHeadRow: {\n+      // 移除表格表头底部的边框线\n+      borderBottom: \"none\",\n+    },\n     visuallyHidden: {\n       border: 0,\n       clip: \"rect(0 0 0 0)\",\n       height: 1,\n"
        },
        {
          "date": 1708506492587,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,205 +1,4 @@\n-import React, { useEffect, useRef, useState } from \"react\";\n-import {\n-  createStyles,\n-  lighten,\n-  makeStyles,\n-  Theme,\n-} from \"@material-ui/core/styles\";\n-\n-interface Advisor {\n-  _id: number;\n-  name: string;\n-  affiliation: string;\n-  homepage: string;\n-  twitter: string;\n-  github: string;\n-  email: string;\n-  position: string;\n-  connections: {\n-    _id: number;\n-\n-    relation: Array<{\n-      class: string;\n-      role: string;\n-      duration: {\n-        start: { year: number; month: number };\n-        end: { year: number; month: number };\n-      };\n-    }>;\n-    collaborations: Array<{\n-      papername: string;\n-      year: number;\n-      url: string;\n-    }>;\n-    latestCollaboration: number;\n-    relationFactor: number;\n-  }[];\n-}\n-const advisors: Advisor[] = require(\"../../../../data/advisors.json\");\n-\n-import {\n-  TableContainer,\n-  Table,\n-  TableHead,\n-  TableRow,\n-  TableCell,\n-  TableBody,\n-  Paper,\n-  IconButton,\n-  Typography,\n-  Toolbar,\n-  Link,\n-} from \"@mui/material\";\n-\n-import CloseIcon from \"@mui/icons-material/Close\";\n-\n-const useStyles = makeStyles((theme: Theme) =>\n-  createStyles({\n-    root: {\n-      width: \"100%\",\n-    },\n-    paper: {\n-      width: \"100%\",\n-      marginBottom: theme.spacing(2),\n-    },\n-    table: {\n-      minWidth: 750,\n-    },\n-    tableHeadRow: {\n-      // 移除表格表头底部的边框线\n-      borderBottom: \"none\",\n-    },\n-    visuallyHidden: {\n-      border: 0,\n-      clip: \"rect(0 0 0 0)\",\n-      height: 1,\n-      margin: -1,\n-      overflow: \"hidden\",\n-      padding: 0,\n-      position: \"absolute\",\n-      top: 20,\n-      width: 1,\n-    },\n-  })\n-);\n-\n-const useToolbarStyles = makeStyles((theme: Theme) =>\n-  createStyles({\n-    root: {\n-      paddingLeft: theme.spacing(2),\n-      paddingRight: theme.spacing(1),\n-    },\n-    highlight:\n-      theme.palette.type === \"light\"\n-        ? {\n-            color: theme.palette.secondary.main,\n-            backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n-          }\n-        : {\n-            color: theme.palette.text.primary,\n-            backgroundColor: theme.palette.secondary.dark,\n-          },\n-    title: {\n-      flex: \"1 1 100%\",\n-    },\n-  })\n-);\n-\n-//@ts-ignore\n-const ListView = ({ onClose }) => {\n-  const classes = useStyles();\n-  const toolClasses = useToolbarStyles();\n-  return (\n-    <div className={classes.paper}>\n-      <Paper\n-        className={classes.paper}\n-        sx={{ width: \"100%\", paddingLeft: 2, paddingRight: 2, paddingTop: 2 }}\n-      >\n-        {\" \"}\n-        {/* 确保这一层也是充满父元素的 */}\n-        <Toolbar\n-          className={toolClasses.root}\n-          sx={{\n-            display: \"flex\",\n-            justifyContent: \"space-between\",\n-            alignItems: \"center\",\n-            p: 2,\n-            width: \"100%\",\n-          }}\n-        >\n-          <Typography variant=\"h6\">Main Advisor</Typography>\n-          <IconButton onClick={onClose} color=\"inherit\">\n-            <CloseIcon />\n-          </IconButton>\n-        </Toolbar>\n-        <TableContainer component={Paper} sx={{ width: \"100%\" }}>\n-          <Table stickyHeader className={classes.table}>\n-            <TableHead>\n-              <TableRow>\n-                <TableCell align=\"center\">Advisor Name</TableCell>\n-                <TableCell align=\"center\">Position</TableCell>\n-                <TableCell align=\"center\">Affliation</TableCell>\n-                <TableCell align=\"center\">HomePage</TableCell>\n-                <TableCell align=\"center\">Email</TableCell>\n-                <TableCell align=\"center\">Twitter</TableCell>\n-                <TableCell align=\"center\">GitHub</TableCell>\n-                <TableCell align=\"center\">Collaborations</TableCell>\n-              </TableRow>\n-            </TableHead>\n-            <TableBody>\n-              {advisors.map((advisor) => (\n-                <TableRow\n-                  sx={{ border: \"none\" }}\n-                  key={advisor._id}\n-                  hover\n-                >\n-                  <TableCell align=\"center\">{advisor.name}</TableCell>\n-                  <TableCell align=\"center\">{advisor.position}</TableCell>\n-                  <TableCell align=\"center\">{advisor.affiliation}</TableCell>\n-                  <TableCell align=\"center\">\n-                    <Link\n-                      href={advisor.homepage}\n-                      target=\"_blank\"\n-                      rel=\"noopener noreferrer\"\n-                    >\n-                      {advisor.homepage}\n-                    </Link>\n-                  </TableCell>\n-                  <TableCell align=\"center\">\n-                    <Link href={`mailto:${advisor.email}`}>\n-                      {advisor.email}\n-                    </Link>\n-                  </TableCell>\n-                  <TableCell align=\"center\">\n-                    <Link\n-                      href={advisor.twitter}\n-                      target=\"_blank\"\n-                      rel=\"noopener noreferrer\"\n-                    >\n-                      {advisor.twitter}\n-                    </Link>\n-                  </TableCell>\n-                  <TableCell align=\"center\">\n-                    <Link\n-                      href={advisor.github}\n-                      target=\"_blank\"\n-                      rel=\"noopener noreferrer\"\n-                    >\n-                      {advisor.github}\n-                    </Link>\n-                  </TableCell>\n-                  <TableCell align=\"center\">\n-                    {/* Implementation for collaborations and connection cell */}\n-                    {/* You can add a button or link here to navigate to the connection table */}\n-                  </TableCell>\n-                </TableRow>\n-              ))}\n-            </TableBody>\n-          </Table>\n-        </TableContainer>\n-      </Paper>\n-    </div>\n-  );\n-};\n-\n-export default ListView;\n+tableHeadRow: {\n+  // 移除表格表头底部的边框线\n+  borderBottom: \"none\",\n+},\n\\ No newline at end of file\n"
        },
        {
          "date": 1708506499903,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,428 @@\n-tableHeadRow: {\n-  // 移除表格表头底部的边框线\n-  borderBottom: \"none\",\n-},\n\\ No newline at end of file\n+import React from \"react\";\n+import clsx from \"clsx\";\n+import {\n+  createStyles,\n+  lighten,\n+  makeStyles,\n+  Theme,\n+} from \"@material-ui/core/styles\";\n+import Table from \"@material-ui/core/Table\";\n+import TableBody from \"@material-ui/core/TableBody\";\n+import TableCell from \"@material-ui/core/TableCell\";\n+import TableContainer from \"@material-ui/core/TableContainer\";\n+import TableHead from \"@material-ui/core/TableHead\";\n+import TablePagination from \"@material-ui/core/TablePagination\";\n+import TableRow from \"@material-ui/core/TableRow\";\n+import TableSortLabel from \"@material-ui/core/TableSortLabel\";\n+import Toolbar from \"@material-ui/core/Toolbar\";\n+import Typography from \"@material-ui/core/Typography\";\n+import Paper from \"@material-ui/core/Paper\";\n+import Checkbox from \"@material-ui/core/Checkbox\";\n+import IconButton from \"@material-ui/core/IconButton\";\n+import Tooltip from \"@material-ui/core/Tooltip\";\n+import FormControlLabel from \"@material-ui/core/FormControlLabel\";\n+import Switch from \"@material-ui/core/Switch\";\n+import DeleteIcon from \"@material-ui/icons/Delete\";\n+import FilterListIcon from \"@material-ui/icons/FilterList\";\n+\n+interface Data {\n+  calories: number;\n+  carbs: number;\n+  fat: number;\n+  name: string;\n+  protein: number;\n+}\n+\n+function createData(\n+  name: string,\n+  calories: number,\n+  fat: number,\n+  carbs: number,\n+  protein: number\n+): Data {\n+  return { name, calories, fat, carbs, protein };\n+}\n+\n+const rows = [\n+  createData(\"Cupcake\", 305, 3.7, 67, 4.3),\n+  createData(\"Donut\", 452, 25.0, 51, 4.9),\n+  createData(\"Eclair\", 262, 16.0, 24, 6.0),\n+  createData(\"Frozen yoghurt\", 159, 6.0, 24, 4.0),\n+  createData(\"Gingerbread\", 356, 16.0, 49, 3.9),\n+  createData(\"Honeycomb\", 408, 3.2, 87, 6.5),\n+  createData(\"Ice cream sandwich\", 237, 9.0, 37, 4.3),\n+  createData(\"Jelly Bean\", 375, 0.0, 94, 0.0),\n+  createData(\"KitKat\", 518, 26.0, 65, 7.0),\n+  createData(\"Lollipop\", 392, 0.2, 98, 0.0),\n+  createData(\"Marshmallow\", 318, 0, 81, 2.0),\n+  createData(\"Nougat\", 360, 19.0, 9, 37.0),\n+  createData(\"Oreo\", 437, 18.0, 63, 4.0),\n+];\n+\n+function descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\n+  if (b[orderBy] < a[orderBy]) {\n+    return -1;\n+  }\n+  if (b[orderBy] > a[orderBy]) {\n+    return 1;\n+  }\n+  return 0;\n+}\n+\n+type Order = \"asc\" | \"desc\";\n+\n+function getComparator<Key extends keyof any>(\n+  order: Order,\n+  orderBy: Key\n+): (\n+  a: { [key in Key]: number | string },\n+  b: { [key in Key]: number | string }\n+) => number {\n+  return order === \"desc\"\n+    ? (a, b) => descendingComparator(a, b, orderBy)\n+    : (a, b) => -descendingComparator(a, b, orderBy);\n+}\n+\n+function stableSort<T>(array: T[], comparator: (a: T, b: T) => number) {\n+  const stabilizedThis = array.map((el, index) => [el, index] as [T, number]);\n+  stabilizedThis.sort((a, b) => {\n+    const order = comparator(a[0], b[0]);\n+    if (order !== 0) return order;\n+    return a[1] - b[1];\n+  });\n+  return stabilizedThis.map((el) => el[0]);\n+}\n+\n+interface HeadCell {\n+  disablePadding: boolean;\n+  id: keyof Data;\n+  label: string;\n+  numeric: boolean;\n+}\n+\n+const headCells: HeadCell[] = [\n+  {\n+    id: \"name\",\n+    numeric: false,\n+    disablePadding: true,\n+    label: \"Dessert (100g serving)\",\n+  },\n+  { id: \"calories\", numeric: true, disablePadding: false, label: \"Calories\" },\n+  { id: \"fat\", numeric: true, disablePadding: false, label: \"Fat (g)\" },\n+  { id: \"carbs\", numeric: true, disablePadding: false, label: \"Carbs (g)\" },\n+  { id: \"protein\", numeric: true, disablePadding: false, label: \"Protein (g)\" },\n+];\n+\n+interface EnhancedTableProps {\n+  classes: ReturnType<typeof useStyles>;\n+  numSelected: number;\n+  onRequestSort: (\n+    event: React.MouseEvent<unknown>,\n+    property: keyof Data\n+  ) => void;\n+  onSelectAllClick: (event: React.ChangeEvent<HTMLInputElement>) => void;\n+  order: Order;\n+  orderBy: string;\n+  rowCount: number;\n+}\n+\n+function EnhancedTableHead(props: EnhancedTableProps) {\n+  const {\n+    classes,\n+    onSelectAllClick,\n+    order,\n+    orderBy,\n+    numSelected,\n+    rowCount,\n+    onRequestSort,\n+  } = props;\n+  const createSortHandler =\n+    (property: keyof Data) => (event: React.MouseEvent<unknown>) => {\n+      onRequestSort(event, property);\n+    };\n+\n+  return (\n+    <TableHead>\n+      <TableRow>\n+        <TableCell padding=\"checkbox\">\n+          <Checkbox\n+            indeterminate={numSelected > 0 && numSelected < rowCount}\n+            checked={rowCount > 0 && numSelected === rowCount}\n+            onChange={onSelectAllClick}\n+            inputProps={{ \"aria-label\": \"select all desserts\" }}\n+          />\n+        </TableCell>\n+        {headCells.map((headCell) => (\n+          <TableCell\n+            key={headCell.id}\n+            align={headCell.numeric ? \"right\" : \"left\"}\n+            padding={headCell.disablePadding ? \"none\" : \"normal\"}\n+            sortDirection={orderBy === headCell.id ? order : false}\n+          >\n+            <TableSortLabel\n+              active={orderBy === headCell.id}\n+              direction={orderBy === headCell.id ? order : \"asc\"}\n+              onClick={createSortHandler(headCell.id)}\n+            >\n+              {headCell.label}\n+              {orderBy === headCell.id ? (\n+                <span className={classes.visuallyHidden}>\n+                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\n+                </span>\n+              ) : null}\n+            </TableSortLabel>\n+          </TableCell>\n+        ))}\n+      </TableRow>\n+    </TableHead>\n+  );\n+}\n+\n+const useToolbarStyles = makeStyles((theme: Theme) =>\n+  createStyles({\n+    root: {\n+      paddingLeft: theme.spacing(2),\n+      paddingRight: theme.spacing(1),\n+    },\n+    highlight:\n+      theme.palette.type === \"light\"\n+        ? {\n+            color: theme.palette.secondary.main,\n+            backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n+          }\n+        : {\n+            color: theme.palette.text.primary,\n+            backgroundColor: theme.palette.secondary.dark,\n+          },\n+    title: {\n+      flex: \"1 1 100%\",\n+    },\n+  })\n+);\n+\n+interface EnhancedTableToolbarProps {\n+  numSelected: number;\n+}\n+\n+const EnhancedTableToolbar = (props: EnhancedTableToolbarProps) => {\n+  const classes = useToolbarStyles();\n+  const { numSelected } = props;\n+\n+  return (\n+    <Toolbar\n+      className={clsx(classes.root, {\n+        [classes.highlight]: numSelected > 0,\n+      })}\n+    >\n+      {numSelected > 0 ? (\n+        <Typography\n+          className={classes.title}\n+          color=\"inherit\"\n+          variant=\"subtitle1\"\n+          component=\"div\"\n+        >\n+          {numSelected} selected\n+        </Typography>\n+      ) : (\n+        <Typography\n+          className={classes.title}\n+          variant=\"h6\"\n+          id=\"tableTitle\"\n+          component=\"div\"\n+        >\n+          Nutrition\n+        </Typography>\n+      )}\n+      {numSelected > 0 ? (\n+        <Tooltip title=\"Delete\">\n+          <IconButton aria-label=\"delete\">\n+            <DeleteIcon />\n+          </IconButton>\n+        </Tooltip>\n+      ) : (\n+        <Tooltip title=\"Filter list\">\n+          <IconButton aria-label=\"filter list\">\n+            <FilterListIcon />\n+          </IconButton>\n+        </Tooltip>\n+      )}\n+    </Toolbar>\n+  );\n+};\n+\n+const useStyles = makeStyles((theme: Theme) =>\n+  createStyles({\n+    root: {\n+      width: \"100%\",\n+    },\n+    paper: {\n+      width: \"100%\",\n+      marginBottom: theme.spacing(2),\n+    },\n+    table: {\n+      minWidth: 750,\n+    },\n+    visuallyHidden: {\n+      border: 0,\n+      clip: \"rect(0 0 0 0)\",\n+      height: 1,\n+      margin: -1,\n+      overflow: \"hidden\",\n+      padding: 0,\n+      position: \"absolute\",\n+      top: 20,\n+      width: 1,\n+    },\n+  })\n+);\n+\n+export default function EnhancedTable() {\n+  const classes = useStyles();\n+  const [order, setOrder] = React.useState<Order>(\"asc\");\n+  const [orderBy, setOrderBy] = React.useState<keyof Data>(\"calories\");\n+  const [selected, setSelected] = React.useState<string[]>([]);\n+  const [page, setPage] = React.useState(0);\n+  const [dense, setDense] = React.useState(false);\n+  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n+\n+  const handleRequestSort = (\n+    event: React.MouseEvent<unknown>,\n+    property: keyof Data\n+  ) => {\n+    const isAsc = orderBy === property && order === \"asc\";\n+    setOrder(isAsc ? \"desc\" : \"asc\");\n+    setOrderBy(property);\n+  };\n+\n+  const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\n+    if (event.target.checked) {\n+      const newSelecteds = rows.map((n) => n.name);\n+      setSelected(newSelecteds);\n+      return;\n+    }\n+    setSelected([]);\n+  };\n+\n+  const handleClick = (event: React.MouseEvent<unknown>, name: string) => {\n+    const selectedIndex = selected.indexOf(name);\n+    let newSelected: string[] = [];\n+\n+    if (selectedIndex === -1) {\n+      newSelected = newSelected.concat(selected, name);\n+    } else if (selectedIndex === 0) {\n+      newSelected = newSelected.concat(selected.slice(1));\n+    } else if (selectedIndex === selected.length - 1) {\n+      newSelected = newSelected.concat(selected.slice(0, -1));\n+    } else if (selectedIndex > 0) {\n+      newSelected = newSelected.concat(\n+        selected.slice(0, selectedIndex),\n+        selected.slice(selectedIndex + 1)\n+      );\n+    }\n+\n+    setSelected(newSelected);\n+  };\n+\n+  const handleChangePage = (event: unknown, newPage: number) => {\n+    setPage(newPage);\n+  };\n+\n+  const handleChangeRowsPerPage = (\n+    event: React.ChangeEvent<HTMLInputElement>\n+  ) => {\n+    setRowsPerPage(parseInt(event.target.value, 10));\n+    setPage(0);\n+  };\n+\n+  const handleChangeDense = (event: React.ChangeEvent<HTMLInputElement>) => {\n+    setDense(event.target.checked);\n+  };\n+\n+  const isSelected = (name: string) => selected.indexOf(name) !== -1;\n+\n+  const emptyRows =\n+    rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n+\n+  return (\n+    <div className={classes.root}>\n+      <Paper className={classes.paper}>\n+        <EnhancedTableToolbar numSelected={selected.length} />\n+        <TableContainer>\n+          <Table\n+            className={classes.table}\n+            aria-labelledby=\"tableTitle\"\n+            size={dense ? \"small\" : \"medium\"}\n+            aria-label=\"enhanced table\"\n+          >\n+            <EnhancedTableHead\n+              classes={classes}\n+              numSelected={selected.length}\n+              order={order}\n+              orderBy={orderBy}\n+              onSelectAllClick={handleSelectAllClick}\n+              onRequestSort={handleRequestSort}\n+              rowCount={rows.length}\n+            />\n+            <TableBody>\n+              {stableSort(rows, getComparator(order, orderBy))\n+                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n+                .map((row, index) => {\n+                  const isItemSelected = isSelected(row.name);\n+                  const labelId = `enhanced-table-checkbox-${index}`;\n+\n+                  return (\n+                    <TableRow\n+                      hover\n+                      onClick={(event) => handleClick(event, row.name)}\n+                      role=\"checkbox\"\n+                      aria-checked={isItemSelected}\n+                      tabIndex={-1}\n+                      key={row.name}\n+                      selected={isItemSelected}\n+                    >\n+                      <TableCell padding=\"checkbox\">\n+                        <Checkbox\n+                          checked={isItemSelected}\n+                          inputProps={{ \"aria-labelledby\": labelId }}\n+                        />\n+                      </TableCell>\n+                      <TableCell\n+                        component=\"th\"\n+                        id={labelId}\n+                        scope=\"row\"\n+                        padding=\"none\"\n+                      >\n+                        {row.name}\n+                      </TableCell>\n+                      <TableCell align=\"right\">{row.calories}</TableCell>\n+                      <TableCell align=\"right\">{row.fat}</TableCell>\n+                      <TableCell align=\"right\">{row.carbs}</TableCell>\n+                      <TableCell align=\"right\">{row.protein}</TableCell>\n+                    </TableRow>\n+                  );\n+                })}\n+              {emptyRows > 0 && (\n+                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n+                  <TableCell colSpan={6} />\n+                </TableRow>\n+              )}\n+            </TableBody>\n+          </Table>\n+        </TableContainer>\n+        <TablePagination\n+          rowsPerPageOptions={[5, 10, 25]}\n+          component=\"div\"\n+          count={rows.length}\n+          rowsPerPage={rowsPerPage}\n+          page={page}\n+          onPageChange={handleChangePage}\n+          onRowsPerPageChange={handleChangeRowsPerPage}\n+        />\n+      </Paper>\n+      <FormControlLabel\n+        control={<Switch checked={dense} onChange={handleChangeDense} />}\n+        label=\"Dense padding\"\n+      />\n+    </div>\n+  );\n+}\n"
        },
        {
          "date": 1708506511266,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,256 +1,59 @@\n-import React from \"react\";\n-import clsx from \"clsx\";\n+import React, { useEffect, useRef, useState } from \"react\";\n import {\n   createStyles,\n   lighten,\n   makeStyles,\n   Theme,\n } from \"@material-ui/core/styles\";\n-import Table from \"@material-ui/core/Table\";\n-import TableBody from \"@material-ui/core/TableBody\";\n-import TableCell from \"@material-ui/core/TableCell\";\n-import TableContainer from \"@material-ui/core/TableContainer\";\n-import TableHead from \"@material-ui/core/TableHead\";\n-import TablePagination from \"@material-ui/core/TablePagination\";\n-import TableRow from \"@material-ui/core/TableRow\";\n-import TableSortLabel from \"@material-ui/core/TableSortLabel\";\n-import Toolbar from \"@material-ui/core/Toolbar\";\n-import Typography from \"@material-ui/core/Typography\";\n-import Paper from \"@material-ui/core/Paper\";\n-import Checkbox from \"@material-ui/core/Checkbox\";\n-import IconButton from \"@material-ui/core/IconButton\";\n-import Tooltip from \"@material-ui/core/Tooltip\";\n-import FormControlLabel from \"@material-ui/core/FormControlLabel\";\n-import Switch from \"@material-ui/core/Switch\";\n-import DeleteIcon from \"@material-ui/icons/Delete\";\n-import FilterListIcon from \"@material-ui/icons/FilterList\";\n \n-interface Data {\n-  calories: number;\n-  carbs: number;\n-  fat: number;\n+interface Advisor {\n+  _id: number;\n   name: string;\n-  protein: number;\n-}\n+  affiliation: string;\n+  homepage: string;\n+  twitter: string;\n+  github: string;\n+  email: string;\n+  position: string;\n+  connections: {\n+    _id: number;\n \n-function createData(\n-  name: string,\n-  calories: number,\n-  fat: number,\n-  carbs: number,\n-  protein: number\n-): Data {\n-  return { name, calories, fat, carbs, protein };\n+    relation: Array<{\n+      class: string;\n+      role: string;\n+      duration: {\n+        start: { year: number; month: number };\n+        end: { year: number; month: number };\n+      };\n+    }>;\n+    collaborations: Array<{\n+      papername: string;\n+      year: number;\n+      url: string;\n+    }>;\n+    latestCollaboration: number;\n+    relationFactor: number;\n+  }[];\n }\n+const advisors: Advisor[] = require(\"../../../../data/advisors.json\");\n \n-const rows = [\n-  createData(\"Cupcake\", 305, 3.7, 67, 4.3),\n-  createData(\"Donut\", 452, 25.0, 51, 4.9),\n-  createData(\"Eclair\", 262, 16.0, 24, 6.0),\n-  createData(\"Frozen yoghurt\", 159, 6.0, 24, 4.0),\n-  createData(\"Gingerbread\", 356, 16.0, 49, 3.9),\n-  createData(\"Honeycomb\", 408, 3.2, 87, 6.5),\n-  createData(\"Ice cream sandwich\", 237, 9.0, 37, 4.3),\n-  createData(\"Jelly Bean\", 375, 0.0, 94, 0.0),\n-  createData(\"KitKat\", 518, 26.0, 65, 7.0),\n-  createData(\"Lollipop\", 392, 0.2, 98, 0.0),\n-  createData(\"Marshmallow\", 318, 0, 81, 2.0),\n-  createData(\"Nougat\", 360, 19.0, 9, 37.0),\n-  createData(\"Oreo\", 437, 18.0, 63, 4.0),\n-];\n+import {\n+  TableContainer,\n+  Table,\n+  TableHead,\n+  TableRow,\n+  TableCell,\n+  TableBody,\n+  Paper,\n+  IconButton,\n+  Typography,\n+  Toolbar,\n+  Link,\n+} from \"@mui/material\";\n \n-function descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\n-  if (b[orderBy] < a[orderBy]) {\n-    return -1;\n-  }\n-  if (b[orderBy] > a[orderBy]) {\n-    return 1;\n-  }\n-  return 0;\n-}\n+import CloseIcon from \"@mui/icons-material/Close\";\n \n-type Order = \"asc\" | \"desc\";\n-\n-function getComparator<Key extends keyof any>(\n-  order: Order,\n-  orderBy: Key\n-): (\n-  a: { [key in Key]: number | string },\n-  b: { [key in Key]: number | string }\n-) => number {\n-  return order === \"desc\"\n-    ? (a, b) => descendingComparator(a, b, orderBy)\n-    : (a, b) => -descendingComparator(a, b, orderBy);\n-}\n-\n-function stableSort<T>(array: T[], comparator: (a: T, b: T) => number) {\n-  const stabilizedThis = array.map((el, index) => [el, index] as [T, number]);\n-  stabilizedThis.sort((a, b) => {\n-    const order = comparator(a[0], b[0]);\n-    if (order !== 0) return order;\n-    return a[1] - b[1];\n-  });\n-  return stabilizedThis.map((el) => el[0]);\n-}\n-\n-interface HeadCell {\n-  disablePadding: boolean;\n-  id: keyof Data;\n-  label: string;\n-  numeric: boolean;\n-}\n-\n-const headCells: HeadCell[] = [\n-  {\n-    id: \"name\",\n-    numeric: false,\n-    disablePadding: true,\n-    label: \"Dessert (100g serving)\",\n-  },\n-  { id: \"calories\", numeric: true, disablePadding: false, label: \"Calories\" },\n-  { id: \"fat\", numeric: true, disablePadding: false, label: \"Fat (g)\" },\n-  { id: \"carbs\", numeric: true, disablePadding: false, label: \"Carbs (g)\" },\n-  { id: \"protein\", numeric: true, disablePadding: false, label: \"Protein (g)\" },\n-];\n-\n-interface EnhancedTableProps {\n-  classes: ReturnType<typeof useStyles>;\n-  numSelected: number;\n-  onRequestSort: (\n-    event: React.MouseEvent<unknown>,\n-    property: keyof Data\n-  ) => void;\n-  onSelectAllClick: (event: React.ChangeEvent<HTMLInputElement>) => void;\n-  order: Order;\n-  orderBy: string;\n-  rowCount: number;\n-}\n-\n-function EnhancedTableHead(props: EnhancedTableProps) {\n-  const {\n-    classes,\n-    onSelectAllClick,\n-    order,\n-    orderBy,\n-    numSelected,\n-    rowCount,\n-    onRequestSort,\n-  } = props;\n-  const createSortHandler =\n-    (property: keyof Data) => (event: React.MouseEvent<unknown>) => {\n-      onRequestSort(event, property);\n-    };\n-\n-  return (\n-    <TableHead>\n-      <TableRow>\n-        <TableCell padding=\"checkbox\">\n-          <Checkbox\n-            indeterminate={numSelected > 0 && numSelected < rowCount}\n-            checked={rowCount > 0 && numSelected === rowCount}\n-            onChange={onSelectAllClick}\n-            inputProps={{ \"aria-label\": \"select all desserts\" }}\n-          />\n-        </TableCell>\n-        {headCells.map((headCell) => (\n-          <TableCell\n-            key={headCell.id}\n-            align={headCell.numeric ? \"right\" : \"left\"}\n-            padding={headCell.disablePadding ? \"none\" : \"normal\"}\n-            sortDirection={orderBy === headCell.id ? order : false}\n-          >\n-            <TableSortLabel\n-              active={orderBy === headCell.id}\n-              direction={orderBy === headCell.id ? order : \"asc\"}\n-              onClick={createSortHandler(headCell.id)}\n-            >\n-              {headCell.label}\n-              {orderBy === headCell.id ? (\n-                <span className={classes.visuallyHidden}>\n-                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\n-                </span>\n-              ) : null}\n-            </TableSortLabel>\n-          </TableCell>\n-        ))}\n-      </TableRow>\n-    </TableHead>\n-  );\n-}\n-\n-const useToolbarStyles = makeStyles((theme: Theme) =>\n-  createStyles({\n-    root: {\n-      paddingLeft: theme.spacing(2),\n-      paddingRight: theme.spacing(1),\n-    },\n-    highlight:\n-      theme.palette.type === \"light\"\n-        ? {\n-            color: theme.palette.secondary.main,\n-            backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n-          }\n-        : {\n-            color: theme.palette.text.primary,\n-            backgroundColor: theme.palette.secondary.dark,\n-          },\n-    title: {\n-      flex: \"1 1 100%\",\n-    },\n-  })\n-);\n-\n-interface EnhancedTableToolbarProps {\n-  numSelected: number;\n-}\n-\n-const EnhancedTableToolbar = (props: EnhancedTableToolbarProps) => {\n-  const classes = useToolbarStyles();\n-  const { numSelected } = props;\n-\n-  return (\n-    <Toolbar\n-      className={clsx(classes.root, {\n-        [classes.highlight]: numSelected > 0,\n-      })}\n-    >\n-      {numSelected > 0 ? (\n-        <Typography\n-          className={classes.title}\n-          color=\"inherit\"\n-          variant=\"subtitle1\"\n-          component=\"div\"\n-        >\n-          {numSelected} selected\n-        </Typography>\n-      ) : (\n-        <Typography\n-          className={classes.title}\n-          variant=\"h6\"\n-          id=\"tableTitle\"\n-          component=\"div\"\n-        >\n-          Nutrition\n-        </Typography>\n-      )}\n-      {numSelected > 0 ? (\n-        <Tooltip title=\"Delete\">\n-          <IconButton aria-label=\"delete\">\n-            <DeleteIcon />\n-          </IconButton>\n-        </Tooltip>\n-      ) : (\n-        <Tooltip title=\"Filter list\">\n-          <IconButton aria-label=\"filter list\">\n-            <FilterListIcon />\n-          </IconButton>\n-        </Tooltip>\n-      )}\n-    </Toolbar>\n-  );\n-};\n-\n const useStyles = makeStyles((theme: Theme) =>\n   createStyles({\n     root: {\n       width: \"100%\",\n@@ -261,8 +64,12 @@\n     },\n     table: {\n       minWidth: 750,\n     },\n+    tableHeadRow: {\n+      // 移除表格表头底部的边框线\n+      borderBottom: \"none\",\n+    },\n     visuallyHidden: {\n       border: 0,\n       clip: \"rect(0 0 0 0)\",\n       height: 1,\n@@ -275,154 +82,124 @@\n     },\n   })\n );\n \n-export default function EnhancedTable() {\n+const useToolbarStyles = makeStyles((theme: Theme) =>\n+  createStyles({\n+    root: {\n+      paddingLeft: theme.spacing(2),\n+      paddingRight: theme.spacing(1),\n+    },\n+    highlight:\n+      theme.palette.type === \"light\"\n+        ? {\n+            color: theme.palette.secondary.main,\n+            backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n+          }\n+        : {\n+            color: theme.palette.text.primary,\n+            backgroundColor: theme.palette.secondary.dark,\n+          },\n+    title: {\n+      flex: \"1 1 100%\",\n+    },\n+  })\n+);\n+\n+//@ts-ignore\n+const ListView = ({ onClose }) => {\n   const classes = useStyles();\n-  const [order, setOrder] = React.useState<Order>(\"asc\");\n-  const [orderBy, setOrderBy] = React.useState<keyof Data>(\"calories\");\n-  const [selected, setSelected] = React.useState<string[]>([]);\n-  const [page, setPage] = React.useState(0);\n-  const [dense, setDense] = React.useState(false);\n-  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n-\n-  const handleRequestSort = (\n-    event: React.MouseEvent<unknown>,\n-    property: keyof Data\n-  ) => {\n-    const isAsc = orderBy === property && order === \"asc\";\n-    setOrder(isAsc ? \"desc\" : \"asc\");\n-    setOrderBy(property);\n-  };\n-\n-  const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\n-    if (event.target.checked) {\n-      const newSelecteds = rows.map((n) => n.name);\n-      setSelected(newSelecteds);\n-      return;\n-    }\n-    setSelected([]);\n-  };\n-\n-  const handleClick = (event: React.MouseEvent<unknown>, name: string) => {\n-    const selectedIndex = selected.indexOf(name);\n-    let newSelected: string[] = [];\n-\n-    if (selectedIndex === -1) {\n-      newSelected = newSelected.concat(selected, name);\n-    } else if (selectedIndex === 0) {\n-      newSelected = newSelected.concat(selected.slice(1));\n-    } else if (selectedIndex === selected.length - 1) {\n-      newSelected = newSelected.concat(selected.slice(0, -1));\n-    } else if (selectedIndex > 0) {\n-      newSelected = newSelected.concat(\n-        selected.slice(0, selectedIndex),\n-        selected.slice(selectedIndex + 1)\n-      );\n-    }\n-\n-    setSelected(newSelected);\n-  };\n-\n-  const handleChangePage = (event: unknown, newPage: number) => {\n-    setPage(newPage);\n-  };\n-\n-  const handleChangeRowsPerPage = (\n-    event: React.ChangeEvent<HTMLInputElement>\n-  ) => {\n-    setRowsPerPage(parseInt(event.target.value, 10));\n-    setPage(0);\n-  };\n-\n-  const handleChangeDense = (event: React.ChangeEvent<HTMLInputElement>) => {\n-    setDense(event.target.checked);\n-  };\n-\n-  const isSelected = (name: string) => selected.indexOf(name) !== -1;\n-\n-  const emptyRows =\n-    rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n-\n+  const toolClasses = useToolbarStyles();\n   return (\n-    <div className={classes.root}>\n-      <Paper className={classes.paper}>\n-        <EnhancedTableToolbar numSelected={selected.length} />\n-        <TableContainer>\n-          <Table\n-            className={classes.table}\n-            aria-labelledby=\"tableTitle\"\n-            size={dense ? \"small\" : \"medium\"}\n-            aria-label=\"enhanced table\"\n-          >\n-            <EnhancedTableHead\n-              classes={classes}\n-              numSelected={selected.length}\n-              order={order}\n-              orderBy={orderBy}\n-              onSelectAllClick={handleSelectAllClick}\n-              onRequestSort={handleRequestSort}\n-              rowCount={rows.length}\n-            />\n+    <div className={classes.paper}>\n+      <Paper\n+        className={classes.paper}\n+        sx={{ width: \"100%\", paddingLeft: 2, paddingRight: 2, paddingTop: 2 }}\n+      >\n+        {\" \"}\n+        {/* 确保这一层也是充满父元素的 */}\n+        <Toolbar\n+          className={toolClasses.root}\n+          sx={{\n+            display: \"flex\",\n+            justifyContent: \"space-between\",\n+            alignItems: \"center\",\n+            p: 2,\n+            width: \"100%\",\n+          }}\n+        >\n+          <Typography variant=\"h6\">Main Advisor</Typography>\n+          <IconButton onClick={onClose} color=\"inherit\">\n+            <CloseIcon />\n+          </IconButton>\n+        </Toolbar>\n+        <TableContainer component={Paper} sx={{ width: \"100%\" }}>\n+          <Table stickyHeader className={classes.table}>\n+            <TableHead>\n+              <TableRow>\n+                <TableCell align=\"center\">Advisor Name</TableCell>\n+                <TableCell align=\"center\">Position</TableCell>\n+                <TableCell align=\"center\">Affliation</TableCell>\n+                <TableCell align=\"center\">HomePage</TableCell>\n+                <TableCell align=\"center\">Email</TableCell>\n+                <TableCell align=\"center\">Twitter</TableCell>\n+                <TableCell align=\"center\">GitHub</TableCell>\n+                <TableCell align=\"center\">Collaborations</TableCell>\n+              </TableRow>\n+            </TableHead>\n             <TableBody>\n-              {stableSort(rows, getComparator(order, orderBy))\n-                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n-                .map((row, index) => {\n-                  const isItemSelected = isSelected(row.name);\n-                  const labelId = `enhanced-table-checkbox-${index}`;\n-\n-                  return (\n-                    <TableRow\n-                      hover\n-                      onClick={(event) => handleClick(event, row.name)}\n-                      role=\"checkbox\"\n-                      aria-checked={isItemSelected}\n-                      tabIndex={-1}\n-                      key={row.name}\n-                      selected={isItemSelected}\n+              {advisors.map((advisor) => (\n+                <TableRow\n+                  sx={{ border: \"none\" }}\n+                  key={advisor._id}\n+                  hover\n+                >\n+                  <TableCell align=\"center\">{advisor.name}</TableCell>\n+                  <TableCell align=\"center\">{advisor.position}</TableCell>\n+                  <TableCell align=\"center\">{advisor.affiliation}</TableCell>\n+                  <TableCell align=\"center\">\n+                    <Link\n+                      href={advisor.homepage}\n+                      target=\"_blank\"\n+                      rel=\"noopener noreferrer\"\n                     >\n-                      <TableCell padding=\"checkbox\">\n-                        <Checkbox\n-                          checked={isItemSelected}\n-                          inputProps={{ \"aria-labelledby\": labelId }}\n-                        />\n-                      </TableCell>\n-                      <TableCell\n-                        component=\"th\"\n-                        id={labelId}\n-                        scope=\"row\"\n-                        padding=\"none\"\n-                      >\n-                        {row.name}\n-                      </TableCell>\n-                      <TableCell align=\"right\">{row.calories}</TableCell>\n-                      <TableCell align=\"right\">{row.fat}</TableCell>\n-                      <TableCell align=\"right\">{row.carbs}</TableCell>\n-                      <TableCell align=\"right\">{row.protein}</TableCell>\n-                    </TableRow>\n-                  );\n-                })}\n-              {emptyRows > 0 && (\n-                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n-                  <TableCell colSpan={6} />\n+                      {advisor.homepage}\n+                    </Link>\n+                  </TableCell>\n+                  <TableCell align=\"center\">\n+                    <Link href={`mailto:${advisor.email}`}>\n+                      {advisor.email}\n+                    </Link>\n+                  </TableCell>\n+                  <TableCell align=\"center\">\n+                    <Link\n+                      href={advisor.twitter}\n+                      target=\"_blank\"\n+                      rel=\"noopener noreferrer\"\n+                    >\n+                      {advisor.twitter}\n+                    </Link>\n+                  </TableCell>\n+                  <TableCell align=\"center\">\n+                    <Link\n+                      href={advisor.github}\n+                      target=\"_blank\"\n+                      rel=\"noopener noreferrer\"\n+                    >\n+                      {advisor.github}\n+                    </Link>\n+                  </TableCell>\n+                  <TableCell align=\"center\">\n+                    {/* Implementation for collaborations and connection cell */}\n+                    {/* You can add a button or link here to navigate to the connection table */}\n+                  </TableCell>\n                 </TableRow>\n-              )}\n+              ))}\n             </TableBody>\n           </Table>\n         </TableContainer>\n-        <TablePagination\n-          rowsPerPageOptions={[5, 10, 25]}\n-          component=\"div\"\n-          count={rows.length}\n-          rowsPerPage={rowsPerPage}\n-          page={page}\n-          onPageChange={handleChangePage}\n-          onRowsPerPageChange={handleChangeRowsPerPage}\n-        />\n       </Paper>\n-      <FormControlLabel\n-        control={<Switch checked={dense} onChange={handleChangeDense} />}\n-        label=\"Dense padding\"\n-      />\n     </div>\n   );\n-}\n+};\n+\n+export default ListView;\n"
        },
        {
          "date": 1708513568384,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,199 @@\n+import React, { useEffect, useRef, useState } from \"react\";\n+\n+interface Advisor {\n+  _id: number;\n+  name: string;\n+  affiliation: string;\n+  homepage: string;\n+  twitter: string;\n+  github: string;\n+  email: string;\n+  position: string;\n+  connections: {\n+    _id: number;\n+\n+    relation: Array<{\n+      class: string;\n+      role: string;\n+      duration: {\n+        start: { year: number; month: number };\n+        end: { year: number; month: number };\n+      };\n+    }>;\n+    collaborations: Array<{\n+      papername: string;\n+      year: number;\n+      url: string;\n+    }>;\n+    latestCollaboration: number;\n+    relationFactor: number;\n+  }[];\n+}\n+const advisors: Advisor[] = require(\"../../../../data/advisors.json\");\n+\n+import {\n+  TableContainer,\n+  Table,\n+  TableHead,\n+  TableRow,\n+  TableCell,\n+  TableBody,\n+  Paper,\n+  IconButton,\n+  Typography,\n+  Toolbar,\n+  Link,\n+} from \"@mui/material\";\n+\n+import CloseIcon from \"@mui/icons-material/Close\";\n+\n+const useStyles = makeStyles((theme: Theme) =>\n+  createStyles({\n+    root: {\n+      width: \"100%\",\n+    },\n+    paper: {\n+      width: \"100%\",\n+      marginBottom: theme.spacing(2),\n+    },\n+    table: {\n+      minWidth: 750,\n+    },\n+    tableHeadRow: {\n+      // 移除表格表头底部的边框线\n+      borderBottom: \"none\",\n+    },\n+    visuallyHidden: {\n+      border: 0,\n+      clip: \"rect(0 0 0 0)\",\n+      height: 1,\n+      margin: -1,\n+      overflow: \"hidden\",\n+      padding: 0,\n+      position: \"absolute\",\n+      top: 20,\n+      width: 1,\n+    },\n+  })\n+);\n+\n+const useToolbarStyles = makeStyles((theme: Theme) =>\n+  createStyles({\n+    root: {\n+      paddingLeft: theme.spacing(2),\n+      paddingRight: theme.spacing(1),\n+    },\n+    highlight:\n+      theme.palette.type === \"light\"\n+        ? {\n+            color: theme.palette.secondary.main,\n+            backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n+          }\n+        : {\n+            color: theme.palette.text.primary,\n+            backgroundColor: theme.palette.secondary.dark,\n+          },\n+    title: {\n+      flex: \"1 1 100%\",\n+    },\n+  })\n+);\n+\n+//@ts-ignore\n+const ListView = ({ onClose }) => {\n+  const classes = useStyles();\n+  const toolClasses = useToolbarStyles();\n+  return (\n+    <div className={classes.paper}>\n+      <Paper\n+        className={classes.paper}\n+        sx={{ width: \"100%\", paddingLeft: 2, paddingRight: 2, paddingTop: 2 }}\n+      >\n+        {\" \"}\n+        {/* 确保这一层也是充满父元素的 */}\n+        <Toolbar\n+          className={toolClasses.root}\n+          sx={{\n+            display: \"flex\",\n+            justifyContent: \"space-between\",\n+            alignItems: \"center\",\n+            p: 2,\n+            width: \"100%\",\n+          }}\n+        >\n+          <Typography variant=\"h6\">Main Advisor</Typography>\n+          <IconButton onClick={onClose} color=\"inherit\">\n+            <CloseIcon />\n+          </IconButton>\n+        </Toolbar>\n+        <TableContainer component={Paper} sx={{ width: \"100%\" }}>\n+          <Table stickyHeader className={classes.table}>\n+            <TableHead>\n+              <TableRow>\n+                <TableCell align=\"center\">Advisor Name</TableCell>\n+                <TableCell align=\"center\">Position</TableCell>\n+                <TableCell align=\"center\">Affliation</TableCell>\n+                <TableCell align=\"center\">HomePage</TableCell>\n+                <TableCell align=\"center\">Email</TableCell>\n+                <TableCell align=\"center\">Twitter</TableCell>\n+                <TableCell align=\"center\">GitHub</TableCell>\n+                <TableCell align=\"center\">Collaborations</TableCell>\n+              </TableRow>\n+            </TableHead>\n+            <TableBody>\n+              {advisors.map((advisor) => (\n+                <TableRow\n+                  sx={{ border: \"none\" }}\n+                  key={advisor._id}\n+                  hover\n+                >\n+                  <TableCell align=\"center\">{advisor.name}</TableCell>\n+                  <TableCell align=\"center\">{advisor.position}</TableCell>\n+                  <TableCell align=\"center\">{advisor.affiliation}</TableCell>\n+                  <TableCell align=\"center\">\n+                    <Link\n+                      href={advisor.homepage}\n+                      target=\"_blank\"\n+                      rel=\"noopener noreferrer\"\n+                    >\n+                      {advisor.homepage}\n+                    </Link>\n+                  </TableCell>\n+                  <TableCell align=\"center\">\n+                    <Link href={`mailto:${advisor.email}`}>\n+                      {advisor.email}\n+                    </Link>\n+                  </TableCell>\n+                  <TableCell align=\"center\">\n+                    <Link\n+                      href={advisor.twitter}\n+                      target=\"_blank\"\n+                      rel=\"noopener noreferrer\"\n+                    >\n+                      {advisor.twitter}\n+                    </Link>\n+                  </TableCell>\n+                  <TableCell align=\"center\">\n+                    <Link\n+                      href={advisor.github}\n+                      target=\"_blank\"\n+                      rel=\"noopener noreferrer\"\n+                    >\n+                      {advisor.github}\n+                    </Link>\n+                  </TableCell>\n+                  <TableCell align=\"center\">\n+                    {/* Implementation for collaborations and connection cell */}\n+                    {/* You can add a button or link here to navigate to the connection table */}\n+                  </TableCell>\n+                </TableRow>\n+              ))}\n+            </TableBody>\n+          </Table>\n+        </TableContainer>\n+      </Paper>\n+    </div>\n+  );\n+};\n+\n+export default ListView;\n"
        },
        {
          "date": 1708513579595,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,60 +46,8 @@\n } from \"@mui/material\";\n \n import CloseIcon from \"@mui/icons-material/Close\";\n \n-const useStyles = makeStyles((theme: Theme) =>\n-  createStyles({\n-    root: {\n-      width: \"100%\",\n-    },\n-    paper: {\n-      width: \"100%\",\n-      marginBottom: theme.spacing(2),\n-    },\n-    table: {\n-      minWidth: 750,\n-    },\n-    tableHeadRow: {\n-      // 移除表格表头底部的边框线\n-      borderBottom: \"none\",\n-    },\n-    visuallyHidden: {\n-      border: 0,\n-      clip: \"rect(0 0 0 0)\",\n-      height: 1,\n-      margin: -1,\n-      overflow: \"hidden\",\n-      padding: 0,\n-      position: \"absolute\",\n-      top: 20,\n-      width: 1,\n-    },\n-  })\n-);\n-\n-const useToolbarStyles = makeStyles((theme: Theme) =>\n-  createStyles({\n-    root: {\n-      paddingLeft: theme.spacing(2),\n-      paddingRight: theme.spacing(1),\n-    },\n-    highlight:\n-      theme.palette.type === \"light\"\n-        ? {\n-            color: theme.palette.secondary.main,\n-            backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n-          }\n-        : {\n-            color: theme.palette.text.primary,\n-            backgroundColor: theme.palette.secondary.dark,\n-          },\n-    title: {\n-      flex: \"1 1 100%\",\n-    },\n-  })\n-);\n-\n //@ts-ignore\n const ListView = ({ onClose }) => {\n   const classes = useStyles();\n   const toolClasses = useToolbarStyles();\n@@ -196,209 +144,4 @@\n   );\n };\n \n export default ListView;\n-import React, { useEffect, useRef, useState } from \"react\";\n-import {\n-  createStyles,\n-  lighten,\n-  makeStyles,\n-  Theme,\n-} from \"@material-ui/core/styles\";\n-\n-interface Advisor {\n-  _id: number;\n-  name: string;\n-  affiliation: string;\n-  homepage: string;\n-  twitter: string;\n-  github: string;\n-  email: string;\n-  position: string;\n-  connections: {\n-    _id: number;\n-\n-    relation: Array<{\n-      class: string;\n-      role: string;\n-      duration: {\n-        start: { year: number; month: number };\n-        end: { year: number; month: number };\n-      };\n-    }>;\n-    collaborations: Array<{\n-      papername: string;\n-      year: number;\n-      url: string;\n-    }>;\n-    latestCollaboration: number;\n-    relationFactor: number;\n-  }[];\n-}\n-const advisors: Advisor[] = require(\"../../../../data/advisors.json\");\n-\n-import {\n-  TableContainer,\n-  Table,\n-  TableHead,\n-  TableRow,\n-  TableCell,\n-  TableBody,\n-  Paper,\n-  IconButton,\n-  Typography,\n-  Toolbar,\n-  Link,\n-} from \"@mui/material\";\n-\n-import CloseIcon from \"@mui/icons-material/Close\";\n-\n-const useStyles = makeStyles((theme: Theme) =>\n-  createStyles({\n-    root: {\n-      width: \"100%\",\n-    },\n-    paper: {\n-      width: \"100%\",\n-      marginBottom: theme.spacing(2),\n-    },\n-    table: {\n-      minWidth: 750,\n-    },\n-    tableHeadRow: {\n-      // 移除表格表头底部的边框线\n-      borderBottom: \"none\",\n-    },\n-    visuallyHidden: {\n-      border: 0,\n-      clip: \"rect(0 0 0 0)\",\n-      height: 1,\n-      margin: -1,\n-      overflow: \"hidden\",\n-      padding: 0,\n-      position: \"absolute\",\n-      top: 20,\n-      width: 1,\n-    },\n-  })\n-);\n-\n-const useToolbarStyles = makeStyles((theme: Theme) =>\n-  createStyles({\n-    root: {\n-      paddingLeft: theme.spacing(2),\n-      paddingRight: theme.spacing(1),\n-    },\n-    highlight:\n-      theme.palette.type === \"light\"\n-        ? {\n-            color: theme.palette.secondary.main,\n-            backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n-          }\n-        : {\n-            color: theme.palette.text.primary,\n-            backgroundColor: theme.palette.secondary.dark,\n-          },\n-    title: {\n-      flex: \"1 1 100%\",\n-    },\n-  })\n-);\n-\n-//@ts-ignore\n-const ListView = ({ onClose }) => {\n-  const classes = useStyles();\n-  const toolClasses = useToolbarStyles();\n-  return (\n-    <div className={classes.paper}>\n-      <Paper\n-        className={classes.paper}\n-        sx={{ width: \"100%\", paddingLeft: 2, paddingRight: 2, paddingTop: 2 }}\n-      >\n-        {\" \"}\n-        {/* 确保这一层也是充满父元素的 */}\n-        <Toolbar\n-          className={toolClasses.root}\n-          sx={{\n-            display: \"flex\",\n-            justifyContent: \"space-between\",\n-            alignItems: \"center\",\n-            p: 2,\n-            width: \"100%\",\n-          }}\n-        >\n-          <Typography variant=\"h6\">Main Advisor</Typography>\n-          <IconButton onClick={onClose} color=\"inherit\">\n-            <CloseIcon />\n-          </IconButton>\n-        </Toolbar>\n-        <TableContainer component={Paper} sx={{ width: \"100%\" }}>\n-          <Table stickyHeader className={classes.table}>\n-            <TableHead>\n-              <TableRow>\n-                <TableCell align=\"center\">Advisor Name</TableCell>\n-                <TableCell align=\"center\">Position</TableCell>\n-                <TableCell align=\"center\">Affliation</TableCell>\n-                <TableCell align=\"center\">HomePage</TableCell>\n-                <TableCell align=\"center\">Email</TableCell>\n-                <TableCell align=\"center\">Twitter</TableCell>\n-                <TableCell align=\"center\">GitHub</TableCell>\n-                <TableCell align=\"center\">Collaborations</TableCell>\n-              </TableRow>\n-            </TableHead>\n-            <TableBody>\n-              {advisors.map((advisor) => (\n-                <TableRow\n-                  sx={{ border: \"none\" }}\n-                  key={advisor._id}\n-                  hover\n-                >\n-                  <TableCell align=\"center\">{advisor.name}</TableCell>\n-                  <TableCell align=\"center\">{advisor.position}</TableCell>\n-                  <TableCell align=\"center\">{advisor.affiliation}</TableCell>\n-                  <TableCell align=\"center\">\n-                    <Link\n-                      href={advisor.homepage}\n-                      target=\"_blank\"\n-                      rel=\"noopener noreferrer\"\n-                    >\n-                      {advisor.homepage}\n-                    </Link>\n-                  </TableCell>\n-                  <TableCell align=\"center\">\n-                    <Link href={`mailto:${advisor.email}`}>\n-                      {advisor.email}\n-                    </Link>\n-                  </TableCell>\n-                  <TableCell align=\"center\">\n-                    <Link\n-                      href={advisor.twitter}\n-                      target=\"_blank\"\n-                      rel=\"noopener noreferrer\"\n-                    >\n-                      {advisor.twitter}\n-                    </Link>\n-                  </TableCell>\n-                  <TableCell align=\"center\">\n-                    <Link\n-                      href={advisor.github}\n-                      target=\"_blank\"\n-                      rel=\"noopener noreferrer\"\n-                    >\n-                      {advisor.github}\n-                    </Link>\n-                  </TableCell>\n-                  <TableCell align=\"center\">\n-                    {/* Implementation for collaborations and connection cell */}\n-                    {/* You can add a button or link here to navigate to the connection table */}\n-                  </TableCell>\n-                </TableRow>\n-              ))}\n-            </TableBody>\n-          </Table>\n-        </TableContainer>\n-      </Paper>\n-    </div>\n-  );\n-};\n-\n-export default ListView;\n"
        },
        {
          "date": 1708513590803,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,20 +48,16 @@\n import CloseIcon from \"@mui/icons-material/Close\";\n \n //@ts-ignore\n const ListView = ({ onClose }) => {\n-  const classes = useStyles();\n-  const toolClasses = useToolbarStyles();\n   return (\n-    <div className={classes.paper}>\n+    <div>\n       <Paper\n-        className={classes.paper}\n         sx={{ width: \"100%\", paddingLeft: 2, paddingRight: 2, paddingTop: 2 }}\n       >\n         {\" \"}\n         {/* 确保这一层也是充满父元素的 */}\n         <Toolbar\n-          className={toolClasses.root}\n           sx={{\n             display: \"flex\",\n             justifyContent: \"space-between\",\n             alignItems: \"center\",\n"
        },
        {
          "date": 1708513824652,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,9 +70,9 @@\n             <CloseIcon />\n           </IconButton>\n         </Toolbar>\n         <TableContainer component={Paper} sx={{ width: \"100%\" }}>\n-          <Table stickyHeader className={classes.table}>\n+          <Table stickyHeader>\n             <TableHead>\n               <TableRow>\n                 <TableCell align=\"center\">Advisor Name</TableCell>\n                 <TableCell align=\"center\">Position</TableCell>\n"
        },
        {
          "date": 1708513847814,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,6 @@\n import React, { useEffect, useRef, useState } from \"react\";\n+import { createStyles, lighten, makeStyles, Theme } from \"@material-ui\";\n \n interface Advisor {\n   _id: number;\n   name: string;\n@@ -46,18 +47,74 @@\n } from \"@mui/material\";\n \n import CloseIcon from \"@mui/icons-material/Close\";\n \n+const useStyles = makeStyles((theme: Theme) =>\n+  createStyles({\n+    root: {\n+      width: \"100%\",\n+    },\n+    paper: {\n+      width: \"100%\",\n+      marginBottom: theme.spacing(2),\n+    },\n+    table: {\n+      minWidth: 750,\n+    },\n+    tableHeadRow: {\n+      // 移除表格表头底部的边框线\n+      borderBottom: \"none\",\n+    },\n+    visuallyHidden: {\n+      border: 0,\n+      clip: \"rect(0 0 0 0)\",\n+      height: 1,\n+      margin: -1,\n+      overflow: \"hidden\",\n+      padding: 0,\n+      position: \"absolute\",\n+      top: 20,\n+      width: 1,\n+    },\n+  })\n+);\n+\n+const useToolbarStyles = makeStyles((theme: Theme) =>\n+  createStyles({\n+    root: {\n+      paddingLeft: theme.spacing(2),\n+      paddingRight: theme.spacing(1),\n+    },\n+    highlight:\n+      theme.palette.type === \"light\"\n+        ? {\n+            color: theme.palette.secondary.main,\n+            backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n+          }\n+        : {\n+            color: theme.palette.text.primary,\n+            backgroundColor: theme.palette.secondary.dark,\n+          },\n+    title: {\n+      flex: \"1 1 100%\",\n+    },\n+  })\n+);\n+\n //@ts-ignore\n const ListView = ({ onClose }) => {\n+  const classes = useStyles();\n+  const toolClasses = useToolbarStyles();\n   return (\n-    <div>\n+    <div className={classes.paper}>\n       <Paper\n+        className={classes.paper}\n         sx={{ width: \"100%\", paddingLeft: 2, paddingRight: 2, paddingTop: 2 }}\n       >\n         {\" \"}\n         {/* 确保这一层也是充满父元素的 */}\n         <Toolbar\n+          className={toolClasses.root}\n           sx={{\n             display: \"flex\",\n             justifyContent: \"space-between\",\n             alignItems: \"center\",\n@@ -70,9 +127,9 @@\n             <CloseIcon />\n           </IconButton>\n         </Toolbar>\n         <TableContainer component={Paper} sx={{ width: \"100%\" }}>\n-          <Table stickyHeader>\n+          <Table stickyHeader className={classes.table}>\n             <TableHead>\n               <TableRow>\n                 <TableCell align=\"center\">Advisor Name</TableCell>\n                 <TableCell align=\"center\">Position</TableCell>\n"
        },
        {
          "date": 1708513872778,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import React, { useEffect, useRef, useState } from \"react\";\n-import { createStyles, lighten, makeStyles, Theme } from \"@material-ui\";\n+import { createStyles, lighten, makeStyles, Theme } from \"@material-ui/styles\";\n \n interface Advisor {\n   _id: number;\n   name: string;\n"
        },
        {
          "date": 1708513926929,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,5 @@\n import React, { useEffect, useRef, useState } from \"react\";\n-import { createStyles, lighten, makeStyles, Theme } from \"@material-ui/styles\";\n \n interface Advisor {\n   _id: number;\n   name: string;\n@@ -47,74 +46,18 @@\n } from \"@mui/material\";\n \n import CloseIcon from \"@mui/icons-material/Close\";\n \n-const useStyles = makeStyles((theme: Theme) =>\n-  createStyles({\n-    root: {\n-      width: \"100%\",\n-    },\n-    paper: {\n-      width: \"100%\",\n-      marginBottom: theme.spacing(2),\n-    },\n-    table: {\n-      minWidth: 750,\n-    },\n-    tableHeadRow: {\n-      // 移除表格表头底部的边框线\n-      borderBottom: \"none\",\n-    },\n-    visuallyHidden: {\n-      border: 0,\n-      clip: \"rect(0 0 0 0)\",\n-      height: 1,\n-      margin: -1,\n-      overflow: \"hidden\",\n-      padding: 0,\n-      position: \"absolute\",\n-      top: 20,\n-      width: 1,\n-    },\n-  })\n-);\n-\n-const useToolbarStyles = makeStyles((theme: Theme) =>\n-  createStyles({\n-    root: {\n-      paddingLeft: theme.spacing(2),\n-      paddingRight: theme.spacing(1),\n-    },\n-    highlight:\n-      theme.palette.type === \"light\"\n-        ? {\n-            color: theme.palette.secondary.main,\n-            backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n-          }\n-        : {\n-            color: theme.palette.text.primary,\n-            backgroundColor: theme.palette.secondary.dark,\n-          },\n-    title: {\n-      flex: \"1 1 100%\",\n-    },\n-  })\n-);\n-\n //@ts-ignore\n const ListView = ({ onClose }) => {\n-  const classes = useStyles();\n-  const toolClasses = useToolbarStyles();\n   return (\n-    <div className={classes.paper}>\n+    <div>\n       <Paper\n-        className={classes.paper}\n         sx={{ width: \"100%\", paddingLeft: 2, paddingRight: 2, paddingTop: 2 }}\n       >\n         {\" \"}\n         {/* 确保这一层也是充满父元素的 */}\n         <Toolbar\n-          className={toolClasses.root}\n           sx={{\n             display: \"flex\",\n             justifyContent: \"space-between\",\n             alignItems: \"center\",\n@@ -127,9 +70,9 @@\n             <CloseIcon />\n           </IconButton>\n         </Toolbar>\n         <TableContainer component={Paper} sx={{ width: \"100%\" }}>\n-          <Table stickyHeader className={classes.table}>\n+          <Table stickyHeader>\n             <TableHead>\n               <TableRow>\n                 <TableCell align=\"center\">Advisor Name</TableCell>\n                 <TableCell align=\"center\">Position</TableCell>\n"
        },
        {
          "date": 1708514308865,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,135 @@\n+import React, { useEffect, useRef, useState } from \"react\";\n+\n+interface Advisor {\n+  _id: number;\n+  name: string;\n+  affiliation: string;\n+  homepage: string;\n+  twitter: string;\n+  github: string;\n+  email: string;\n+  position: string;\n+  connections: {\n+    _id: number;\n+\n+    relation: Array<{\n+      class: string;\n+      role: string;\n+      duration: {\n+        start: { year: number; month: number };\n+        end: { year: number; month: number };\n+      };\n+    }>;\n+    collaborations: Array<{\n+      papername: string;\n+      year: number;\n+      url: string;\n+    }>;\n+    latestCollaboration: number;\n+    relationFactor: number;\n+  }[];\n+}\n+const advisors: Advisor[] = require(\"../../../../data/advisors.json\");\n+\n+import {\n+  TableContainer,\n+  Table,\n+  TableHead,\n+  TableRow,\n+  TableCell,\n+  TableBody,\n+  Paper,\n+  IconButton,\n+  Typography,\n+  Toolbar,\n+  Link,\n+} from \"@mui/material\";\n+\n+import CloseIcon from \"@mui/icons-material/Close\";\n+\n+//@ts-ignore\n+const ListView = ({ onClose }) => {\n+  return (\n+    <Paper\n+      sx={{ width: \"100%\", paddingLeft: 2, paddingRight: 2, paddingTop: 2 }}\n+    >\n+      {\" \"}\n+      {/* 确保这一层也是充满父元素的 */}\n+      <Toolbar\n+        sx={{\n+          display: \"flex\",\n+          justifyContent: \"space-between\",\n+          alignItems: \"center\",\n+          p: 2,\n+          width: \"100%\",\n+        }}\n+      >\n+        <Typography variant=\"h6\">Main Advisor</Typography>\n+        <IconButton onClick={onClose} color=\"inherit\">\n+          <CloseIcon />\n+        </IconButton>\n+      </Toolbar>\n+      <TableContainer component={Paper} sx={{ width: \"100%\" }}>\n+        <Table stickyHeader>\n+          <TableHead>\n+            <TableRow>\n+              <TableCell align=\"center\">Advisor Name</TableCell>\n+              <TableCell align=\"center\">Position</TableCell>\n+              <TableCell align=\"center\">Affliation</TableCell>\n+              <TableCell align=\"center\">HomePage</TableCell>\n+              <TableCell align=\"center\">Email</TableCell>\n+              <TableCell align=\"center\">Twitter</TableCell>\n+              <TableCell align=\"center\">GitHub</TableCell>\n+              <TableCell align=\"center\">Collaborations</TableCell>\n+            </TableRow>\n+          </TableHead>\n+          <TableBody>\n+            {advisors.map((advisor) => (\n+              <TableRow sx={{ border: \"none\" }} key={advisor._id} hover>\n+                <TableCell align=\"center\">{advisor.name}</TableCell>\n+                <TableCell align=\"center\">{advisor.position}</TableCell>\n+                <TableCell align=\"center\">{advisor.affiliation}</TableCell>\n+                <TableCell align=\"center\">\n+                  <Link\n+                    href={advisor.homepage}\n+                    target=\"_blank\"\n+                    rel=\"noopener noreferrer\"\n+                  >\n+                    {advisor.homepage}\n+                  </Link>\n+                </TableCell>\n+                <TableCell align=\"center\">\n+                  <Link href={`mailto:${advisor.email}`}>{advisor.email}</Link>\n+                </TableCell>\n+                <TableCell align=\"center\">\n+                  <Link\n+                    href={advisor.twitter}\n+                    target=\"_blank\"\n+                    rel=\"noopener noreferrer\"\n+                  >\n+                    {advisor.twitter}\n+                  </Link>\n+                </TableCell>\n+                <TableCell align=\"center\">\n+                  <Link\n+                    href={advisor.github}\n+                    target=\"_blank\"\n+                    rel=\"noopener noreferrer\"\n+                  >\n+                    {advisor.github}\n+                  </Link>\n+                </TableCell>\n+                <TableCell align=\"center\">\n+                  {/* Implementation for collaborations and connection cell */}\n+                  {/* You can add a button or link here to navigate to the connection table */}\n+                </TableCell>\n+              </TableRow>\n+            ))}\n+          </TableBody>\n+        </Table>\n+      </TableContainer>\n+    </Paper>\n+  );\n+};\n+\n+export default ListView;\n"
        },
        {
          "date": 1708514341586,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,9 +47,9 @@\n \n import CloseIcon from \"@mui/icons-material/Close\";\n \n //@ts-ignore\n-const ListView = ({ onClose }) => {\n+const ListView = ({ onClose, mainAdvisor_id }) => {\n   return (\n     <Paper\n       sx={{ width: \"100%\", paddingLeft: 2, paddingRight: 2, paddingTop: 2 }}\n     >\n@@ -132,147 +132,4 @@\n   );\n };\n \n export default ListView;\n-import React, { useEffect, useRef, useState } from \"react\";\n-\n-interface Advisor {\n-  _id: number;\n-  name: string;\n-  affiliation: string;\n-  homepage: string;\n-  twitter: string;\n-  github: string;\n-  email: string;\n-  position: string;\n-  connections: {\n-    _id: number;\n-\n-    relation: Array<{\n-      class: string;\n-      role: string;\n-      duration: {\n-        start: { year: number; month: number };\n-        end: { year: number; month: number };\n-      };\n-    }>;\n-    collaborations: Array<{\n-      papername: string;\n-      year: number;\n-      url: string;\n-    }>;\n-    latestCollaboration: number;\n-    relationFactor: number;\n-  }[];\n-}\n-const advisors: Advisor[] = require(\"../../../../data/advisors.json\");\n-\n-import {\n-  TableContainer,\n-  Table,\n-  TableHead,\n-  TableRow,\n-  TableCell,\n-  TableBody,\n-  Paper,\n-  IconButton,\n-  Typography,\n-  Toolbar,\n-  Link,\n-} from \"@mui/material\";\n-\n-import CloseIcon from \"@mui/icons-material/Close\";\n-\n-//@ts-ignore\n-const ListView = ({ onClose }) => {\n-  return (\n-    <div>\n-      <Paper\n-        sx={{ width: \"100%\", paddingLeft: 2, paddingRight: 2, paddingTop: 2 }}\n-      >\n-        {\" \"}\n-        {/* 确保这一层也是充满父元素的 */}\n-        <Toolbar\n-          sx={{\n-            display: \"flex\",\n-            justifyContent: \"space-between\",\n-            alignItems: \"center\",\n-            p: 2,\n-            width: \"100%\",\n-          }}\n-        >\n-          <Typography variant=\"h6\">Main Advisor</Typography>\n-          <IconButton onClick={onClose} color=\"inherit\">\n-            <CloseIcon />\n-          </IconButton>\n-        </Toolbar>\n-        <TableContainer component={Paper} sx={{ width: \"100%\" }}>\n-          <Table stickyHeader>\n-            <TableHead>\n-              <TableRow>\n-                <TableCell align=\"center\">Advisor Name</TableCell>\n-                <TableCell align=\"center\">Position</TableCell>\n-                <TableCell align=\"center\">Affliation</TableCell>\n-                <TableCell align=\"center\">HomePage</TableCell>\n-                <TableCell align=\"center\">Email</TableCell>\n-                <TableCell align=\"center\">Twitter</TableCell>\n-                <TableCell align=\"center\">GitHub</TableCell>\n-                <TableCell align=\"center\">Collaborations</TableCell>\n-              </TableRow>\n-            </TableHead>\n-            <TableBody>\n-              {advisors.map((advisor) => (\n-                <TableRow\n-                  sx={{ border: \"none\" }}\n-                  key={advisor._id}\n-                  hover\n-                >\n-                  <TableCell align=\"center\">{advisor.name}</TableCell>\n-                  <TableCell align=\"center\">{advisor.position}</TableCell>\n-                  <TableCell align=\"center\">{advisor.affiliation}</TableCell>\n-                  <TableCell align=\"center\">\n-                    <Link\n-                      href={advisor.homepage}\n-                      target=\"_blank\"\n-                      rel=\"noopener noreferrer\"\n-                    >\n-                      {advisor.homepage}\n-                    </Link>\n-                  </TableCell>\n-                  <TableCell align=\"center\">\n-                    <Link href={`mailto:${advisor.email}`}>\n-                      {advisor.email}\n-                    </Link>\n-                  </TableCell>\n-                  <TableCell align=\"center\">\n-                    <Link\n-                      href={advisor.twitter}\n-                      target=\"_blank\"\n-                      rel=\"noopener noreferrer\"\n-                    >\n-                      {advisor.twitter}\n-                    </Link>\n-                  </TableCell>\n-                  <TableCell align=\"center\">\n-                    <Link\n-                      href={advisor.github}\n-                      target=\"_blank\"\n-                      rel=\"noopener noreferrer\"\n-                    >\n-                      {advisor.github}\n-                    </Link>\n-                  </TableCell>\n-                  <TableCell align=\"center\">\n-                    {/* Implementation for collaborations and connection cell */}\n-                    {/* You can add a button or link here to navigate to the connection table */}\n-                  </TableCell>\n-                </TableRow>\n-              ))}\n-            </TableBody>\n-          </Table>\n-        </TableContainer>\n-      </Paper>\n-    </div>\n-  );\n-};\n-\n-export default ListView;\n"
        },
        {
          "date": 1708514367460,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,9 +47,9 @@\n \n import CloseIcon from \"@mui/icons-material/Close\";\n \n //@ts-ignore\n-const ListView = ({ onClose, mainAdvisor_id }) => {\n+const ListView = ({ onClose, mainAdvisor }) => {\n   return (\n     <Paper\n       sx={{ width: \"100%\", paddingLeft: 2, paddingRight: 2, paddingTop: 2 }}\n     >\n@@ -63,9 +63,9 @@\n           p: 2,\n           width: \"100%\",\n         }}\n       >\n-        <Typography variant=\"h6\">Main Advisor</Typography>\n+        <Typography variant=\"h6\">{{main_advisor.name}}</Typography>\n         <IconButton onClick={onClose} color=\"inherit\">\n           <CloseIcon />\n         </IconButton>\n       </Toolbar>\n"
        },
        {
          "date": 1708514384240,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,9 +63,9 @@\n           p: 2,\n           width: \"100%\",\n         }}\n       >\n-        <Typography variant=\"h6\">{{main_advisor.name}}</Typography>\n+        <Typography variant=\"h6\">{mainAdvisor.name}</Typography>\n         <IconButton onClick={onClose} color=\"inherit\">\n           <CloseIcon />\n         </IconButton>\n       </Toolbar>\n"
        },
        {
          "date": 1708514910966,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,9 +63,9 @@\n           p: 2,\n           width: \"100%\",\n         }}\n       >\n-        <Typography variant=\"h6\">{mainAdvisor.name}</Typography>\n+        <Typography variant=\"h6\">Connected to {mainAdvisor.name}</Typography>\n         <IconButton onClick={onClose} color=\"inherit\">\n           <CloseIcon />\n         </IconButton>\n       </Toolbar>\n"
        },
        {
          "date": 1708515009440,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,8 +46,21 @@\n } from \"@mui/material\";\n \n import CloseIcon from \"@mui/icons-material/Close\";\n \n+// find the connected advisors based on main advisor id\n+const findConnectedAdvisors = (mainAdvisorId: number) => {\n+  // find in main advisor's connections list\n+  const mainAdvisor = advisors.find(\n+    (advisor) => advisor._id === mainAdvisorId\n+  );\n+  const connectedAdvisors = mainAdvisor.connections.map((connection) => {\n+    return advisors.find(\n+      (advisor) => advisor._id === connection._id\n+    );\n+  }\n+};\n+\n //@ts-ignore\n const ListView = ({ onClose, mainAdvisor }) => {\n   return (\n     <Paper\n"
        },
        {
          "date": 1708515015506,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,148 @@\n+import React, { useEffect, useRef, useState } from \"react\";\n+\n+interface Advisor {\n+  _id: number;\n+  name: string;\n+  affiliation: string;\n+  homepage: string;\n+  twitter: string;\n+  github: string;\n+  email: string;\n+  position: string;\n+  connections: {\n+    _id: number;\n+\n+    relation: Array<{\n+      class: string;\n+      role: string;\n+      duration: {\n+        start: { year: number; month: number };\n+        end: { year: number; month: number };\n+      };\n+    }>;\n+    collaborations: Array<{\n+      papername: string;\n+      year: number;\n+      url: string;\n+    }>;\n+    latestCollaboration: number;\n+    relationFactor: number;\n+  }[];\n+}\n+const advisors: Advisor[] = require(\"../../../../data/advisors.json\");\n+\n+import {\n+  TableContainer,\n+  Table,\n+  TableHead,\n+  TableRow,\n+  TableCell,\n+  TableBody,\n+  Paper,\n+  IconButton,\n+  Typography,\n+  Toolbar,\n+  Link,\n+} from \"@mui/material\";\n+\n+import CloseIcon from \"@mui/icons-material/Close\";\n+\n+// find the connected advisors based on main advisor id\n+const findConnectedAdvisors = (mainAdvisorId: number) => {\n+  // find in main advisor's connections list\n+  const mainAdvisor = advisors.find(\n+    (advisor) => advisor._id === mainAdvisorId\n+  );\n+  const connectedAdvisors = mainAdvisor?.connections.map((connection) => {\n+    return advisors.find(\n+      (advisor) => advisor._id === connection._id\n+    );\n+  }\n+};\n+\n+//@ts-ignore\n+const ListView = ({ onClose, mainAdvisor }) => {\n+  return (\n+    <Paper\n+      sx={{ width: \"100%\", paddingLeft: 2, paddingRight: 2, paddingTop: 2 }}\n+    >\n+      {\" \"}\n+      {/* 确保这一层也是充满父元素的 */}\n+      <Toolbar\n+        sx={{\n+          display: \"flex\",\n+          justifyContent: \"space-between\",\n+          alignItems: \"center\",\n+          p: 2,\n+          width: \"100%\",\n+        }}\n+      >\n+        <Typography variant=\"h6\">Connected to {mainAdvisor.name}</Typography>\n+        <IconButton onClick={onClose} color=\"inherit\">\n+          <CloseIcon />\n+        </IconButton>\n+      </Toolbar>\n+      <TableContainer component={Paper} sx={{ width: \"100%\" }}>\n+        <Table stickyHeader>\n+          <TableHead>\n+            <TableRow>\n+              <TableCell align=\"center\">Advisor Name</TableCell>\n+              <TableCell align=\"center\">Position</TableCell>\n+              <TableCell align=\"center\">Affliation</TableCell>\n+              <TableCell align=\"center\">HomePage</TableCell>\n+              <TableCell align=\"center\">Email</TableCell>\n+              <TableCell align=\"center\">Twitter</TableCell>\n+              <TableCell align=\"center\">GitHub</TableCell>\n+              <TableCell align=\"center\">Collaborations</TableCell>\n+            </TableRow>\n+          </TableHead>\n+          <TableBody>\n+            {advisors.map((advisor) => (\n+              <TableRow sx={{ border: \"none\" }} key={advisor._id} hover>\n+                <TableCell align=\"center\">{advisor.name}</TableCell>\n+                <TableCell align=\"center\">{advisor.position}</TableCell>\n+                <TableCell align=\"center\">{advisor.affiliation}</TableCell>\n+                <TableCell align=\"center\">\n+                  <Link\n+                    href={advisor.homepage}\n+                    target=\"_blank\"\n+                    rel=\"noopener noreferrer\"\n+                  >\n+                    {advisor.homepage}\n+                  </Link>\n+                </TableCell>\n+                <TableCell align=\"center\">\n+                  <Link href={`mailto:${advisor.email}`}>{advisor.email}</Link>\n+                </TableCell>\n+                <TableCell align=\"center\">\n+                  <Link\n+                    href={advisor.twitter}\n+                    target=\"_blank\"\n+                    rel=\"noopener noreferrer\"\n+                  >\n+                    {advisor.twitter}\n+                  </Link>\n+                </TableCell>\n+                <TableCell align=\"center\">\n+                  <Link\n+                    href={advisor.github}\n+                    target=\"_blank\"\n+                    rel=\"noopener noreferrer\"\n+                  >\n+                    {advisor.github}\n+                  </Link>\n+                </TableCell>\n+                <TableCell align=\"center\">\n+                  {/* Implementation for collaborations and connection cell */}\n+                  {/* You can add a button or link here to navigate to the connection table */}\n+                </TableCell>\n+              </TableRow>\n+            ))}\n+          </TableBody>\n+        </Table>\n+      </TableContainer>\n+    </Paper>\n+  );\n+};\n+\n+export default ListView;\n"
        },
        {
          "date": 1708515029511,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,9 +56,10 @@\n   const connectedAdvisors = mainAdvisor?.connections.map((connection) => {\n     return advisors.find(\n       (advisor) => advisor._id === connection._id\n     );\n-  }\n+  };\n+  return connectedAdvisors;\n };\n \n //@ts-ignore\n const ListView = ({ onClose, mainAdvisor }) => {\n@@ -145,152 +146,4 @@\n   );\n };\n \n export default ListView;\n-import React, { useEffect, useRef, useState } from \"react\";\n-\n-interface Advisor {\n-  _id: number;\n-  name: string;\n-  affiliation: string;\n-  homepage: string;\n-  twitter: string;\n-  github: string;\n-  email: string;\n-  position: string;\n-  connections: {\n-    _id: number;\n-\n-    relation: Array<{\n-      class: string;\n-      role: string;\n-      duration: {\n-        start: { year: number; month: number };\n-        end: { year: number; month: number };\n-      };\n-    }>;\n-    collaborations: Array<{\n-      papername: string;\n-      year: number;\n-      url: string;\n-    }>;\n-    latestCollaboration: number;\n-    relationFactor: number;\n-  }[];\n-}\n-const advisors: Advisor[] = require(\"../../../../data/advisors.json\");\n-\n-import {\n-  TableContainer,\n-  Table,\n-  TableHead,\n-  TableRow,\n-  TableCell,\n-  TableBody,\n-  Paper,\n-  IconButton,\n-  Typography,\n-  Toolbar,\n-  Link,\n-} from \"@mui/material\";\n-\n-import CloseIcon from \"@mui/icons-material/Close\";\n-\n-// find the connected advisors based on main advisor id\n-const findConnectedAdvisors = (mainAdvisorId: number) => {\n-  // find in main advisor's connections list\n-  const mainAdvisor = advisors.find(\n-    (advisor) => advisor._id === mainAdvisorId\n-  );\n-  const connectedAdvisors = mainAdvisor.connections.map((connection) => {\n-    return advisors.find(\n-      (advisor) => advisor._id === connection._id\n-    );\n-  }\n-};\n-\n-//@ts-ignore\n-const ListView = ({ onClose, mainAdvisor }) => {\n-  return (\n-    <Paper\n-      sx={{ width: \"100%\", paddingLeft: 2, paddingRight: 2, paddingTop: 2 }}\n-    >\n-      {\" \"}\n-      {/* 确保这一层也是充满父元素的 */}\n-      <Toolbar\n-        sx={{\n-          display: \"flex\",\n-          justifyContent: \"space-between\",\n-          alignItems: \"center\",\n-          p: 2,\n-          width: \"100%\",\n-        }}\n-      >\n-        <Typography variant=\"h6\">Connected to {mainAdvisor.name}</Typography>\n-        <IconButton onClick={onClose} color=\"inherit\">\n-          <CloseIcon />\n-        </IconButton>\n-      </Toolbar>\n-      <TableContainer component={Paper} sx={{ width: \"100%\" }}>\n-        <Table stickyHeader>\n-          <TableHead>\n-            <TableRow>\n-              <TableCell align=\"center\">Advisor Name</TableCell>\n-              <TableCell align=\"center\">Position</TableCell>\n-              <TableCell align=\"center\">Affliation</TableCell>\n-              <TableCell align=\"center\">HomePage</TableCell>\n-              <TableCell align=\"center\">Email</TableCell>\n-              <TableCell align=\"center\">Twitter</TableCell>\n-              <TableCell align=\"center\">GitHub</TableCell>\n-              <TableCell align=\"center\">Collaborations</TableCell>\n-            </TableRow>\n-          </TableHead>\n-          <TableBody>\n-            {advisors.map((advisor) => (\n-              <TableRow sx={{ border: \"none\" }} key={advisor._id} hover>\n-                <TableCell align=\"center\">{advisor.name}</TableCell>\n-                <TableCell align=\"center\">{advisor.position}</TableCell>\n-                <TableCell align=\"center\">{advisor.affiliation}</TableCell>\n-                <TableCell align=\"center\">\n-                  <Link\n-                    href={advisor.homepage}\n-                    target=\"_blank\"\n-                    rel=\"noopener noreferrer\"\n-                  >\n-                    {advisor.homepage}\n-                  </Link>\n-                </TableCell>\n-                <TableCell align=\"center\">\n-                  <Link href={`mailto:${advisor.email}`}>{advisor.email}</Link>\n-                </TableCell>\n-                <TableCell align=\"center\">\n-                  <Link\n-                    href={advisor.twitter}\n-                    target=\"_blank\"\n-                    rel=\"noopener noreferrer\"\n-                  >\n-                    {advisor.twitter}\n-                  </Link>\n-                </TableCell>\n-                <TableCell align=\"center\">\n-                  <Link\n-                    href={advisor.github}\n-                    target=\"_blank\"\n-                    rel=\"noopener noreferrer\"\n-                  >\n-                    {advisor.github}\n-                  </Link>\n-                </TableCell>\n-                <TableCell align=\"center\">\n-                  {/* Implementation for collaborations and connection cell */}\n-                  {/* You can add a button or link here to navigate to the connection table */}\n-                </TableCell>\n-              </TableRow>\n-            ))}\n-          </TableBody>\n-        </Table>\n-      </TableContainer>\n-    </Paper>\n-  );\n-};\n-\n-export default ListView;\n"
        },
        {
          "date": 1708515045854,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,149 @@\n+import React, { useEffect, useRef, useState } from \"react\";\n+\n+interface Advisor {\n+  _id: number;\n+  name: string;\n+  affiliation: string;\n+  homepage: string;\n+  twitter: string;\n+  github: string;\n+  email: string;\n+  position: string;\n+  connections: {\n+    _id: number;\n+\n+    relation: Array<{\n+      class: string;\n+      role: string;\n+      duration: {\n+        start: { year: number; month: number };\n+        end: { year: number; month: number };\n+      };\n+    }>;\n+    collaborations: Array<{\n+      papername: string;\n+      year: number;\n+      url: string;\n+    }>;\n+    latestCollaboration: number;\n+    relationFactor: number;\n+  }[];\n+}\n+const advisors: Advisor[] = require(\"../../../../data/advisors.json\");\n+\n+import {\n+  TableContainer,\n+  Table,\n+  TableHead,\n+  TableRow,\n+  TableCell,\n+  TableBody,\n+  Paper,\n+  IconButton,\n+  Typography,\n+  Toolbar,\n+  Link,\n+} from \"@mui/material\";\n+\n+import CloseIcon from \"@mui/icons-material/Close\";\n+\n+// find the connected advisors based on main advisor id\n+const findConnectedAdvisors = (mainAdvisorId: number) => {\n+  // find in main advisor's connections list\n+  const mainAdvisor = advisors.find(\n+    (advisor) => advisor._id === mainAdvisorId\n+  );\n+  const connectedAdvisors = mainAdvisor?.connections.map((connection) => {\n+    return advisors.find(\n+      (advisor) => advisor._id === connection._id\n+    );\n+  });\n+  return connectedAdvisors;\n+};\n+\n+//@ts-ignore\n+const ListView = ({ onClose, mainAdvisor }) => {\n+  return (\n+    <Paper\n+      sx={{ width: \"100%\", paddingLeft: 2, paddingRight: 2, paddingTop: 2 }}\n+    >\n+      {\" \"}\n+      {/* 确保这一层也是充满父元素的 */}\n+      <Toolbar\n+        sx={{\n+          display: \"flex\",\n+          justifyContent: \"space-between\",\n+          alignItems: \"center\",\n+          p: 2,\n+          width: \"100%\",\n+        }}\n+      >\n+        <Typography variant=\"h6\">Connected to {mainAdvisor.name}</Typography>\n+        <IconButton onClick={onClose} color=\"inherit\">\n+          <CloseIcon />\n+        </IconButton>\n+      </Toolbar>\n+      <TableContainer component={Paper} sx={{ width: \"100%\" }}>\n+        <Table stickyHeader>\n+          <TableHead>\n+            <TableRow>\n+              <TableCell align=\"center\">Advisor Name</TableCell>\n+              <TableCell align=\"center\">Position</TableCell>\n+              <TableCell align=\"center\">Affliation</TableCell>\n+              <TableCell align=\"center\">HomePage</TableCell>\n+              <TableCell align=\"center\">Email</TableCell>\n+              <TableCell align=\"center\">Twitter</TableCell>\n+              <TableCell align=\"center\">GitHub</TableCell>\n+              <TableCell align=\"center\">Collaborations</TableCell>\n+            </TableRow>\n+          </TableHead>\n+          <TableBody>\n+            {advisors.map((advisor) => (\n+              <TableRow sx={{ border: \"none\" }} key={advisor._id} hover>\n+                <TableCell align=\"center\">{advisor.name}</TableCell>\n+                <TableCell align=\"center\">{advisor.position}</TableCell>\n+                <TableCell align=\"center\">{advisor.affiliation}</TableCell>\n+                <TableCell align=\"center\">\n+                  <Link\n+                    href={advisor.homepage}\n+                    target=\"_blank\"\n+                    rel=\"noopener noreferrer\"\n+                  >\n+                    {advisor.homepage}\n+                  </Link>\n+                </TableCell>\n+                <TableCell align=\"center\">\n+                  <Link href={`mailto:${advisor.email}`}>{advisor.email}</Link>\n+                </TableCell>\n+                <TableCell align=\"center\">\n+                  <Link\n+                    href={advisor.twitter}\n+                    target=\"_blank\"\n+                    rel=\"noopener noreferrer\"\n+                  >\n+                    {advisor.twitter}\n+                  </Link>\n+                </TableCell>\n+                <TableCell align=\"center\">\n+                  <Link\n+                    href={advisor.github}\n+                    target=\"_blank\"\n+                    rel=\"noopener noreferrer\"\n+                  >\n+                    {advisor.github}\n+                  </Link>\n+                </TableCell>\n+                <TableCell align=\"center\">\n+                  {/* Implementation for collaborations and connection cell */}\n+                  {/* You can add a button or link here to navigate to the connection table */}\n+                </TableCell>\n+              </TableRow>\n+            ))}\n+          </TableBody>\n+        </Table>\n+      </TableContainer>\n+    </Paper>\n+  );\n+};\n+\n+export default ListView;\n"
        },
        {
          "date": 1708515089519,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -62,8 +62,9 @@\n };\n \n //@ts-ignore\n const ListView = ({ onClose, mainAdvisor }) => {\n+  const advisors = findConnectedAdvisors(mainAdvisor._id);\n   return (\n     <Paper\n       sx={{ width: \"100%\", paddingLeft: 2, paddingRight: 2, paddingTop: 2 }}\n     >\n@@ -146,153 +147,4 @@\n   );\n };\n \n export default ListView;\n-import React, { useEffect, useRef, useState } from \"react\";\n-\n-interface Advisor {\n-  _id: number;\n-  name: string;\n-  affiliation: string;\n-  homepage: string;\n-  twitter: string;\n-  github: string;\n-  email: string;\n-  position: string;\n-  connections: {\n-    _id: number;\n-\n-    relation: Array<{\n-      class: string;\n-      role: string;\n-      duration: {\n-        start: { year: number; month: number };\n-        end: { year: number; month: number };\n-      };\n-    }>;\n-    collaborations: Array<{\n-      papername: string;\n-      year: number;\n-      url: string;\n-    }>;\n-    latestCollaboration: number;\n-    relationFactor: number;\n-  }[];\n-}\n-const advisors: Advisor[] = require(\"../../../../data/advisors.json\");\n-\n-import {\n-  TableContainer,\n-  Table,\n-  TableHead,\n-  TableRow,\n-  TableCell,\n-  TableBody,\n-  Paper,\n-  IconButton,\n-  Typography,\n-  Toolbar,\n-  Link,\n-} from \"@mui/material\";\n-\n-import CloseIcon from \"@mui/icons-material/Close\";\n-\n-// find the connected advisors based on main advisor id\n-const findConnectedAdvisors = (mainAdvisorId: number) => {\n-  // find in main advisor's connections list\n-  const mainAdvisor = advisors.find(\n-    (advisor) => advisor._id === mainAdvisorId\n-  );\n-  const connectedAdvisors = mainAdvisor?.connections.map((connection) => {\n-    return advisors.find(\n-      (advisor) => advisor._id === connection._id\n-    );\n-  };\n-  return connectedAdvisors;\n-};\n-\n-//@ts-ignore\n-const ListView = ({ onClose, mainAdvisor }) => {\n-  return (\n-    <Paper\n-      sx={{ width: \"100%\", paddingLeft: 2, paddingRight: 2, paddingTop: 2 }}\n-    >\n-      {\" \"}\n-      {/* 确保这一层也是充满父元素的 */}\n-      <Toolbar\n-        sx={{\n-          display: \"flex\",\n-          justifyContent: \"space-between\",\n-          alignItems: \"center\",\n-          p: 2,\n-          width: \"100%\",\n-        }}\n-      >\n-        <Typography variant=\"h6\">Connected to {mainAdvisor.name}</Typography>\n-        <IconButton onClick={onClose} color=\"inherit\">\n-          <CloseIcon />\n-        </IconButton>\n-      </Toolbar>\n-      <TableContainer component={Paper} sx={{ width: \"100%\" }}>\n-        <Table stickyHeader>\n-          <TableHead>\n-            <TableRow>\n-              <TableCell align=\"center\">Advisor Name</TableCell>\n-              <TableCell align=\"center\">Position</TableCell>\n-              <TableCell align=\"center\">Affliation</TableCell>\n-              <TableCell align=\"center\">HomePage</TableCell>\n-              <TableCell align=\"center\">Email</TableCell>\n-              <TableCell align=\"center\">Twitter</TableCell>\n-              <TableCell align=\"center\">GitHub</TableCell>\n-              <TableCell align=\"center\">Collaborations</TableCell>\n-            </TableRow>\n-          </TableHead>\n-          <TableBody>\n-            {advisors.map((advisor) => (\n-              <TableRow sx={{ border: \"none\" }} key={advisor._id} hover>\n-                <TableCell align=\"center\">{advisor.name}</TableCell>\n-                <TableCell align=\"center\">{advisor.position}</TableCell>\n-                <TableCell align=\"center\">{advisor.affiliation}</TableCell>\n-                <TableCell align=\"center\">\n-                  <Link\n-                    href={advisor.homepage}\n-                    target=\"_blank\"\n-                    rel=\"noopener noreferrer\"\n-                  >\n-                    {advisor.homepage}\n-                  </Link>\n-                </TableCell>\n-                <TableCell align=\"center\">\n-                  <Link href={`mailto:${advisor.email}`}>{advisor.email}</Link>\n-                </TableCell>\n-                <TableCell align=\"center\">\n-                  <Link\n-                    href={advisor.twitter}\n-                    target=\"_blank\"\n-                    rel=\"noopener noreferrer\"\n-                  >\n-                    {advisor.twitter}\n-                  </Link>\n-                </TableCell>\n-                <TableCell align=\"center\">\n-                  <Link\n-                    href={advisor.github}\n-                    target=\"_blank\"\n-                    rel=\"noopener noreferrer\"\n-                  >\n-                    {advisor.github}\n-                  </Link>\n-                </TableCell>\n-                <TableCell align=\"center\">\n-                  {/* Implementation for collaborations and connection cell */}\n-                  {/* You can add a button or link here to navigate to the connection table */}\n-                </TableCell>\n-              </TableRow>\n-            ))}\n-          </TableBody>\n-        </Table>\n-      </TableContainer>\n-    </Paper>\n-  );\n-};\n-\n-export default ListView;\n"
        },
        {
          "date": 1708515131473,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,13 +50,13 @@\n // find the connected advisors based on main advisor id\n const findConnectedAdvisors = (mainAdvisorId: number) => {\n   // find in main advisor's connections list\n   const mainAdvisor = advisors.find(\n-    (advisor) => advisor._id === mainAdvisorId\n+    (advisor) => advisor?._id === mainAdvisorId\n   );\n   const connectedAdvisors = mainAdvisor?.connections.map((connection) => {\n     return advisors.find(\n-      (advisor) => advisor._id === connection._id\n+      (advisor) => advisor?._id === connection._id\n     );\n   });\n   return connectedAdvisors;\n };\n@@ -98,41 +98,43 @@\n               <TableCell align=\"center\">Collaborations</TableCell>\n             </TableRow>\n           </TableHead>\n           <TableBody>\n-            {advisors.map((advisor) => (\n-              <TableRow sx={{ border: \"none\" }} key={advisor._id} hover>\n-                <TableCell align=\"center\">{advisor.name}</TableCell>\n-                <TableCell align=\"center\">{advisor.position}</TableCell>\n-                <TableCell align=\"center\">{advisor.affiliation}</TableCell>\n+            {advisors?.map((advisor) => (\n+              <TableRow sx={{ border: \"none\" }} key={advisor?._id} hover>\n+                <TableCell align=\"center\">{advisor?.name}</TableCell>\n+                <TableCell align=\"center\">{advisor?.position}</TableCell>\n+                <TableCell align=\"center\">{advisor?.affiliation}</TableCell>\n                 <TableCell align=\"center\">\n                   <Link\n-                    href={advisor.homepage}\n+                    href={advisor?.homepage}\n                     target=\"_blank\"\n                     rel=\"noopener noreferrer\"\n                   >\n-                    {advisor.homepage}\n+                    {advisor?.homepage}\n                   </Link>\n                 </TableCell>\n                 <TableCell align=\"center\">\n-                  <Link href={`mailto:${advisor.email}`}>{advisor.email}</Link>\n+                  <Link href={`mailto:${advisor?.email}`}>\n+                    {advisor?.email}\n+                  </Link>\n                 </TableCell>\n                 <TableCell align=\"center\">\n                   <Link\n-                    href={advisor.twitter}\n+                    href={advisor?.twitter}\n                     target=\"_blank\"\n                     rel=\"noopener noreferrer\"\n                   >\n-                    {advisor.twitter}\n+                    {advisor?.twitter}\n                   </Link>\n                 </TableCell>\n                 <TableCell align=\"center\">\n                   <Link\n-                    href={advisor.github}\n+                    href={advisor?.github}\n                     target=\"_blank\"\n                     rel=\"noopener noreferrer\"\n                   >\n-                    {advisor.github}\n+                    {advisor?.github}\n                   </Link>\n                 </TableCell>\n                 <TableCell align=\"center\">\n                   {/* Implementation for collaborations and connection cell */}\n"
        },
        {
          "date": 1708515259045,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,152 @@\n+import React, { useEffect, useRef, useState } from \"react\";\n+\n+interface Advisor {\n+  _id: number;\n+  name: string;\n+  affiliation: string;\n+  homepage: string;\n+  twitter: string;\n+  github: string;\n+  email: string;\n+  position: string;\n+  connections: {\n+    _id: number;\n+\n+    relation: Array<{\n+      class: string;\n+      role: string;\n+      duration: {\n+        start: { year: number; month: number };\n+        end: { year: number; month: number };\n+      };\n+    }>;\n+    collaborations: Array<{\n+      papername: string;\n+      year: number;\n+      url: string;\n+    }>;\n+    latestCollaboration: number;\n+    relationFactor: number;\n+  }[];\n+}\n+const advisors: Advisor[] = require(\"../../../../data/advisors.json\");\n+\n+import {\n+  TableContainer,\n+  Table,\n+  TableHead,\n+  TableRow,\n+  TableCell,\n+  TableBody,\n+  Paper,\n+  IconButton,\n+  Typography,\n+  Toolbar,\n+  Link,\n+} from \"@mui/material\";\n+\n+import CloseIcon from \"@mui/icons-material/Close\";\n+\n+// find the connected advisors based on main advisor id\n+const findConnectedAdvisors = (mainAdvisorId: number) => {\n+  // find in main advisor's connections list\n+  const mainAdvisor = advisors.find(\n+    (advisor) => advisor?._id === mainAdvisorId\n+  );\n+  const connectedAdvisors = mainAdvisor?.connections.map((connection) => {\n+    return advisors.find(\n+      (advisor) => advisor?._id === connection._id\n+    );\n+  });\n+  return connectedAdvisors;\n+};\n+\n+//@ts-ignore\n+const ListView = ({ onClose, mainAdvisor }) => {\n+  const advisors = findConnectedAdvisors(mainAdvisor._id);\n+  return (\n+    <Paper\n+      sx={{ width: \"100%\", paddingLeft: 2, paddingRight: 2, paddingTop: 2 }}\n+    >\n+      {\" \"}\n+      {/* 确保这一层也是充满父元素的 */}\n+      <Toolbar\n+        sx={{\n+          display: \"flex\",\n+          justifyContent: \"space-between\",\n+          alignItems: \"center\",\n+          p: 2,\n+          width: \"100%\",\n+        }}\n+      >\n+        <Typography variant=\"h6\">Connected to {mainAdvisor.name}</Typography>\n+        <IconButton onClick={onClose} color=\"inherit\">\n+          <CloseIcon />\n+        </IconButton>\n+      </Toolbar>\n+      <TableContainer component={Paper} sx={{ width: \"100%\" }}>\n+        <Table stickyHeader>\n+          <TableHead>\n+            <TableRow>\n+              <TableCell align=\"center\">Advisor Name</TableCell>\n+              <TableCell align=\"center\">Position</TableCell>\n+              <TableCell align=\"center\">Affliation</TableCell>\n+              <TableCell align=\"center\">HomePage</TableCell>\n+              <TableCell align=\"center\">Email</TableCell>\n+              <TableCell align=\"center\">Twitter</TableCell>\n+              <TableCell align=\"center\">GitHub</TableCell>\n+              <TableCell align=\"center\">Connections</TableCell>\n+            </TableRow>\n+          </TableHead>\n+          <TableBody>\n+            {advisors?.map((advisor) => (\n+              <TableRow sx={{ border: \"none\" }} key={advisor?._id} hover>\n+                <TableCell align=\"center\">{advisor?.name}</TableCell>\n+                <TableCell align=\"center\">{advisor?.position}</TableCell>\n+                <TableCell align=\"center\">{advisor?.affiliation}</TableCell>\n+                <TableCell align=\"center\">\n+                  <Link\n+                    href={advisor?.homepage}\n+                    target=\"_blank\"\n+                    rel=\"noopener noreferrer\"\n+                  >\n+                    {advisor?.homepage}\n+                  </Link>\n+                </TableCell>\n+                <TableCell align=\"center\">\n+                  <Link href={`mailto:${advisor?.email}`}>\n+                    {advisor?.email}\n+                  </Link>\n+                </TableCell>\n+                <TableCell align=\"center\">\n+                  <Link\n+                    href={advisor?.twitter}\n+                    target=\"_blank\"\n+                    rel=\"noopener noreferrer\"\n+                  >\n+                    {advisor?.twitter}\n+                  </Link>\n+                </TableCell>\n+                <TableCell align=\"center\">\n+                  <Link\n+                    href={advisor?.github}\n+                    target=\"_blank\"\n+                    rel=\"noopener noreferrer\"\n+                  >\n+                    {advisor?.github}\n+                  </Link>\n+                </TableCell>\n+                <TableCell align=\"center\">\n+                  {/* Implementation for collaborations and connection cell */}\n+                  {/* You can add a button or link here to navigate to the connection table */}\n+                </TableCell>\n+              </TableRow>\n+            ))}\n+          </TableBody>\n+        </Table>\n+      </TableContainer>\n+    </Paper>\n+  );\n+};\n+\n+export default ListView;\n"
        },
        {
          "date": 1708518490644,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -137,162 +137,16 @@\n                   </Link>\n                 </TableCell>\n                 <TableCell align=\"center\">\n                   {/* Implementation for collaborations and connection cell */}\n-                  {/* You can add a button or link here to navigate to the connection table */}\n-                </TableCell>\n-              </TableRow>\n-            ))}\n-          </TableBody>\n-        </Table>\n-      </TableContainer>\n-    </Paper>\n-  );\n-};\n-\n-export default ListView;\n-import React, { useEffect, useRef, useState } from \"react\";\n-\n-interface Advisor {\n-  _id: number;\n-  name: string;\n-  affiliation: string;\n-  homepage: string;\n-  twitter: string;\n-  github: string;\n-  email: string;\n-  position: string;\n-  connections: {\n-    _id: number;\n-\n-    relation: Array<{\n-      class: string;\n-      role: string;\n-      duration: {\n-        start: { year: number; month: number };\n-        end: { year: number; month: number };\n-      };\n-    }>;\n-    collaborations: Array<{\n-      papername: string;\n-      year: number;\n-      url: string;\n-    }>;\n-    latestCollaboration: number;\n-    relationFactor: number;\n-  }[];\n-}\n-const advisors: Advisor[] = require(\"../../../../data/advisors.json\");\n-\n-import {\n-  TableContainer,\n-  Table,\n-  TableHead,\n-  TableRow,\n-  TableCell,\n-  TableBody,\n-  Paper,\n-  IconButton,\n-  Typography,\n-  Toolbar,\n-  Link,\n-} from \"@mui/material\";\n-\n-import CloseIcon from \"@mui/icons-material/Close\";\n-\n-// find the connected advisors based on main advisor id\n-const findConnectedAdvisors = (mainAdvisorId: number) => {\n-  // find in main advisor's connections list\n-  const mainAdvisor = advisors.find(\n-    (advisor) => advisor?._id === mainAdvisorId\n-  );\n-  const connectedAdvisors = mainAdvisor?.connections.map((connection) => {\n-    return advisors.find(\n-      (advisor) => advisor?._id === connection._id\n-    );\n-  });\n-  return connectedAdvisors;\n-};\n-\n-//@ts-ignore\n-const ListView = ({ onClose, mainAdvisor }) => {\n-  const advisors = findConnectedAdvisors(mainAdvisor._id);\n-  return (\n-    <Paper\n-      sx={{ width: \"100%\", paddingLeft: 2, paddingRight: 2, paddingTop: 2 }}\n-    >\n-      {\" \"}\n-      {/* 确保这一层也是充满父元素的 */}\n-      <Toolbar\n-        sx={{\n-          display: \"flex\",\n-          justifyContent: \"space-between\",\n-          alignItems: \"center\",\n-          p: 2,\n-          width: \"100%\",\n-        }}\n-      >\n-        <Typography variant=\"h6\">Connected to {mainAdvisor.name}</Typography>\n-        <IconButton onClick={onClose} color=\"inherit\">\n-          <CloseIcon />\n-        </IconButton>\n-      </Toolbar>\n-      <TableContainer component={Paper} sx={{ width: \"100%\" }}>\n-        <Table stickyHeader>\n-          <TableHead>\n-            <TableRow>\n-              <TableCell align=\"center\">Advisor Name</TableCell>\n-              <TableCell align=\"center\">Position</TableCell>\n-              <TableCell align=\"center\">Affliation</TableCell>\n-              <TableCell align=\"center\">HomePage</TableCell>\n-              <TableCell align=\"center\">Email</TableCell>\n-              <TableCell align=\"center\">Twitter</TableCell>\n-              <TableCell align=\"center\">GitHub</TableCell>\n-              <TableCell align=\"center\">Collaborations</TableCell>\n-            </TableRow>\n-          </TableHead>\n-          <TableBody>\n-            {advisors?.map((advisor) => (\n-              <TableRow sx={{ border: \"none\" }} key={advisor?._id} hover>\n-                <TableCell align=\"center\">{advisor?.name}</TableCell>\n-                <TableCell align=\"center\">{advisor?.position}</TableCell>\n-                <TableCell align=\"center\">{advisor?.affiliation}</TableCell>\n-                <TableCell align=\"center\">\n-                  <Link\n-                    href={advisor?.homepage}\n-                    target=\"_blank\"\n-                    rel=\"noopener noreferrer\"\n+                  <Button\n+                    variant=\"contained\"\n+                    color=\"primary\"\n+                    onClick={handleShowConnectionClick}\n                   >\n-                    {advisor?.homepage}\n-                  </Link>\n+                    Show Connection\n+                  </Button>\n                 </TableCell>\n-                <TableCell align=\"center\">\n-                  <Link href={`mailto:${advisor?.email}`}>\n-                    {advisor?.email}\n-                  </Link>\n-                </TableCell>\n-                <TableCell align=\"center\">\n-                  <Link\n-                    href={advisor?.twitter}\n-                    target=\"_blank\"\n-                    rel=\"noopener noreferrer\"\n-                  >\n-                    {advisor?.twitter}\n-                  </Link>\n-                </TableCell>\n-                <TableCell align=\"center\">\n-                  <Link\n-                    href={advisor?.github}\n-                    target=\"_blank\"\n-                    rel=\"noopener noreferrer\"\n-                  >\n-                    {advisor?.github}\n-                  </Link>\n-                </TableCell>\n-                <TableCell align=\"center\">\n-                  {/* Implementation for collaborations and connection cell */}\n-                  {/* You can add a button or link here to navigate to the connection table */}\n-                </TableCell>\n               </TableRow>\n             ))}\n           </TableBody>\n         </Table>\n"
        },
        {
          "date": 1708518505974,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,6 @@\n import React, { useEffect, useRef, useState } from \"react\";\n+import Button from \"@mui/material/Button\";\n \n interface Advisor {\n   _id: number;\n   name: string;\n"
        },
        {
          "date": 1708518643121,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -62,9 +62,9 @@\n   return connectedAdvisors;\n };\n \n //@ts-ignore\n-const ListView = ({ onClose, mainAdvisor }) => {\n+const ListView = ({ onClose, mainAdvisor, onClickConnection }) => {\n   const advisors = findConnectedAdvisors(mainAdvisor._id);\n   return (\n     <Paper\n       sx={{ width: \"100%\", paddingLeft: 2, paddingRight: 2, paddingTop: 2 }}\n@@ -141,9 +141,9 @@\n                   {/* Implementation for collaborations and connection cell */}\n                   <Button\n                     variant=\"contained\"\n                     color=\"primary\"\n-                    onClick={handleShowConnectionClick}\n+                    onClick={onClickConnection}\n                   >\n                     Show Connection\n                   </Button>\n                 </TableCell>\n"
        },
        {
          "date": 1708518937305,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,93 @@\n+import React, { useEffect, useRef, useState } from \"react\";\n+import Button from \"@mui/material/Button\";\n+\n+interface Advisor {\n+  _id: number;\n+  name: string;\n+  affiliation: string;\n+  homepage: string;\n+  twitter: string;\n+  github: string;\n+  email: string;\n+  position: string;\n+  connections: {\n+    _id: number;\n+\n+    relation: Array<{\n+      class: string;\n+      role: string;\n+      duration: {\n+        start: { year: number; month: number };\n+        end: { year: number; month: number };\n+      };\n+    }>;\n+    collaborations: Array<{\n+      papername: string;\n+      year: number;\n+      url: string;\n+    }>;\n+    latestCollaboration: number;\n+    relationFactor: number;\n+  }[];\n+}\n+const advisors: Advisor[] = require(\"../../../../data/advisors.json\");\n+\n+import {\n+  TableContainer,\n+  Table,\n+  TableHead,\n+  TableRow,\n+  TableCell,\n+  TableBody,\n+  Paper,\n+  IconButton,\n+  Typography,\n+  Toolbar,\n+  Link,\n+} from \"@mui/material\";\n+\n+import TableView from \"./table\";\n+import CloseIcon from \"@mui/icons-material/Close\";\n+\n+// find the connected advisors based on main advisor id\n+const findConnectedAdvisors = (mainAdvisorId: number) => {\n+  // find in main advisor's connections list\n+  const mainAdvisor = advisors.find(\n+    (advisor) => advisor?._id === mainAdvisorId\n+  );\n+  const connectedAdvisors = mainAdvisor?.connections.map((connection) => {\n+    return advisors.find(\n+      (advisor) => advisor?._id === connection._id\n+    );\n+  });\n+  return connectedAdvisors;\n+};\n+\n+//@ts-ignore\n+const ListView = ({ onClose, mainAdvisor, onClickConnection }) => {\n+  const advisors = findConnectedAdvisors(mainAdvisor._id);\n+  return (\n+    <Paper\n+      sx={{ width: \"100%\", paddingLeft: 2, paddingRight: 2, paddingTop: 2 }}\n+    >\n+      {\" \"}\n+      {/* 确保这一层也是充满父元素的 */}\n+      <Toolbar\n+        sx={{\n+          display: \"flex\",\n+          justifyContent: \"space-between\",\n+          alignItems: \"center\",\n+          p: 2,\n+          width: \"100%\",\n+        }}\n+      >\n+        <Typography variant=\"h6\">Connected to {mainAdvisor.name}</Typography>\n+        <IconButton onClick={onClose} color=\"inherit\">\n+          <CloseIcon />\n+        </IconButton>\n+      </Toolbar>\n+    </Paper>\n+  );\n+};\n+\n+export default ListView;\n"
        },
        {
          "date": 1708518950734,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -85,8 +85,9 @@\n         <IconButton onClick={onClose} color=\"inherit\">\n           <CloseIcon />\n         </IconButton>\n       </Toolbar>\n+      <TableView />\n     </Paper>\n   );\n };\n \n"
        },
        {
          "date": 1708519027523,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,8 +65,11 @@\n \n //@ts-ignore\n const ListView = ({ onClose, mainAdvisor, onClickConnection }) => {\n   const advisors = findConnectedAdvisors(mainAdvisor._id);\n+  const handleClickConnection = () => {\n+    console.log(mainAdvisor);\n+  };\n   return (\n     <Paper\n       sx={{ width: \"100%\", paddingLeft: 2, paddingRight: 2, paddingTop: 2 }}\n     >\n@@ -85,169 +88,10 @@\n         <IconButton onClick={onClose} color=\"inherit\">\n           <CloseIcon />\n         </IconButton>\n       </Toolbar>\n-      <TableView />\n+      <TableView onClickConnection={handleClickConnection} />\n     </Paper>\n   );\n };\n \n export default ListView;\n-import React, { useEffect, useRef, useState } from \"react\";\n-import Button from \"@mui/material/Button\";\n-\n-interface Advisor {\n-  _id: number;\n-  name: string;\n-  affiliation: string;\n-  homepage: string;\n-  twitter: string;\n-  github: string;\n-  email: string;\n-  position: string;\n-  connections: {\n-    _id: number;\n-\n-    relation: Array<{\n-      class: string;\n-      role: string;\n-      duration: {\n-        start: { year: number; month: number };\n-        end: { year: number; month: number };\n-      };\n-    }>;\n-    collaborations: Array<{\n-      papername: string;\n-      year: number;\n-      url: string;\n-    }>;\n-    latestCollaboration: number;\n-    relationFactor: number;\n-  }[];\n-}\n-const advisors: Advisor[] = require(\"../../../../data/advisors.json\");\n-\n-import {\n-  TableContainer,\n-  Table,\n-  TableHead,\n-  TableRow,\n-  TableCell,\n-  TableBody,\n-  Paper,\n-  IconButton,\n-  Typography,\n-  Toolbar,\n-  Link,\n-} from \"@mui/material\";\n-\n-import CloseIcon from \"@mui/icons-material/Close\";\n-\n-// find the connected advisors based on main advisor id\n-const findConnectedAdvisors = (mainAdvisorId: number) => {\n-  // find in main advisor's connections list\n-  const mainAdvisor = advisors.find(\n-    (advisor) => advisor?._id === mainAdvisorId\n-  );\n-  const connectedAdvisors = mainAdvisor?.connections.map((connection) => {\n-    return advisors.find(\n-      (advisor) => advisor?._id === connection._id\n-    );\n-  });\n-  return connectedAdvisors;\n-};\n-\n-//@ts-ignore\n-const ListView = ({ onClose, mainAdvisor, onClickConnection }) => {\n-  const advisors = findConnectedAdvisors(mainAdvisor._id);\n-  return (\n-    <Paper\n-      sx={{ width: \"100%\", paddingLeft: 2, paddingRight: 2, paddingTop: 2 }}\n-    >\n-      {\" \"}\n-      {/* 确保这一层也是充满父元素的 */}\n-      <Toolbar\n-        sx={{\n-          display: \"flex\",\n-          justifyContent: \"space-between\",\n-          alignItems: \"center\",\n-          p: 2,\n-          width: \"100%\",\n-        }}\n-      >\n-        <Typography variant=\"h6\">Connected to {mainAdvisor.name}</Typography>\n-        <IconButton onClick={onClose} color=\"inherit\">\n-          <CloseIcon />\n-        </IconButton>\n-      </Toolbar>\n-      <TableContainer component={Paper} sx={{ width: \"100%\" }}>\n-        <Table stickyHeader>\n-          <TableHead>\n-            <TableRow>\n-              <TableCell align=\"center\">Advisor Name</TableCell>\n-              <TableCell align=\"center\">Position</TableCell>\n-              <TableCell align=\"center\">Affliation</TableCell>\n-              <TableCell align=\"center\">HomePage</TableCell>\n-              <TableCell align=\"center\">Email</TableCell>\n-              <TableCell align=\"center\">Twitter</TableCell>\n-              <TableCell align=\"center\">GitHub</TableCell>\n-              <TableCell align=\"center\">Connections</TableCell>\n-            </TableRow>\n-          </TableHead>\n-          <TableBody>\n-            {advisors?.map((advisor) => (\n-              <TableRow sx={{ border: \"none\" }} key={advisor?._id} hover>\n-                <TableCell align=\"center\">{advisor?.name}</TableCell>\n-                <TableCell align=\"center\">{advisor?.position}</TableCell>\n-                <TableCell align=\"center\">{advisor?.affiliation}</TableCell>\n-                <TableCell align=\"center\">\n-                  <Link\n-                    href={advisor?.homepage}\n-                    target=\"_blank\"\n-                    rel=\"noopener noreferrer\"\n-                  >\n-                    {advisor?.homepage}\n-                  </Link>\n-                </TableCell>\n-                <TableCell align=\"center\">\n-                  <Link href={`mailto:${advisor?.email}`}>\n-                    {advisor?.email}\n-                  </Link>\n-                </TableCell>\n-                <TableCell align=\"center\">\n-                  <Link\n-                    href={advisor?.twitter}\n-                    target=\"_blank\"\n-                    rel=\"noopener noreferrer\"\n-                  >\n-                    {advisor?.twitter}\n-                  </Link>\n-                </TableCell>\n-                <TableCell align=\"center\">\n-                  <Link\n-                    href={advisor?.github}\n-                    target=\"_blank\"\n-                    rel=\"noopener noreferrer\"\n-                  >\n-                    {advisor?.github}\n-                  </Link>\n-                </TableCell>\n-                <TableCell align=\"center\">\n-                  {/* Implementation for collaborations and connection cell */}\n-                  <Button\n-                    variant=\"contained\"\n-                    color=\"primary\"\n-                    onClick={onClickConnection}\n-                  >\n-                    Show Connection\n-                  </Button>\n-                </TableCell>\n-              </TableRow>\n-            ))}\n-          </TableBody>\n-        </Table>\n-      </TableContainer>\n-    </Paper>\n-  );\n-};\n-\n-export default ListView;\n"
        },
        {
          "date": 1708519052345,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -88,9 +88,12 @@\n         <IconButton onClick={onClose} color=\"inherit\">\n           <CloseIcon />\n         </IconButton>\n       </Toolbar>\n-      <TableView onClickConnection={handleClickConnection} />\n+      <TableView\n+        advisors={advisors}\n+        onClickConnection={handleClickConnection}\n+      />\n     </Paper>\n   );\n };\n \n"
        },
        {
          "date": 1708519331588,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,10 +65,10 @@\n \n //@ts-ignore\n const ListView = ({ onClose, mainAdvisor, onClickConnection }) => {\n   const advisors = findConnectedAdvisors(mainAdvisor._id);\n-  const handleClickConnection = () => {\n-    console.log(mainAdvisor);\n+  const handleClickConnection = (_id: number) => {\n+    console.log(_id);\n   };\n   return (\n     <Paper\n       sx={{ width: \"100%\", paddingLeft: 2, paddingRight: 2, paddingTop: 2 }}\n"
        },
        {
          "date": 1708519392326,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,8 +65,10 @@\n \n //@ts-ignore\n const ListView = ({ onClose, mainAdvisor, onClickConnection }) => {\n   const advisors = findConnectedAdvisors(mainAdvisor._id);\n+  // use a state to store whether to show TableView of connected advisors or just connections between two advisors\n+  const [showTableView, setShowTableView] = useState(false);\n   const handleClickConnection = (_id: number) => {\n     console.log(_id);\n   };\n   return (\n"
        },
        {
          "date": 1708519406159,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,8 +69,9 @@\n   // use a state to store whether to show TableView of connected advisors or just connections between two advisors\n   const [showTableView, setShowTableView] = useState(false);\n   const handleClickConnection = (_id: number) => {\n     console.log(_id);\n+    setShowTableView(true);\n   };\n   return (\n     <Paper\n       sx={{ width: \"100%\", paddingLeft: 2, paddingRight: 2, paddingTop: 2 }}\n"
        },
        {
          "date": 1708519412233,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,9 +69,9 @@\n   // use a state to store whether to show TableView of connected advisors or just connections between two advisors\n   const [showTableView, setShowTableView] = useState(false);\n   const handleClickConnection = (_id: number) => {\n     console.log(_id);\n-    setShowTableView(true);\n+    setShowTableView(false);\n   };\n   return (\n     <Paper\n       sx={{ width: \"100%\", paddingLeft: 2, paddingRight: 2, paddingTop: 2 }}\n"
        },
        {
          "date": 1708520165570,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,6 @@\n import React, { useEffect, useRef, useState } from \"react\";\n-import Button from \"@mui/material/Button\";\n-\n+import RelationComponent from \"./relation\";\n interface Advisor {\n   _id: number;\n   name: string;\n   affiliation: string;\n"
        },
        {
          "date": 1708520375398,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,83 +1,24 @@\n-import React, { useEffect, useRef, useState } from \"react\";\n-import RelationComponent from \"./relation\";\n-interface Advisor {\n-  _id: number;\n-  name: string;\n-  affiliation: string;\n-  homepage: string;\n-  twitter: string;\n-  github: string;\n-  email: string;\n-  position: string;\n-  connections: {\n-    _id: number;\n-\n-    relation: Array<{\n-      class: string;\n-      role: string;\n-      duration: {\n-        start: { year: number; month: number };\n-        end: { year: number; month: number };\n-      };\n-    }>;\n-    collaborations: Array<{\n-      papername: string;\n-      year: number;\n-      url: string;\n-    }>;\n-    latestCollaboration: number;\n-    relationFactor: number;\n-  }[];\n-}\n-const advisors: Advisor[] = require(\"../../../../data/advisors.json\");\n-\n-import {\n-  TableContainer,\n-  Table,\n-  TableHead,\n-  TableRow,\n-  TableCell,\n-  TableBody,\n-  Paper,\n-  IconButton,\n-  Typography,\n-  Toolbar,\n-  Link,\n-} from \"@mui/material\";\n-\n-import TableView from \"./table\";\n+import React, { useState } from \"react\";\n+import RelationComponent from \"./RelationComponent\"; // 确保正确导入RelationComponent\n+import TableView from \"./TableView\"; // 确保正确导入TableView\n+import { Paper, IconButton, Typography, Toolbar } from \"@mui/material\";\n import CloseIcon from \"@mui/icons-material/Close\";\n \n-// find the connected advisors based on main advisor id\n-const findConnectedAdvisors = (mainAdvisorId: number) => {\n-  // find in main advisor's connections list\n-  const mainAdvisor = advisors.find(\n-    (advisor) => advisor?._id === mainAdvisorId\n-  );\n-  const connectedAdvisors = mainAdvisor?.connections.map((connection) => {\n-    return advisors.find(\n-      (advisor) => advisor?._id === connection._id\n-    );\n-  });\n-  return connectedAdvisors;\n-};\n+const ListView = ({ onClose, mainAdvisor }) => {\n+  const advisors = findConnectedAdvisors(mainAdvisor._id);\n+  const [showTableView, setShowTableView] = useState(true); // 控制显示哪个视图\n+  const [selectedAdvisorId, setSelectedAdvisorId] = useState(null); // 存储选中的advisor id\n \n-//@ts-ignore\n-const ListView = ({ onClose, mainAdvisor, onClickConnection }) => {\n-  const advisors = findConnectedAdvisors(mainAdvisor._id);\n-  // use a state to store whether to show TableView of connected advisors or just connections between two advisors\n-  const [showTableView, setShowTableView] = useState(false);\n   const handleClickConnection = (_id: number) => {\n-    console.log(_id);\n-    setShowTableView(false);\n+    setSelectedAdvisorId(_id); // 设置选中的advisor id\n+    setShowTableView(false); // 切换到RelationComponent视图\n   };\n+\n   return (\n     <Paper\n       sx={{ width: \"100%\", paddingLeft: 2, paddingRight: 2, paddingTop: 2 }}\n     >\n-      {\" \"}\n-      {/* 确保这一层也是充满父元素的 */}\n       <Toolbar\n         sx={{\n           display: \"flex\",\n           justifyContent: \"space-between\",\n@@ -90,12 +31,16 @@\n         <IconButton onClick={onClose} color=\"inherit\">\n           <CloseIcon />\n         </IconButton>\n       </Toolbar>\n-      <TableView\n-        advisors={advisors}\n-        onClickConnection={handleClickConnection}\n-      />\n+      {showTableView ? (\n+        <TableView\n+          advisors={advisors}\n+          onClickConnection={handleClickConnection}\n+        />\n+      ) : (\n+        <RelationComponent main={mainAdvisor} id={selectedAdvisorId} />\n+      )}\n     </Paper>\n   );\n };\n \n"
        },
        {
          "date": 1708520400190,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import React, { useState } from \"react\";\n-import RelationComponent from \"./RelationComponent\"; // 确保正确导入RelationComponent\n-import TableView from \"./TableView\"; // 确保正确导入TableView\n+import RelationComponent from \"./relation\"; // 确保正确导入RelationComponent\n+import TableView from \"./table\"; // 确保正确导入TableView\n import { Paper, IconButton, Typography, Toolbar } from \"@mui/material\";\n import CloseIcon from \"@mui/icons-material/Close\";\n \n const ListView = ({ onClose, mainAdvisor }) => {\n"
        },
        {
          "date": 1708520419404,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,68 @@\n-import React, { useState } from \"react\";\n-import RelationComponent from \"./relation\"; // 确保正确导入RelationComponent\n-import TableView from \"./table\"; // 确保正确导入TableView\n-import { Paper, IconButton, Typography, Toolbar } from \"@mui/material\";\n+import React, { useEffect, useRef, useState } from \"react\";\n+import RelationComponent from \"./relation\";\n+interface Advisor {\n+  _id: number;\n+  name: string;\n+  affiliation: string;\n+  homepage: string;\n+  twitter: string;\n+  github: string;\n+  email: string;\n+  position: string;\n+  connections: {\n+    _id: number;\n+\n+    relation: Array<{\n+      class: string;\n+      role: string;\n+      duration: {\n+        start: { year: number; month: number };\n+        end: { year: number; month: number };\n+      };\n+    }>;\n+    collaborations: Array<{\n+      papername: string;\n+      year: number;\n+      url: string;\n+    }>;\n+    latestCollaboration: number;\n+    relationFactor: number;\n+  }[];\n+}\n+const advisors: Advisor[] = require(\"../../../../data/advisors.json\");\n+\n+import {\n+  TableContainer,\n+  Table,\n+  TableHead,\n+  TableRow,\n+  TableCell,\n+  TableBody,\n+  Paper,\n+  IconButton,\n+  Typography,\n+  Toolbar,\n+  Link,\n+} from \"@mui/material\";\n+\n+import TableView from \"./table\";\n import CloseIcon from \"@mui/icons-material/Close\";\n \n+// find the connected advisors based on main advisor id\n+const findConnectedAdvisors = (mainAdvisorId: number) => {\n+  // find in main advisor's connections list\n+  const mainAdvisor = advisors.find(\n+    (advisor) => advisor?._id === mainAdvisorId\n+  );\n+  const connectedAdvisors = mainAdvisor?.connections.map((connection) => {\n+    return advisors.find(\n+      (advisor) => advisor?._id === connection._id\n+    );\n+  });\n+  return connectedAdvisors;\n+};\n+\n const ListView = ({ onClose, mainAdvisor }) => {\n   const advisors = findConnectedAdvisors(mainAdvisor._id);\n   const [showTableView, setShowTableView] = useState(true); // 控制显示哪个视图\n   const [selectedAdvisorId, setSelectedAdvisorId] = useState(null); // 存储选中的advisor id\n"
        },
        {
          "date": 1708520449286,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,8 +67,9 @@\n   const [showTableView, setShowTableView] = useState(true); // 控制显示哪个视图\n   const [selectedAdvisorId, setSelectedAdvisorId] = useState(null); // 存储选中的advisor id\n \n   const handleClickConnection = (_id: number) => {\n+    // @ts-ignore\n     setSelectedAdvisorId(_id); // 设置选中的advisor id\n     setShowTableView(false); // 切换到RelationComponent视图\n   };\n \n"
        },
        {
          "date": 1708520462931,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,8 +61,9 @@\n   });\n   return connectedAdvisors;\n };\n \n+// @ts-ignore\n const ListView = ({ onClose, mainAdvisor }) => {\n   const advisors = findConnectedAdvisors(mainAdvisor._id);\n   const [showTableView, setShowTableView] = useState(true); // 控制显示哪个视图\n   const [selectedAdvisorId, setSelectedAdvisorId] = useState(null); // 存储选中的advisor id\n"
        },
        {
          "date": 1708520733612,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,13 +65,16 @@\n // @ts-ignore\n const ListView = ({ onClose, mainAdvisor }) => {\n   const advisors = findConnectedAdvisors(mainAdvisor._id);\n   const [showTableView, setShowTableView] = useState(true); // 控制显示哪个视图\n-  const [selectedAdvisorId, setSelectedAdvisorId] = useState(null); // 存储选中的advisor id\n+  const [selectedAdvisor, setSelectedAdvisor] = useState<Advisor | null>(null); // 存储选中的advisor id\n \n   const handleClickConnection = (_id: number) => {\n     // @ts-ignore\n-    setSelectedAdvisorId(_id); // 设置选中的advisor id\n+    const advisor = advisors.find(\n+      (advisor) => advisor?._id === _id\n+    );\n+    setSelectedAdvisor(advisor || null); // 设置选中的advisor id\n     setShowTableView(false); // 切换到RelationComponent视图\n   };\n \n   return (\n@@ -97,9 +100,9 @@\n           advisors={advisors}\n           onClickConnection={handleClickConnection}\n         />\n       ) : (\n-        <RelationComponent main={mainAdvisor} id={selectedAdvisorId} />\n+        <RelationComponent main={mainAdvisor} id={selectedAdvisor} />\n       )}\n     </Paper>\n   );\n };\n"
        },
        {
          "date": 1708520746122,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -100,9 +100,9 @@\n           advisors={advisors}\n           onClickConnection={handleClickConnection}\n         />\n       ) : (\n-        <RelationComponent main={mainAdvisor} id={selectedAdvisor} />\n+        <RelationComponent main={mainAdvisor} second={selectedAdvisor} />\n       )}\n     </Paper>\n   );\n };\n"
        },
        {
          "date": 1708521153299,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,110 @@\n+import React, { useEffect, useRef, useState } from \"react\";\n+import RelationComponent from \"./relation\";\n+interface Advisor {\n+  _id: number;\n+  name: string;\n+  affiliation: string;\n+  homepage: string;\n+  twitter: string;\n+  github: string;\n+  email: string;\n+  position: string;\n+  connections: {\n+    _id: number;\n+\n+    relation: Array<{\n+      class: string;\n+      role: string;\n+      duration: {\n+        start: { year: number; month: number };\n+        end: { year: number; month: number };\n+      };\n+    }>;\n+    collaborations: Array<{\n+      papername: string;\n+      year: number;\n+      url: string;\n+    }>;\n+    latestCollaboration: number;\n+    relationFactor: number;\n+  }[];\n+}\n+const advisors: Advisor[] = require(\"../../../../data/advisors.json\");\n+\n+import {\n+  TableContainer,\n+  Table,\n+  TableHead,\n+  TableRow,\n+  TableCell,\n+  TableBody,\n+  Paper,\n+  IconButton,\n+  Typography,\n+  Toolbar,\n+  Link,\n+} from \"@mui/material\";\n+\n+import TableView from \"./table\";\n+import CloseIcon from \"@mui/icons-material/Close\";\n+\n+// find the connected advisors based on main advisor id\n+const findConnectedAdvisors = (mainAdvisorId: number) => {\n+  // find in main advisor's connections list\n+  const mainAdvisor = advisors.find(\n+    (advisor) => advisor?._id === mainAdvisorId\n+  );\n+  const connectedAdvisors = mainAdvisor?.connections.map((connection) => {\n+    return advisors.find(\n+      (advisor) => advisor?._id === connection._id\n+    );\n+  });\n+  return connectedAdvisors;\n+};\n+\n+// @ts-ignore\n+const ListView = ({ onClose, mainAdvisor }) => {\n+  const advisors = findConnectedAdvisors(mainAdvisor._id);\n+  const [showTableView, setShowTableView] = useState(true); // 控制显示哪个视图\n+  const [selectedAdvisor, setSelectedAdvisor] = useState<Advisor | null>(null); // 存储选中的advisor id\n+\n+  const handleClickConnection = (_id: number) => {\n+    // @ts-ignore\n+    const advisor = advisors.find(\n+      (advisor) => advisor?._id === _id\n+    );\n+    setSelectedAdvisor(advisor || null); // 设置选中的advisor id\n+    setShowTableView(false); // 切换到RelationComponent视图\n+  };\n+\n+  return (\n+    <Paper\n+      sx={{ width: \"100%\", paddingLeft: 2, paddingRight: 2, paddingTop: 2 }}\n+    >\n+      <Toolbar\n+        sx={{\n+          display: \"flex\",\n+          justifyContent: \"space-between\",\n+          alignItems: \"center\",\n+          p: 2,\n+          width: \"100%\",\n+        }}\n+      >\n+        <Typography variant=\"h6\">Connected to {mainAdvisor.name}</Typography>\n+        <IconButton onClick={onClose} color=\"inherit\">\n+          <CloseIcon alt=\"cancel\" />\n+        </IconButton>\n+      </Toolbar>\n+      {showTableView ? (\n+        <TableView\n+          advisors={advisors}\n+          onClickConnection={handleClickConnection}\n+        />\n+      ) : (\n+        <RelationComponent main={mainAdvisor} second={selectedAdvisor} />\n+      )}\n+    </Paper>\n+  );\n+};\n+\n+export default ListView;\n"
        },
        {
          "date": 1708521160259,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,110 @@\n+import React, { useEffect, useRef, useState } from \"react\";\n+import RelationComponent from \"./relation\";\n+interface Advisor {\n+  _id: number;\n+  name: string;\n+  affiliation: string;\n+  homepage: string;\n+  twitter: string;\n+  github: string;\n+  email: string;\n+  position: string;\n+  connections: {\n+    _id: number;\n+\n+    relation: Array<{\n+      class: string;\n+      role: string;\n+      duration: {\n+        start: { year: number; month: number };\n+        end: { year: number; month: number };\n+      };\n+    }>;\n+    collaborations: Array<{\n+      papername: string;\n+      year: number;\n+      url: string;\n+    }>;\n+    latestCollaboration: number;\n+    relationFactor: number;\n+  }[];\n+}\n+const advisors: Advisor[] = require(\"../../../../data/advisors.json\");\n+\n+import {\n+  TableContainer,\n+  Table,\n+  TableHead,\n+  TableRow,\n+  TableCell,\n+  TableBody,\n+  Paper,\n+  IconButton,\n+  Typography,\n+  Toolbar,\n+  Link,\n+} from \"@mui/material\";\n+\n+import TableView from \"./table\";\n+import CloseIcon from \"@mui/icons-material/Close\";\n+\n+// find the connected advisors based on main advisor id\n+const findConnectedAdvisors = (mainAdvisorId: number) => {\n+  // find in main advisor's connections list\n+  const mainAdvisor = advisors.find(\n+    (advisor) => advisor?._id === mainAdvisorId\n+  );\n+  const connectedAdvisors = mainAdvisor?.connections.map((connection) => {\n+    return advisors.find(\n+      (advisor) => advisor?._id === connection._id\n+    );\n+  });\n+  return connectedAdvisors;\n+};\n+\n+// @ts-ignore\n+const ListView = ({ onClose, mainAdvisor }) => {\n+  const advisors = findConnectedAdvisors(mainAdvisor._id);\n+  const [showTableView, setShowTableView] = useState(true); // 控制显示哪个视图\n+  const [selectedAdvisor, setSelectedAdvisor] = useState<Advisor | null>(null); // 存储选中的advisor id\n+\n+  const handleClickConnection = (_id: number) => {\n+    // @ts-ignore\n+    const advisor = advisors.find(\n+      (advisor) => advisor?._id === _id\n+    );\n+    setSelectedAdvisor(advisor || null); // 设置选中的advisor id\n+    setShowTableView(false); // 切换到RelationComponent视图\n+  };\n+\n+  return (\n+    <Paper\n+      sx={{ width: \"100%\", paddingLeft: 2, paddingRight: 2, paddingTop: 2 }}\n+    >\n+      <Toolbar\n+        sx={{\n+          display: \"flex\",\n+          justifyContent: \"space-between\",\n+          alignItems: \"center\",\n+          p: 2,\n+          width: \"100%\",\n+        }}\n+      >\n+        <Typography variant=\"h6\">Connected to {mainAdvisor.name}</Typography>\n+        <IconButton onClick={onClose} color=\"inherit\">\n+          <CloseIcon />\n+        </IconButton>\n+      </Toolbar>\n+      {showTableView ? (\n+        <TableView\n+          advisors={advisors}\n+          onClickConnection={handleClickConnection}\n+        />\n+      ) : (\n+        <RelationComponent main={mainAdvisor} second={selectedAdvisor} />\n+      )}\n+    </Paper>\n+  );\n+};\n+\n+export default ListView;\n"
        },
        {
          "date": 1708521245776,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,330 +1,96 @@\n-import React, { useEffect, useRef, useState } from \"react\";\n-import RelationComponent from \"./relation\";\n-interface Advisor {\n-  _id: number;\n-  name: string;\n-  affiliation: string;\n-  homepage: string;\n-  twitter: string;\n-  github: string;\n-  email: string;\n-  position: string;\n-  connections: {\n-    _id: number;\n-\n-    relation: Array<{\n-      class: string;\n-      role: string;\n-      duration: {\n-        start: { year: number; month: number };\n-        end: { year: number; month: number };\n-      };\n-    }>;\n-    collaborations: Array<{\n-      papername: string;\n-      year: number;\n-      url: string;\n-    }>;\n-    latestCollaboration: number;\n-    relationFactor: number;\n-  }[];\n-}\n-const advisors: Advisor[] = require(\"../../../../data/advisors.json\");\n-\n+import React from \"react\";\n import {\n-  TableContainer,\n-  Table,\n-  TableHead,\n-  TableRow,\n-  TableCell,\n-  TableBody,\n-  Paper,\n-  IconButton,\n   Typography,\n-  Toolbar,\n-  Link,\n-} from \"@mui/material\";\n-\n-import TableView from \"./table\";\n-import CloseIcon from \"@mui/icons-material/Close\";\n-\n-// find the connected advisors based on main advisor id\n-const findConnectedAdvisors = (mainAdvisorId: number) => {\n-  // find in main advisor's connections list\n-  const mainAdvisor = advisors.find(\n-    (advisor) => advisor?._id === mainAdvisorId\n-  );\n-  const connectedAdvisors = mainAdvisor?.connections.map((connection) => {\n-    return advisors.find(\n-      (advisor) => advisor?._id === connection._id\n-    );\n-  });\n-  return connectedAdvisors;\n-};\n-\n-// @ts-ignore\n-const ListView = ({ onClose, mainAdvisor }) => {\n-  const advisors = findConnectedAdvisors(mainAdvisor._id);\n-  const [showTableView, setShowTableView] = useState(true); // 控制显示哪个视图\n-  const [selectedAdvisor, setSelectedAdvisor] = useState<Advisor | null>(null); // 存储选中的advisor id\n-\n-  const handleClickConnection = (_id: number) => {\n-    // @ts-ignore\n-    const advisor = advisors.find(\n-      (advisor) => advisor?._id === _id\n-    );\n-    setSelectedAdvisor(advisor || null); // 设置选中的advisor id\n-    setShowTableView(false); // 切换到RelationComponent视图\n-  };\n-\n-  return (\n-    <Paper\n-      sx={{ width: \"100%\", paddingLeft: 2, paddingRight: 2, paddingTop: 2 }}\n-    >\n-      <Toolbar\n-        sx={{\n-          display: \"flex\",\n-          justifyContent: \"space-between\",\n-          alignItems: \"center\",\n-          p: 2,\n-          width: \"100%\",\n-        }}\n-      >\n-        <Typography variant=\"h6\">Connected to {mainAdvisor.name}</Typography>\n-        <IconButton onClick={onClose} color=\"inherit\">\n-          <CloseIcon />\n-        </IconButton>\n-      </Toolbar>\n-      {showTableView ? (\n-        <TableView\n-          advisors={advisors}\n-          onClickConnection={handleClickConnection}\n-        />\n-      ) : (\n-        <RelationComponent main={mainAdvisor} second={selectedAdvisor} />\n-      )}\n-    </Paper>\n-  );\n-};\n-\n-export default ListView;\n-import React, { useEffect, useRef, useState } from \"react\";\n-import RelationComponent from \"./relation\";\n-interface Advisor {\n-  _id: number;\n-  name: string;\n-  affiliation: string;\n-  homepage: string;\n-  twitter: string;\n-  github: string;\n-  email: string;\n-  position: string;\n-  connections: {\n-    _id: number;\n-\n-    relation: Array<{\n-      class: string;\n-      role: string;\n-      duration: {\n-        start: { year: number; month: number };\n-        end: { year: number; month: number };\n-      };\n-    }>;\n-    collaborations: Array<{\n-      papername: string;\n-      year: number;\n-      url: string;\n-    }>;\n-    latestCollaboration: number;\n-    relationFactor: number;\n-  }[];\n-}\n-const advisors: Advisor[] = require(\"../../../../data/advisors.json\");\n-\n-import {\n-  TableContainer,\n-  Table,\n-  TableHead,\n-  TableRow,\n-  TableCell,\n-  TableBody,\n   Paper,\n-  IconButton,\n-  Typography,\n-  Toolbar,\n+  List,\n+  ListItem,\n   Link,\n+  Box,\n+  Card,\n+  CardContent,\n+  CardActions,\n+  Button,\n } from \"@mui/material\";\n \n-import TableView from \"./table\";\n-import CloseIcon from \"@mui/icons-material/Close\";\n-\n-// find the connected advisors based on main advisor id\n-const findConnectedAdvisors = (mainAdvisorId: number) => {\n-  // find in main advisor's connections list\n-  const mainAdvisor = advisors.find(\n-    (advisor) => advisor?._id === mainAdvisorId\n+const RelationComponent = ({ main, second, onBack }) => {\n+  const connection = main.connections.find(\n+    (conn) => conn._id === second._id\n   );\n-  const connectedAdvisors = mainAdvisor?.connections.map((connection) => {\n-    return advisors.find(\n-      (advisor) => advisor?._id === connection._id\n-    );\n-  });\n-  return connectedAdvisors;\n-};\n \n-// @ts-ignore\n-const ListView = ({ onClose, mainAdvisor }) => {\n-  const advisors = findConnectedAdvisors(mainAdvisor._id);\n-  const [showTableView, setShowTableView] = useState(true); // 控制显示哪个视图\n-  const [selectedAdvisor, setSelectedAdvisor] = useState<Advisor | null>(null); // 存储选中的advisor id\n-\n-  const handleClickConnection = (_id: number) => {\n-    // @ts-ignore\n-    const advisor = advisors.find(\n-      (advisor) => advisor?._id === _id\n+  if (!connection) {\n+    return (\n+      <Paper sx={{ p: 2 }}>\n+        <Typography variant=\"body1\">No connection found.</Typography>\n+        <Button onClick={onBack} sx={{ mt: 2 }}>\n+          Back\n+        </Button>\n+      </Paper>\n     );\n-    setSelectedAdvisor(advisor || null); // 设置选中的advisor id\n-    setShowTableView(false); // 切换到RelationComponent视图\n-  };\n+  }\n \n   return (\n-    <Paper\n-      sx={{ width: \"100%\", paddingLeft: 2, paddingRight: 2, paddingTop: 2 }}\n-    >\n-      <Toolbar\n-        sx={{\n-          display: \"flex\",\n-          justifyContent: \"space-between\",\n-          alignItems: \"center\",\n-          p: 2,\n-          width: \"100%\",\n-        }}\n+    <Paper elevation={1} sx={{ p: 2 }}>\n+      <Typography\n+        variant=\"h4\"\n+        gutterBottom\n+        component=\"div\"\n+        sx={{ textAlign: \"center\" }}\n       >\n-        <Typography variant=\"h6\">Connected to {mainAdvisor.name}</Typography>\n-        <IconButton onClick={onClose} color=\"inherit\">\n-          <CloseIcon alt=\"cancel\" />\n-        </IconButton>\n-      </Toolbar>\n-      {showTableView ? (\n-        <TableView\n-          advisors={advisors}\n-          onClickConnection={handleClickConnection}\n-        />\n-      ) : (\n-        <RelationComponent main={mainAdvisor} second={selectedAdvisor} />\n-      )}\n-    </Paper>\n-  );\n-};\n-\n-export default ListView;\n-import React, { useEffect, useRef, useState } from \"react\";\n-import RelationComponent from \"./relation\";\n-interface Advisor {\n-  _id: number;\n-  name: string;\n-  affiliation: string;\n-  homepage: string;\n-  twitter: string;\n-  github: string;\n-  email: string;\n-  position: string;\n-  connections: {\n-    _id: number;\n-\n-    relation: Array<{\n-      class: string;\n-      role: string;\n-      duration: {\n-        start: { year: number; month: number };\n-        end: { year: number; month: number };\n-      };\n-    }>;\n-    collaborations: Array<{\n-      papername: string;\n-      year: number;\n-      url: string;\n-    }>;\n-    latestCollaboration: number;\n-    relationFactor: number;\n-  }[];\n-}\n-const advisors: Advisor[] = require(\"../../../../data/advisors.json\");\n-\n-import {\n-  TableContainer,\n-  Table,\n-  TableHead,\n-  TableRow,\n-  TableCell,\n-  TableBody,\n-  Paper,\n-  IconButton,\n-  Typography,\n-  Toolbar,\n-  Link,\n-} from \"@mui/material\";\n-\n-import TableView from \"./table\";\n-import CloseIcon from \"@mui/icons-material/Close\";\n-\n-// find the connected advisors based on main advisor id\n-const findConnectedAdvisors = (mainAdvisorId: number) => {\n-  // find in main advisor's connections list\n-  const mainAdvisor = advisors.find(\n-    (advisor) => advisor?._id === mainAdvisorId\n-  );\n-  const connectedAdvisors = mainAdvisor?.connections.map((connection) => {\n-    return advisors.find(\n-      (advisor) => advisor?._id === connection._id\n-    );\n-  });\n-  return connectedAdvisors;\n-};\n-\n-// @ts-ignore\n-const ListView = ({ onClose, mainAdvisor }) => {\n-  const advisors = findConnectedAdvisors(mainAdvisor._id);\n-  const [showTableView, setShowTableView] = useState(true); // 控制显示哪个视图\n-  const [selectedAdvisor, setSelectedAdvisor] = useState<Advisor | null>(null); // 存储选中的advisor id\n-\n-  const handleClickConnection = (_id: number) => {\n-    // @ts-ignore\n-    const advisor = advisors.find(\n-      (advisor) => advisor?._id === _id\n-    );\n-    setSelectedAdvisor(advisor || null); // 设置选中的advisor id\n-    setShowTableView(false); // 切换到RelationComponent视图\n-  };\n-\n-  return (\n-    <Paper\n-      sx={{ width: \"100%\", paddingLeft: 2, paddingRight: 2, paddingTop: 2 }}\n-    >\n-      <Toolbar\n-        sx={{\n-          display: \"flex\",\n-          justifyContent: \"space-between\",\n-          alignItems: \"center\",\n-          p: 2,\n-          width: \"100%\",\n-        }}\n+        Relations\n+      </Typography>\n+      <List>\n+        {connection.relation.map((rel, index) => (\n+          <Card key={index} sx={{ marginBottom: 2 }}>\n+            <CardContent\n+              sx={{ display: \"flex\", justifyContent: \"space-between\" }}\n+            >\n+              <Box>\n+                <Typography variant=\"body1\">\n+                  {main.name} is {rel.role} of {second.name} during/in{\" \"}\n+                  {rel.class},\n+                </Typography>\n+              </Box>\n+              <Typography variant=\"h6\">\n+                {rel.duration.start.year}/{rel.duration.start.month} to{\" \"}\n+                {rel.duration.end.year}/{rel.duration.end.month}\n+              </Typography>\n+            </CardContent>\n+          </Card>\n+        ))}\n+      </List>\n+      <Typography\n+        variant=\"h4\"\n+        gutterBottom\n+        component=\"div\"\n+        sx={{ textAlign: \"center\" }}\n       >\n-        <Typography variant=\"h6\">Connected to {mainAdvisor.name}</Typography>\n-        <IconButton onClick={onClose} color=\"inherit\">\n-          <CloseIcon />\n-        </IconButton>\n-      </Toolbar>\n-      {showTableView ? (\n-        <TableView\n-          advisors={advisors}\n-          onClickConnection={handleClickConnection}\n-        />\n-      ) : (\n-        <RelationComponent main={mainAdvisor} second={selectedAdvisor} />\n-      )}\n+        Collaborations\n+      </Typography>\n+      <List>\n+        {connection.collaborations.map((collab, index) => (\n+          <Card key={index} sx={{ marginBottom: 2 }}>\n+            <CardContent>\n+              <Link\n+                href={collab.url}\n+                target=\"_blank\"\n+                rel=\"noopener noreferrer\"\n+                underline=\"hover\"\n+              >\n+                <Typography variant=\"body1\">\n+                  {collab.papername}, published in {collab.year}.\n+                </Typography>\n+              </Link>\n+            </CardContent>\n+          </Card>\n+        ))}\n+      </List>\n+      <CardActions>\n+        <Button size=\"small\" onClick={onBack}>\n+          Back\n+        </Button>\n+      </CardActions>\n     </Paper>\n   );\n };\n \n-export default ListView;\n+export default RelationComponent;\n"
        },
        {
          "date": 1708521256233,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,110 @@\n+import React, { useEffect, useRef, useState } from \"react\";\n+import RelationComponent from \"./relation\";\n+interface Advisor {\n+  _id: number;\n+  name: string;\n+  affiliation: string;\n+  homepage: string;\n+  twitter: string;\n+  github: string;\n+  email: string;\n+  position: string;\n+  connections: {\n+    _id: number;\n+\n+    relation: Array<{\n+      class: string;\n+      role: string;\n+      duration: {\n+        start: { year: number; month: number };\n+        end: { year: number; month: number };\n+      };\n+    }>;\n+    collaborations: Array<{\n+      papername: string;\n+      year: number;\n+      url: string;\n+    }>;\n+    latestCollaboration: number;\n+    relationFactor: number;\n+  }[];\n+}\n+const advisors: Advisor[] = require(\"../../../../data/advisors.json\");\n+\n+import {\n+  TableContainer,\n+  Table,\n+  TableHead,\n+  TableRow,\n+  TableCell,\n+  TableBody,\n+  Paper,\n+  IconButton,\n+  Typography,\n+  Toolbar,\n+  Link,\n+} from \"@mui/material\";\n+\n+import TableView from \"./table\";\n+import CloseIcon from \"@mui/icons-material/Close\";\n+\n+// find the connected advisors based on main advisor id\n+const findConnectedAdvisors = (mainAdvisorId: number) => {\n+  // find in main advisor's connections list\n+  const mainAdvisor = advisors.find(\n+    (advisor) => advisor?._id === mainAdvisorId\n+  );\n+  const connectedAdvisors = mainAdvisor?.connections.map((connection) => {\n+    return advisors.find(\n+      (advisor) => advisor?._id === connection._id\n+    );\n+  });\n+  return connectedAdvisors;\n+};\n+\n+// @ts-ignore\n+const ListView = ({ onClose, mainAdvisor }) => {\n+  const advisors = findConnectedAdvisors(mainAdvisor._id);\n+  const [showTableView, setShowTableView] = useState(true); // 控制显示哪个视图\n+  const [selectedAdvisor, setSelectedAdvisor] = useState<Advisor | null>(null); // 存储选中的advisor id\n+\n+  const handleClickConnection = (_id: number) => {\n+    // @ts-ignore\n+    const advisor = advisors.find(\n+      (advisor) => advisor?._id === _id\n+    );\n+    setSelectedAdvisor(advisor || null); // 设置选中的advisor id\n+    setShowTableView(false); // 切换到RelationComponent视图\n+  };\n+\n+  return (\n+    <Paper\n+      sx={{ width: \"100%\", paddingLeft: 2, paddingRight: 2, paddingTop: 2 }}\n+    >\n+      <Toolbar\n+        sx={{\n+          display: \"flex\",\n+          justifyContent: \"space-between\",\n+          alignItems: \"center\",\n+          p: 2,\n+          width: \"100%\",\n+        }}\n+      >\n+        <Typography variant=\"h6\">Connected to {mainAdvisor.name}</Typography>\n+        <IconButton onClick={onClose} color=\"inherit\">\n+          <CloseIcon />\n+        </IconButton>\n+      </Toolbar>\n+      {showTableView ? (\n+        <TableView\n+          advisors={advisors}\n+          onClickConnection={handleClickConnection}\n+        />\n+      ) : (\n+        <RelationComponent main={mainAdvisor} second={selectedAdvisor} />\n+      )}\n+    </Paper>\n+  );\n+};\n+\n+export default ListView;\n"
        },
        {
          "date": 1708521268180,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,68 +61,8 @@\n   });\n   return connectedAdvisors;\n };\n \n-// @ts-ignore\n-const ListView = ({ onClose, mainAdvisor }) => {\n-  const advisors = findConnectedAdvisors(mainAdvisor._id);\n-  const [showTableView, setShowTableView] = useState(true); // 控制显示哪个视图\n-  const [selectedAdvisor, setSelectedAdvisor] = useState<Advisor | null>(null); // 存储选中的advisor id\n-\n-  const handleClickConnection = (_id: number) => {\n-    // @ts-ignore\n-    const advisor = advisors.find(\n-      (advisor) => advisor?._id === _id\n-    );\n-    setSelectedAdvisor(advisor || null); // 设置选中的advisor id\n-    setShowTableView(false); // 切换到RelationComponent视图\n-  };\n-\n-  return (\n-    <Paper\n-      sx={{ width: \"100%\", paddingLeft: 2, paddingRight: 2, paddingTop: 2 }}\n-    >\n-      <Toolbar\n-        sx={{\n-          display: \"flex\",\n-          justifyContent: \"space-between\",\n-          alignItems: \"center\",\n-          p: 2,\n-          width: \"100%\",\n-        }}\n-      >\n-        <Typography variant=\"h6\">Connected to {mainAdvisor.name}</Typography>\n-        <IconButton onClick={onClose} color=\"inherit\">\n-          <CloseIcon />\n-        </IconButton>\n-      </Toolbar>\n-      {showTableView ? (\n-        <TableView\n-          advisors={advisors}\n-          onClickConnection={handleClickConnection}\n-        />\n-      ) : (\n-        <RelationComponent main={mainAdvisor} second={selectedAdvisor} />\n-      )}\n-    </Paper>\n-  );\n-};\n-\n-export default ListView;\n-import React from \"react\";\n-import {\n-  Typography,\n-  Paper,\n-  List,\n-  ListItem,\n-  Link,\n-  Box,\n-  Card,\n-  CardContent,\n-  CardActions,\n-  Button,\n-} from \"@mui/material\";\n-\n const RelationComponent = ({ main, second, onBack }) => {\n   const connection = main.connections.find(\n     (conn) => conn._id === second._id\n   );\n"
        },
        {
          "date": 1708521277225,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,9 +63,9 @@\n };\n \n const RelationComponent = ({ main, second, onBack }) => {\n   const connection = main.connections.find(\n-    (conn) => conn._id === second._id\n+    (conn: any) => conn._id === second._id\n   );\n \n   if (!connection) {\n     return (\n"
        },
        {
          "date": 1708521282919,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,8 +39,9 @@\n   TableCell,\n   TableBody,\n   Paper,\n   IconButton,\n+  Button,\n   Typography,\n   Toolbar,\n   Link,\n } from \"@mui/material\";\n"
        },
        {
          "date": 1708521288781,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,8 +40,9 @@\n   TableBody,\n   Paper,\n   IconButton,\n   Button,\n+  List,\n   Typography,\n   Toolbar,\n   Link,\n } from \"@mui/material\";\n"
        },
        {
          "date": 1708521294503,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,8 +41,10 @@\n   Paper,\n   IconButton,\n   Button,\n   List,\n+  Card,\n+  Box,\n   Typography,\n   Toolbar,\n   Link,\n } from \"@mui/material\";\n"
        },
        {
          "date": 1708521314507,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,23 +31,18 @@\n }\n const advisors: Advisor[] = require(\"../../../../data/advisors.json\");\n \n import {\n-  TableContainer,\n-  Table,\n-  TableHead,\n-  TableRow,\n-  TableCell,\n-  TableBody,\n+  Typography,\n   Paper,\n-  IconButton,\n-  Button,\n   List,\n+  ListItem,\n+  Link,\n+  Box,\n   Card,\n-  Box,\n-  Typography,\n-  Toolbar,\n-  Link,\n+  CardContent,\n+  CardActions,\n+  Button,\n } from \"@mui/material\";\n \n import TableView from \"./table\";\n import CloseIcon from \"@mui/icons-material/Close\";\n"
        },
        {
          "date": 1708521352964,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,18 +31,19 @@\n }\n const advisors: Advisor[] = require(\"../../../../data/advisors.json\");\n \n import {\n+  TableContainer,\n+  Table,\n+  TableHead,\n+  TableRow,\n+  TableCell,\n+  TableBody,\n+  Paper,\n+  IconButton,\n   Typography,\n-  Paper,\n-  List,\n-  ListItem,\n+  Toolbar,\n   Link,\n-  Box,\n-  Card,\n-  CardContent,\n-  CardActions,\n-  Button,\n } from \"@mui/material\";\n \n import TableView from \"./table\";\n import CloseIcon from \"@mui/icons-material/Close\";\n@@ -60,86 +61,50 @@\n   });\n   return connectedAdvisors;\n };\n \n-const RelationComponent = ({ main, second, onBack }) => {\n-  const connection = main.connections.find(\n-    (conn: any) => conn._id === second._id\n-  );\n+// @ts-ignore\n+const ListView = ({ onClose, mainAdvisor }) => {\n+  const advisors = findConnectedAdvisors(mainAdvisor._id);\n+  const [showTableView, setShowTableView] = useState(true); // 控制显示哪个视图\n+  const [selectedAdvisor, setSelectedAdvisor] = useState<Advisor | null>(null); // 存储选中的advisor id\n \n-  if (!connection) {\n-    return (\n-      <Paper sx={{ p: 2 }}>\n-        <Typography variant=\"body1\">No connection found.</Typography>\n-        <Button onClick={onBack} sx={{ mt: 2 }}>\n-          Back\n-        </Button>\n-      </Paper>\n+  const handleClickConnection = (_id: number) => {\n+    // @ts-ignore\n+    const advisor = advisors.find(\n+      (advisor) => advisor?._id === _id\n     );\n-  }\n+    setSelectedAdvisor(advisor || null); // 设置选中的advisor id\n+    setShowTableView(false); // 切换到RelationComponent视图\n+  };\n \n   return (\n-    <Paper elevation={1} sx={{ p: 2 }}>\n-      <Typography\n-        variant=\"h4\"\n-        gutterBottom\n-        component=\"div\"\n-        sx={{ textAlign: \"center\" }}\n+    <Paper\n+      sx={{ width: \"100%\", paddingLeft: 2, paddingRight: 2, paddingTop: 2 }}\n+    >\n+      <Toolbar\n+        sx={{\n+          display: \"flex\",\n+          justifyContent: \"space-between\",\n+          alignItems: \"center\",\n+          p: 2,\n+          width: \"100%\",\n+        }}\n       >\n-        Relations\n-      </Typography>\n-      <List>\n-        {connection.relation.map((rel, index) => (\n-          <Card key={index} sx={{ marginBottom: 2 }}>\n-            <CardContent\n-              sx={{ display: \"flex\", justifyContent: \"space-between\" }}\n-            >\n-              <Box>\n-                <Typography variant=\"body1\">\n-                  {main.name} is {rel.role} of {second.name} during/in{\" \"}\n-                  {rel.class},\n-                </Typography>\n-              </Box>\n-              <Typography variant=\"h6\">\n-                {rel.duration.start.year}/{rel.duration.start.month} to{\" \"}\n-                {rel.duration.end.year}/{rel.duration.end.month}\n-              </Typography>\n-            </CardContent>\n-          </Card>\n-        ))}\n-      </List>\n-      <Typography\n-        variant=\"h4\"\n-        gutterBottom\n-        component=\"div\"\n-        sx={{ textAlign: \"center\" }}\n-      >\n-        Collaborations\n-      </Typography>\n-      <List>\n-        {connection.collaborations.map((collab, index) => (\n-          <Card key={index} sx={{ marginBottom: 2 }}>\n-            <CardContent>\n-              <Link\n-                href={collab.url}\n-                target=\"_blank\"\n-                rel=\"noopener noreferrer\"\n-                underline=\"hover\"\n-              >\n-                <Typography variant=\"body1\">\n-                  {collab.papername}, published in {collab.year}.\n-                </Typography>\n-              </Link>\n-            </CardContent>\n-          </Card>\n-        ))}\n-      </List>\n-      <CardActions>\n-        <Button size=\"small\" onClick={onBack}>\n-          Back\n-        </Button>\n-      </CardActions>\n+        <Typography variant=\"h6\">Connected to {mainAdvisor.name}</Typography>\n+        <IconButton onClick={onClose} color=\"inherit\">\n+          <CloseIcon />\n+        </IconButton>\n+      </Toolbar>\n+      {showTableView ? (\n+        <TableView\n+          advisors={advisors}\n+          onClickConnection={handleClickConnection}\n+        />\n+      ) : (\n+        <RelationComponent main={mainAdvisor} second={selectedAdvisor} />\n+      )}\n     </Paper>\n   );\n };\n \n-export default RelationComponent;\n+export default ListView;\n"
        },
        {
          "date": 1708521423672,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -76,8 +76,12 @@\n     setSelectedAdvisor(advisor || null); // 设置选中的advisor id\n     setShowTableView(false); // 切换到RelationComponent视图\n   };\n \n+  const returnToListView = () => {\n+    setShowTableView(true); // 切换到TableView视图\n+  };\n+\n   return (\n     <Paper\n       sx={{ width: \"100%\", paddingLeft: 2, paddingRight: 2, paddingTop: 2 }}\n     >\n@@ -98,8 +102,9 @@\n       {showTableView ? (\n         <TableView\n           advisors={advisors}\n           onClickConnection={handleClickConnection}\n+          onBack={returnToListView}\n         />\n       ) : (\n         <RelationComponent main={mainAdvisor} second={selectedAdvisor} />\n       )}\n"
        },
        {
          "date": 1708521447617,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,114 @@\n+import React, { useEffect, useRef, useState } from \"react\";\n+import RelationComponent from \"./relation\";\n+interface Advisor {\n+  _id: number;\n+  name: string;\n+  affiliation: string;\n+  homepage: string;\n+  twitter: string;\n+  github: string;\n+  email: string;\n+  position: string;\n+  connections: {\n+    _id: number;\n+\n+    relation: Array<{\n+      class: string;\n+      role: string;\n+      duration: {\n+        start: { year: number; month: number };\n+        end: { year: number; month: number };\n+      };\n+    }>;\n+    collaborations: Array<{\n+      papername: string;\n+      year: number;\n+      url: string;\n+    }>;\n+    latestCollaboration: number;\n+    relationFactor: number;\n+  }[];\n+}\n+const advisors: Advisor[] = require(\"../../../../data/advisors.json\");\n+\n+import {\n+  TableContainer,\n+  Table,\n+  TableHead,\n+  TableRow,\n+  TableCell,\n+  TableBody,\n+  Paper,\n+  IconButton,\n+  Typography,\n+  Toolbar,\n+  Link,\n+} from \"@mui/material\";\n+\n+import TableView from \"./table\";\n+import CloseIcon from \"@mui/icons-material/Close\";\n+\n+// find the connected advisors based on main advisor id\n+const findConnectedAdvisors = (mainAdvisorId: number) => {\n+  // find in main advisor's connections list\n+  const mainAdvisor = advisors.find(\n+    (advisor) => advisor?._id === mainAdvisorId\n+  );\n+  const connectedAdvisors = mainAdvisor?.connections.map((connection) => {\n+    return advisors.find(\n+      (advisor) => advisor?._id === connection._id\n+    );\n+  });\n+  return connectedAdvisors;\n+};\n+\n+// @ts-ignore\n+const ListView = ({ onClose, mainAdvisor }) => {\n+  const advisors = findConnectedAdvisors(mainAdvisor._id);\n+  const [showTableView, setShowTableView] = useState(true); // 控制显示哪个视图\n+  const [selectedAdvisor, setSelectedAdvisor] = useState<Advisor | null>(null); // 存储选中的advisor id\n+\n+  const handleClickConnection = (_id: number) => {\n+    // @ts-ignore\n+    const advisor = advisors.find(\n+      (advisor) => advisor?._id === _id\n+    );\n+    setSelectedAdvisor(advisor || null); // 设置选中的advisor id\n+    setShowTableView(false); // 切换到RelationComponent视图\n+  };\n+\n+  const returnToListView = () => {\n+    setShowTableView(true); // 切换到TableView视图\n+  };\n+\n+  return (\n+    <Paper\n+      sx={{ width: \"100%\", paddingLeft: 2, paddingRight: 2, paddingTop: 2 }}\n+    >\n+      <Toolbar\n+        sx={{\n+          display: \"flex\",\n+          justifyContent: \"space-between\",\n+          alignItems: \"center\",\n+          p: 2,\n+          width: \"100%\",\n+        }}\n+      >\n+        <Typography variant=\"h6\">Connected to {mainAdvisor.name}</Typography>\n+        <IconButton onClick={onClose} color=\"inherit\">\n+          <CloseIcon />\n+        </IconButton>\n+      </Toolbar>\n+      {showTableView ? (\n+        <TableView\n+          advisors={advisors}\n+          onClickConnection={handleClickConnection}\n+        />\n+      ) : (\n+        <RelationComponent main={mainAdvisor} second={selectedAdvisor} />\n+      )}\n+    </Paper>\n+  );\n+};\n+\n+export default ListView;\n"
        },
        {
          "date": 1708521482051,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -104,124 +104,13 @@\n           advisors={advisors}\n           onClickConnection={handleClickConnection}\n         />\n       ) : (\n-        <RelationComponent main={mainAdvisor} second={selectedAdvisor} />\n-      )}\n-    </Paper>\n-  );\n-};\n-\n-export default ListView;\n-import React, { useEffect, useRef, useState } from \"react\";\n-import RelationComponent from \"./relation\";\n-interface Advisor {\n-  _id: number;\n-  name: string;\n-  affiliation: string;\n-  homepage: string;\n-  twitter: string;\n-  github: string;\n-  email: string;\n-  position: string;\n-  connections: {\n-    _id: number;\n-\n-    relation: Array<{\n-      class: string;\n-      role: string;\n-      duration: {\n-        start: { year: number; month: number };\n-        end: { year: number; month: number };\n-      };\n-    }>;\n-    collaborations: Array<{\n-      papername: string;\n-      year: number;\n-      url: string;\n-    }>;\n-    latestCollaboration: number;\n-    relationFactor: number;\n-  }[];\n-}\n-const advisors: Advisor[] = require(\"../../../../data/advisors.json\");\n-\n-import {\n-  TableContainer,\n-  Table,\n-  TableHead,\n-  TableRow,\n-  TableCell,\n-  TableBody,\n-  Paper,\n-  IconButton,\n-  Typography,\n-  Toolbar,\n-  Link,\n-} from \"@mui/material\";\n-\n-import TableView from \"./table\";\n-import CloseIcon from \"@mui/icons-material/Close\";\n-\n-// find the connected advisors based on main advisor id\n-const findConnectedAdvisors = (mainAdvisorId: number) => {\n-  // find in main advisor's connections list\n-  const mainAdvisor = advisors.find(\n-    (advisor) => advisor?._id === mainAdvisorId\n-  );\n-  const connectedAdvisors = mainAdvisor?.connections.map((connection) => {\n-    return advisors.find(\n-      (advisor) => advisor?._id === connection._id\n-    );\n-  });\n-  return connectedAdvisors;\n-};\n-\n-// @ts-ignore\n-const ListView = ({ onClose, mainAdvisor }) => {\n-  const advisors = findConnectedAdvisors(mainAdvisor._id);\n-  const [showTableView, setShowTableView] = useState(true); // 控制显示哪个视图\n-  const [selectedAdvisor, setSelectedAdvisor] = useState<Advisor | null>(null); // 存储选中的advisor id\n-\n-  const handleClickConnection = (_id: number) => {\n-    // @ts-ignore\n-    const advisor = advisors.find(\n-      (advisor) => advisor?._id === _id\n-    );\n-    setSelectedAdvisor(advisor || null); // 设置选中的advisor id\n-    setShowTableView(false); // 切换到RelationComponent视图\n-  };\n-\n-  const returnToListView = () => {\n-    setShowTableView(true); // 切换到TableView视图\n-  };\n-\n-  return (\n-    <Paper\n-      sx={{ width: \"100%\", paddingLeft: 2, paddingRight: 2, paddingTop: 2 }}\n-    >\n-      <Toolbar\n-        sx={{\n-          display: \"flex\",\n-          justifyContent: \"space-between\",\n-          alignItems: \"center\",\n-          p: 2,\n-          width: \"100%\",\n-        }}\n-      >\n-        <Typography variant=\"h6\">Connected to {mainAdvisor.name}</Typography>\n-        <IconButton onClick={onClose} color=\"inherit\">\n-          <CloseIcon />\n-        </IconButton>\n-      </Toolbar>\n-      {showTableView ? (\n-        <TableView\n-          advisors={advisors}\n-          onClickConnection={handleClickConnection}\n+        <RelationComponent\n+          main={mainAdvisor}\n+          second={selectedAdvisor}\n           onBack={returnToListView}\n         />\n-      ) : (\n-        <RelationComponent main={mainAdvisor} second={selectedAdvisor} />\n       )}\n     </Paper>\n   );\n };\n"
        },
        {
          "date": 1708521720064,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -89,9 +89,9 @@\n         sx={{\n           display: \"flex\",\n           justifyContent: \"space-between\",\n           alignItems: \"center\",\n-          p: 2,\n+          p: 0,\n           width: \"100%\",\n         }}\n       >\n         <Typography variant=\"h6\">Connected to {mainAdvisor.name}</Typography>\n"
        },
        {
          "date": 1708521750461,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -87,9 +87,9 @@\n     >\n       <Toolbar\n         sx={{\n           display: \"flex\",\n-          justifyContent: \"space-between\",\n+          justifyContent: \"space-evenly\",\n           alignItems: \"center\",\n           p: 0,\n           width: \"100%\",\n         }}\n"
        },
        {
          "date": 1708521756661,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -87,9 +87,9 @@\n     >\n       <Toolbar\n         sx={{\n           display: \"flex\",\n-          justifyContent: \"space-evenly\",\n+          justifyContent: \"space-between\",\n           alignItems: \"center\",\n           p: 0,\n           width: \"100%\",\n         }}\n"
        },
        {
          "date": 1708521828838,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,120 @@\n+import React, { useEffect, useRef, useState } from \"react\";\n+import RelationComponent from \"./relation\";\n+interface Advisor {\n+  _id: number;\n+  name: string;\n+  affiliation: string;\n+  homepage: string;\n+  twitter: string;\n+  github: string;\n+  email: string;\n+  position: string;\n+  connections: {\n+    _id: number;\n+\n+    relation: Array<{\n+      class: string;\n+      role: string;\n+      duration: {\n+        start: { year: number; month: number };\n+        end: { year: number; month: number };\n+      };\n+    }>;\n+    collaborations: Array<{\n+      papername: string;\n+      year: number;\n+      url: string;\n+    }>;\n+    latestCollaboration: number;\n+    relationFactor: number;\n+  }[];\n+}\n+const advisors: Advisor[] = require(\"../../../../data/advisors.json\");\n+\n+import {\n+  TableContainer,\n+  Table,\n+  TableHead,\n+  TableRow,\n+  TableCell,\n+  TableBody,\n+  Paper,\n+  IconButton,\n+  Typography,\n+  Toolbar,\n+  Link,\n+} from \"@mui/material\";\n+\n+import TableView from \"./table\";\n+import CloseIcon from \"@mui/icons-material/Close\";\n+\n+// find the connected advisors based on main advisor id\n+const findConnectedAdvisors = (mainAdvisorId: number) => {\n+  // find in main advisor's connections list\n+  const mainAdvisor = advisors.find(\n+    (advisor) => advisor?._id === mainAdvisorId\n+  );\n+  const connectedAdvisors = mainAdvisor?.connections.map((connection) => {\n+    return advisors.find(\n+      (advisor) => advisor?._id === connection._id\n+    );\n+  });\n+  return connectedAdvisors;\n+};\n+\n+// @ts-ignore\n+const ListView = ({ onClose, mainAdvisor }) => {\n+  const advisors = findConnectedAdvisors(mainAdvisor._id);\n+  const [showTableView, setShowTableView] = useState(true); // 控制显示哪个视图\n+  const [selectedAdvisor, setSelectedAdvisor] = useState<Advisor | null>(null); // 存储选中的advisor id\n+\n+  const handleClickConnection = (_id: number) => {\n+    // @ts-ignore\n+    const advisor = advisors.find(\n+      (advisor) => advisor?._id === _id\n+    );\n+    setSelectedAdvisor(advisor || null); // 设置选中的advisor id\n+    setShowTableView(false); // 切换到RelationComponent视图\n+  };\n+\n+  const returnToListView = () => {\n+    setShowTableView(true); // 切换到TableView视图\n+  };\n+\n+  return (\n+    <Paper\n+      sx={{ width: \"100%\", paddingLeft: 2, paddingRight: 2, paddingTop: 2 }}\n+    >\n+      <Toolbar\n+        sx={{\n+          display: \"flex\",\n+          justifyContent: \"space-between\",\n+          alignItems: \"center\",\n+          p: 0,\n+          width: \"100%\",\n+        }}\n+      >\n+        <Typography variant=\"h6\">Connected to {mainAdvisor.name}</Typography>\n+        {/* 使用Box组件作为flex占位符 */}\n+        <Box sx={{ flexGrow: 1 }} />\n+        <IconButton onClick={onClose} color=\"inherit\">\n+          <CloseIcon />\n+        </IconButton>\n+      </Toolbar>\n+      {showTableView ? (\n+        <TableView\n+          advisors={advisors}\n+          onClickConnection={handleClickConnection}\n+        />\n+      ) : (\n+        <RelationComponent\n+          main={mainAdvisor}\n+          second={selectedAdvisor}\n+          onBack={returnToListView}\n+        />\n+      )}\n+    </Paper>\n+  );\n+};\n+\n+export default ListView;\n"
        },
        {
          "date": 1708521835354,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,120 @@\n+import React, { useEffect, useRef, useState } from \"react\";\n+import RelationComponent from \"./relation\";\n+interface Advisor {\n+  _id: number;\n+  name: string;\n+  affiliation: string;\n+  homepage: string;\n+  twitter: string;\n+  github: string;\n+  email: string;\n+  position: string;\n+  connections: {\n+    _id: number;\n+\n+    relation: Array<{\n+      class: string;\n+      role: string;\n+      duration: {\n+        start: { year: number; month: number };\n+        end: { year: number; month: number };\n+      };\n+    }>;\n+    collaborations: Array<{\n+      papername: string;\n+      year: number;\n+      url: string;\n+    }>;\n+    latestCollaboration: number;\n+    relationFactor: number;\n+  }[];\n+}\n+const advisors: Advisor[] = require(\"../../../../data/advisors.json\");\n+\n+import {\n+  TableContainer,\n+  Table,\n+  TableHead,\n+  TableRow,\n+  TableCell,\n+  TableBody,\n+  Paper,\n+  IconButton,\n+  Typography,\n+  Toolbar,\n+  Box,\n+} from \"@mui/material\";\n+\n+import TableView from \"./table\";\n+import CloseIcon from \"@mui/icons-material/Close\";\n+\n+// find the connected advisors based on main advisor id\n+const findConnectedAdvisors = (mainAdvisorId: number) => {\n+  // find in main advisor's connections list\n+  const mainAdvisor = advisors.find(\n+    (advisor) => advisor?._id === mainAdvisorId\n+  );\n+  const connectedAdvisors = mainAdvisor?.connections.map((connection) => {\n+    return advisors.find(\n+      (advisor) => advisor?._id === connection._id\n+    );\n+  });\n+  return connectedAdvisors;\n+};\n+\n+// @ts-ignore\n+const ListView = ({ onClose, mainAdvisor }) => {\n+  const advisors = findConnectedAdvisors(mainAdvisor._id);\n+  const [showTableView, setShowTableView] = useState(true); // 控制显示哪个视图\n+  const [selectedAdvisor, setSelectedAdvisor] = useState<Advisor | null>(null); // 存储选中的advisor id\n+\n+  const handleClickConnection = (_id: number) => {\n+    // @ts-ignore\n+    const advisor = advisors.find(\n+      (advisor) => advisor?._id === _id\n+    );\n+    setSelectedAdvisor(advisor || null); // 设置选中的advisor id\n+    setShowTableView(false); // 切换到RelationComponent视图\n+  };\n+\n+  const returnToListView = () => {\n+    setShowTableView(true); // 切换到TableView视图\n+  };\n+\n+  return (\n+    <Paper\n+      sx={{ width: \"100%\", paddingLeft: 2, paddingRight: 2, paddingTop: 2 }}\n+    >\n+      <Toolbar\n+        sx={{\n+          display: \"flex\",\n+          justifyContent: \"space-between\",\n+          alignItems: \"center\",\n+          p: 0,\n+          width: \"100%\",\n+        }}\n+      >\n+        <Typography variant=\"h6\">Connected to {mainAdvisor.name}</Typography>\n+        {/* 使用Box组件作为flex占位符 */}\n+        <Box sx={{ flexGrow: 1 }} />\n+        <IconButton onClick={onClose} color=\"inherit\">\n+          <CloseIcon />\n+        </IconButton>\n+      </Toolbar>\n+      {showTableView ? (\n+        <TableView\n+          advisors={advisors}\n+          onClickConnection={handleClickConnection}\n+        />\n+      ) : (\n+        <RelationComponent\n+          main={mainAdvisor}\n+          second={selectedAdvisor}\n+          onBack={returnToListView}\n+        />\n+      )}\n+    </Paper>\n+  );\n+};\n+\n+export default ListView;\n"
        },
        {
          "date": 1708521881509,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -89,129 +89,11 @@\n         sx={{\n           display: \"flex\",\n           justifyContent: \"space-between\",\n           alignItems: \"center\",\n-          p: 0,\n-          width: \"100%\",\n-        }}\n-      >\n-        <Typography variant=\"h6\">Connected to {mainAdvisor.name}</Typography>\n-        {/* 使用Box组件作为flex占位符 */}\n-        <Box sx={{ flexGrow: 1 }} />\n-        <IconButton onClick={onClose} color=\"inherit\">\n-          <CloseIcon />\n-        </IconButton>\n-      </Toolbar>\n-      {showTableView ? (\n-        <TableView\n-          advisors={advisors}\n-          onClickConnection={handleClickConnection}\n-        />\n-      ) : (\n-        <RelationComponent\n-          main={mainAdvisor}\n-          second={selectedAdvisor}\n-          onBack={returnToListView}\n-        />\n-      )}\n-    </Paper>\n-  );\n-};\n \n-export default ListView;\n-import React, { useEffect, useRef, useState } from \"react\";\n-import RelationComponent from \"./relation\";\n-interface Advisor {\n-  _id: number;\n-  name: string;\n-  affiliation: string;\n-  homepage: string;\n-  twitter: string;\n-  github: string;\n-  email: string;\n-  position: string;\n-  connections: {\n-    _id: number;\n-\n-    relation: Array<{\n-      class: string;\n-      role: string;\n-      duration: {\n-        start: { year: number; month: number };\n-        end: { year: number; month: number };\n-      };\n-    }>;\n-    collaborations: Array<{\n-      papername: string;\n-      year: number;\n-      url: string;\n-    }>;\n-    latestCollaboration: number;\n-    relationFactor: number;\n-  }[];\n-}\n-const advisors: Advisor[] = require(\"../../../../data/advisors.json\");\n-\n-import {\n-  TableContainer,\n-  Table,\n-  TableHead,\n-  TableRow,\n-  TableCell,\n-  TableBody,\n-  Paper,\n-  IconButton,\n-  Typography,\n-  Toolbar,\n-  Link,\n-} from \"@mui/material\";\n-\n-import TableView from \"./table\";\n-import CloseIcon from \"@mui/icons-material/Close\";\n-\n-// find the connected advisors based on main advisor id\n-const findConnectedAdvisors = (mainAdvisorId: number) => {\n-  // find in main advisor's connections list\n-  const mainAdvisor = advisors.find(\n-    (advisor) => advisor?._id === mainAdvisorId\n-  );\n-  const connectedAdvisors = mainAdvisor?.connections.map((connection) => {\n-    return advisors.find(\n-      (advisor) => advisor?._id === connection._id\n-    );\n-  });\n-  return connectedAdvisors;\n-};\n-\n-// @ts-ignore\n-const ListView = ({ onClose, mainAdvisor }) => {\n-  const advisors = findConnectedAdvisors(mainAdvisor._id);\n-  const [showTableView, setShowTableView] = useState(true); // 控制显示哪个视图\n-  const [selectedAdvisor, setSelectedAdvisor] = useState<Advisor | null>(null); // 存储选中的advisor id\n-\n-  const handleClickConnection = (_id: number) => {\n-    // @ts-ignore\n-    const advisor = advisors.find(\n-      (advisor) => advisor?._id === _id\n-    );\n-    setSelectedAdvisor(advisor || null); // 设置选中的advisor id\n-    setShowTableView(false); // 切换到RelationComponent视图\n-  };\n-\n-  const returnToListView = () => {\n-    setShowTableView(true); // 切换到TableView视图\n-  };\n-\n-  return (\n-    <Paper\n-      sx={{ width: \"100%\", paddingLeft: 2, paddingRight: 2, paddingTop: 2 }}\n-    >\n-      <Toolbar\n-        sx={{\n-          display: \"flex\",\n-          justifyContent: \"space-between\",\n-          alignItems: \"center\",\n-          p: 0,\n+          paddingLeft: 0,\n+          paddingRight: 0,\n           width: \"100%\",\n         }}\n       >\n         <Typography variant=\"h6\">Connected to {mainAdvisor.name}</Typography>\n@@ -237,122 +119,4 @@\n   );\n };\n \n export default ListView;\n-import React, { useEffect, useRef, useState } from \"react\";\n-import RelationComponent from \"./relation\";\n-interface Advisor {\n-  _id: number;\n-  name: string;\n-  affiliation: string;\n-  homepage: string;\n-  twitter: string;\n-  github: string;\n-  email: string;\n-  position: string;\n-  connections: {\n-    _id: number;\n-\n-    relation: Array<{\n-      class: string;\n-      role: string;\n-      duration: {\n-        start: { year: number; month: number };\n-        end: { year: number; month: number };\n-      };\n-    }>;\n-    collaborations: Array<{\n-      papername: string;\n-      year: number;\n-      url: string;\n-    }>;\n-    latestCollaboration: number;\n-    relationFactor: number;\n-  }[];\n-}\n-const advisors: Advisor[] = require(\"../../../../data/advisors.json\");\n-\n-import {\n-  TableContainer,\n-  Table,\n-  TableHead,\n-  TableRow,\n-  TableCell,\n-  TableBody,\n-  Paper,\n-  IconButton,\n-  Typography,\n-  Toolbar,\n-  Link,\n-} from \"@mui/material\";\n-\n-import TableView from \"./table\";\n-import CloseIcon from \"@mui/icons-material/Close\";\n-\n-// find the connected advisors based on main advisor id\n-const findConnectedAdvisors = (mainAdvisorId: number) => {\n-  // find in main advisor's connections list\n-  const mainAdvisor = advisors.find(\n-    (advisor) => advisor?._id === mainAdvisorId\n-  );\n-  const connectedAdvisors = mainAdvisor?.connections.map((connection) => {\n-    return advisors.find(\n-      (advisor) => advisor?._id === connection._id\n-    );\n-  });\n-  return connectedAdvisors;\n-};\n-\n-// @ts-ignore\n-const ListView = ({ onClose, mainAdvisor }) => {\n-  const advisors = findConnectedAdvisors(mainAdvisor._id);\n-  const [showTableView, setShowTableView] = useState(true); // 控制显示哪个视图\n-  const [selectedAdvisor, setSelectedAdvisor] = useState<Advisor | null>(null); // 存储选中的advisor id\n-\n-  const handleClickConnection = (_id: number) => {\n-    // @ts-ignore\n-    const advisor = advisors.find(\n-      (advisor) => advisor?._id === _id\n-    );\n-    setSelectedAdvisor(advisor || null); // 设置选中的advisor id\n-    setShowTableView(false); // 切换到RelationComponent视图\n-  };\n-\n-  const returnToListView = () => {\n-    setShowTableView(true); // 切换到TableView视图\n-  };\n-\n-  return (\n-    <Paper\n-      sx={{ width: \"100%\", paddingLeft: 2, paddingRight: 2, paddingTop: 2 }}\n-    >\n-      <Toolbar\n-        sx={{\n-          display: \"flex\",\n-          justifyContent: \"space-between\",\n-          alignItems: \"center\",\n-          p: 0,\n-          width: \"100%\",\n-        }}\n-      >\n-        <Typography variant=\"h6\">Connected to {mainAdvisor.name}</Typography>\n-        <IconButton onClick={onClose} color=\"inherit\">\n-          <CloseIcon />\n-        </IconButton>\n-      </Toolbar>\n-      {showTableView ? (\n-        <TableView\n-          advisors={advisors}\n-          onClickConnection={handleClickConnection}\n-        />\n-      ) : (\n-        <RelationComponent\n-          main={mainAdvisor}\n-          second={selectedAdvisor}\n-          onBack={returnToListView}\n-        />\n-      )}\n-    </Paper>\n-  );\n-};\n-\n-export default ListView;\n"
        },
        {
          "date": 1708521910272,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,121 @@\n+import React, { useEffect, useRef, useState } from \"react\";\n+import RelationComponent from \"./relation\";\n+interface Advisor {\n+  _id: number;\n+  name: string;\n+  affiliation: string;\n+  homepage: string;\n+  twitter: string;\n+  github: string;\n+  email: string;\n+  position: string;\n+  connections: {\n+    _id: number;\n+\n+    relation: Array<{\n+      class: string;\n+      role: string;\n+      duration: {\n+        start: { year: number; month: number };\n+        end: { year: number; month: number };\n+      };\n+    }>;\n+    collaborations: Array<{\n+      papername: string;\n+      year: number;\n+      url: string;\n+    }>;\n+    latestCollaboration: number;\n+    relationFactor: number;\n+  }[];\n+}\n+const advisors: Advisor[] = require(\"../../../../data/advisors.json\");\n+\n+import {\n+  TableContainer,\n+  Table,\n+  TableHead,\n+  TableRow,\n+  TableCell,\n+  TableBody,\n+  Paper,\n+  IconButton,\n+  Typography,\n+  Toolbar,\n+  Box,\n+} from \"@mui/material\";\n+\n+import TableView from \"./table\";\n+import CloseIcon from \"@mui/icons-material/Close\";\n+\n+// find the connected advisors based on main advisor id\n+const findConnectedAdvisors = (mainAdvisorId: number) => {\n+  // find in main advisor's connections list\n+  const mainAdvisor = advisors.find(\n+    (advisor) => advisor?._id === mainAdvisorId\n+  );\n+  const connectedAdvisors = mainAdvisor?.connections.map((connection) => {\n+    return advisors.find(\n+      (advisor) => advisor?._id === connection._id\n+    );\n+  });\n+  return connectedAdvisors;\n+};\n+\n+// @ts-ignore\n+const ListView = ({ onClose, mainAdvisor }) => {\n+  const advisors = findConnectedAdvisors(mainAdvisor._id);\n+  const [showTableView, setShowTableView] = useState(true); // 控制显示哪个视图\n+  const [selectedAdvisor, setSelectedAdvisor] = useState<Advisor | null>(null); // 存储选中的advisor id\n+\n+  const handleClickConnection = (_id: number) => {\n+    // @ts-ignore\n+    const advisor = advisors.find(\n+      (advisor) => advisor?._id === _id\n+    );\n+    setSelectedAdvisor(advisor || null); // 设置选中的advisor id\n+    setShowTableView(false); // 切换到RelationComponent视图\n+  };\n+\n+  const returnToListView = () => {\n+    setShowTableView(true); // 切换到TableView视图\n+  };\n+\n+  return (\n+    <Paper\n+      sx={{ width: \"100%\", paddingLeft: 2, paddingRight: 2, paddingTop: 2 }}\n+    >\n+      <Toolbar\n+        sx={{\n+          display: \"flex\",\n+          justifyContent: \"space-between\",\n+          alignItems: \"center\",\n+          paddingLeft: 0,\n+          paddingRight: 0,\n+          width: \"120%\",\n+        }}\n+      >\n+        <Typography variant=\"h6\">Connected to {mainAdvisor.name}</Typography>\n+        {/* 使用Box组件作为flex占位符 */}\n+        <Box sx={{ flexGrow: 1 }} />\n+        <IconButton onClick={onClose} color=\"inherit\">\n+          <CloseIcon />\n+        </IconButton>\n+      </Toolbar>\n+      {showTableView ? (\n+        <TableView\n+          advisors={advisors}\n+          onClickConnection={handleClickConnection}\n+        />\n+      ) : (\n+        <RelationComponent\n+          main={mainAdvisor}\n+          second={selectedAdvisor}\n+          onBack={returnToListView}\n+        />\n+      )}\n+    </Paper>\n+  );\n+};\n+\n+export default ListView;\n"
        },
        {
          "date": 1708521917184,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -91,130 +91,8 @@\n           justifyContent: \"space-between\",\n           alignItems: \"center\",\n           paddingLeft: 0,\n           paddingRight: 0,\n-          width: \"120%\",\n-        }}\n-      >\n-        <Typography variant=\"h6\">Connected to {mainAdvisor.name}</Typography>\n-        {/* 使用Box组件作为flex占位符 */}\n-        <Box sx={{ flexGrow: 1 }} />\n-        <IconButton onClick={onClose} color=\"inherit\">\n-          <CloseIcon />\n-        </IconButton>\n-      </Toolbar>\n-      {showTableView ? (\n-        <TableView\n-          advisors={advisors}\n-          onClickConnection={handleClickConnection}\n-        />\n-      ) : (\n-        <RelationComponent\n-          main={mainAdvisor}\n-          second={selectedAdvisor}\n-          onBack={returnToListView}\n-        />\n-      )}\n-    </Paper>\n-  );\n-};\n-\n-export default ListView;\n-import React, { useEffect, useRef, useState } from \"react\";\n-import RelationComponent from \"./relation\";\n-interface Advisor {\n-  _id: number;\n-  name: string;\n-  affiliation: string;\n-  homepage: string;\n-  twitter: string;\n-  github: string;\n-  email: string;\n-  position: string;\n-  connections: {\n-    _id: number;\n-\n-    relation: Array<{\n-      class: string;\n-      role: string;\n-      duration: {\n-        start: { year: number; month: number };\n-        end: { year: number; month: number };\n-      };\n-    }>;\n-    collaborations: Array<{\n-      papername: string;\n-      year: number;\n-      url: string;\n-    }>;\n-    latestCollaboration: number;\n-    relationFactor: number;\n-  }[];\n-}\n-const advisors: Advisor[] = require(\"../../../../data/advisors.json\");\n-\n-import {\n-  TableContainer,\n-  Table,\n-  TableHead,\n-  TableRow,\n-  TableCell,\n-  TableBody,\n-  Paper,\n-  IconButton,\n-  Typography,\n-  Toolbar,\n-  Box,\n-} from \"@mui/material\";\n-\n-import TableView from \"./table\";\n-import CloseIcon from \"@mui/icons-material/Close\";\n-\n-// find the connected advisors based on main advisor id\n-const findConnectedAdvisors = (mainAdvisorId: number) => {\n-  // find in main advisor's connections list\n-  const mainAdvisor = advisors.find(\n-    (advisor) => advisor?._id === mainAdvisorId\n-  );\n-  const connectedAdvisors = mainAdvisor?.connections.map((connection) => {\n-    return advisors.find(\n-      (advisor) => advisor?._id === connection._id\n-    );\n-  });\n-  return connectedAdvisors;\n-};\n-\n-// @ts-ignore\n-const ListView = ({ onClose, mainAdvisor }) => {\n-  const advisors = findConnectedAdvisors(mainAdvisor._id);\n-  const [showTableView, setShowTableView] = useState(true); // 控制显示哪个视图\n-  const [selectedAdvisor, setSelectedAdvisor] = useState<Advisor | null>(null); // 存储选中的advisor id\n-\n-  const handleClickConnection = (_id: number) => {\n-    // @ts-ignore\n-    const advisor = advisors.find(\n-      (advisor) => advisor?._id === _id\n-    );\n-    setSelectedAdvisor(advisor || null); // 设置选中的advisor id\n-    setShowTableView(false); // 切换到RelationComponent视图\n-  };\n-\n-  const returnToListView = () => {\n-    setShowTableView(true); // 切换到TableView视图\n-  };\n-\n-  return (\n-    <Paper\n-      sx={{ width: \"100%\", paddingLeft: 2, paddingRight: 2, paddingTop: 2 }}\n-    >\n-      <Toolbar\n-        sx={{\n-          display: \"flex\",\n-          justifyContent: \"space-between\",\n-          alignItems: \"center\",\n-\n-          paddingLeft: 0,\n-          paddingRight: 0,\n           width: \"100%\",\n         }}\n       >\n         <Typography variant=\"h6\">Connected to {mainAdvisor.name}</Typography>\n"
        },
        {
          "date": 1708521926001,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,121 @@\n+import React, { useEffect, useRef, useState } from \"react\";\n+import RelationComponent from \"./relation\";\n+interface Advisor {\n+  _id: number;\n+  name: string;\n+  affiliation: string;\n+  homepage: string;\n+  twitter: string;\n+  github: string;\n+  email: string;\n+  position: string;\n+  connections: {\n+    _id: number;\n+\n+    relation: Array<{\n+      class: string;\n+      role: string;\n+      duration: {\n+        start: { year: number; month: number };\n+        end: { year: number; month: number };\n+      };\n+    }>;\n+    collaborations: Array<{\n+      papername: string;\n+      year: number;\n+      url: string;\n+    }>;\n+    latestCollaboration: number;\n+    relationFactor: number;\n+  }[];\n+}\n+const advisors: Advisor[] = require(\"../../../../data/advisors.json\");\n+\n+import {\n+  TableContainer,\n+  Table,\n+  TableHead,\n+  TableRow,\n+  TableCell,\n+  TableBody,\n+  Paper,\n+  IconButton,\n+  Typography,\n+  Toolbar,\n+  Box,\n+} from \"@mui/material\";\n+\n+import TableView from \"./table\";\n+import CloseIcon from \"@mui/icons-material/Close\";\n+\n+// find the connected advisors based on main advisor id\n+const findConnectedAdvisors = (mainAdvisorId: number) => {\n+  // find in main advisor's connections list\n+  const mainAdvisor = advisors.find(\n+    (advisor) => advisor?._id === mainAdvisorId\n+  );\n+  const connectedAdvisors = mainAdvisor?.connections.map((connection) => {\n+    return advisors.find(\n+      (advisor) => advisor?._id === connection._id\n+    );\n+  });\n+  return connectedAdvisors;\n+};\n+\n+// @ts-ignore\n+const ListView = ({ onClose, mainAdvisor }) => {\n+  const advisors = findConnectedAdvisors(mainAdvisor._id);\n+  const [showTableView, setShowTableView] = useState(true); // 控制显示哪个视图\n+  const [selectedAdvisor, setSelectedAdvisor] = useState<Advisor | null>(null); // 存储选中的advisor id\n+\n+  const handleClickConnection = (_id: number) => {\n+    // @ts-ignore\n+    const advisor = advisors.find(\n+      (advisor) => advisor?._id === _id\n+    );\n+    setSelectedAdvisor(advisor || null); // 设置选中的advisor id\n+    setShowTableView(false); // 切换到RelationComponent视图\n+  };\n+\n+  const returnToListView = () => {\n+    setShowTableView(true); // 切换到TableView视图\n+  };\n+\n+  return (\n+    <Paper\n+      sx={{ width: \"100%\", paddingLeft: 2, paddingRight: 2, paddingTop: 2 }}\n+    >\n+      <Toolbar\n+        sx={{\n+          display: \"flex\",\n+          justifyContent: \"space-between\",\n+          alignItems: \"center\",\n+          paddingLeft: 0,\n+          paddingRight: 0,\n+          width: \"102%\",\n+        }}\n+      >\n+        <Typography variant=\"h6\">Connected to {mainAdvisor.name}</Typography>\n+        {/* 使用Box组件作为flex占位符 */}\n+        <Box sx={{ flexGrow: 1 }} />\n+        <IconButton onClick={onClose} color=\"inherit\">\n+          <CloseIcon />\n+        </IconButton>\n+      </Toolbar>\n+      {showTableView ? (\n+        <TableView\n+          advisors={advisors}\n+          onClickConnection={handleClickConnection}\n+        />\n+      ) : (\n+        <RelationComponent\n+          main={mainAdvisor}\n+          second={selectedAdvisor}\n+          onBack={returnToListView}\n+        />\n+      )}\n+    </Paper>\n+  );\n+};\n+\n+export default ListView;\n"
        },
        {
          "date": 1708521933926,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,121 @@\n+import React, { useEffect, useRef, useState } from \"react\";\n+import RelationComponent from \"./relation\";\n+interface Advisor {\n+  _id: number;\n+  name: string;\n+  affiliation: string;\n+  homepage: string;\n+  twitter: string;\n+  github: string;\n+  email: string;\n+  position: string;\n+  connections: {\n+    _id: number;\n+\n+    relation: Array<{\n+      class: string;\n+      role: string;\n+      duration: {\n+        start: { year: number; month: number };\n+        end: { year: number; month: number };\n+      };\n+    }>;\n+    collaborations: Array<{\n+      papername: string;\n+      year: number;\n+      url: string;\n+    }>;\n+    latestCollaboration: number;\n+    relationFactor: number;\n+  }[];\n+}\n+const advisors: Advisor[] = require(\"../../../../data/advisors.json\");\n+\n+import {\n+  TableContainer,\n+  Table,\n+  TableHead,\n+  TableRow,\n+  TableCell,\n+  TableBody,\n+  Paper,\n+  IconButton,\n+  Typography,\n+  Toolbar,\n+  Box,\n+} from \"@mui/material\";\n+\n+import TableView from \"./table\";\n+import CloseIcon from \"@mui/icons-material/Close\";\n+\n+// find the connected advisors based on main advisor id\n+const findConnectedAdvisors = (mainAdvisorId: number) => {\n+  // find in main advisor's connections list\n+  const mainAdvisor = advisors.find(\n+    (advisor) => advisor?._id === mainAdvisorId\n+  );\n+  const connectedAdvisors = mainAdvisor?.connections.map((connection) => {\n+    return advisors.find(\n+      (advisor) => advisor?._id === connection._id\n+    );\n+  });\n+  return connectedAdvisors;\n+};\n+\n+// @ts-ignore\n+const ListView = ({ onClose, mainAdvisor }) => {\n+  const advisors = findConnectedAdvisors(mainAdvisor._id);\n+  const [showTableView, setShowTableView] = useState(true); // 控制显示哪个视图\n+  const [selectedAdvisor, setSelectedAdvisor] = useState<Advisor | null>(null); // 存储选中的advisor id\n+\n+  const handleClickConnection = (_id: number) => {\n+    // @ts-ignore\n+    const advisor = advisors.find(\n+      (advisor) => advisor?._id === _id\n+    );\n+    setSelectedAdvisor(advisor || null); // 设置选中的advisor id\n+    setShowTableView(false); // 切换到RelationComponent视图\n+  };\n+\n+  const returnToListView = () => {\n+    setShowTableView(true); // 切换到TableView视图\n+  };\n+\n+  return (\n+    <Paper\n+      sx={{ width: \"100%\", paddingLeft: 2, paddingRight: 2, paddingTop: 2 }}\n+    >\n+      <Toolbar\n+        sx={{\n+          display: \"flex\",\n+          justifyContent: \"space-between\",\n+          alignItems: \"center\",\n+          paddingLeft: 0,\n+          paddingRight: 0,\n+          width: \"100%\",\n+        }}\n+      >\n+        <Typography variant=\"h6\">Connected to {mainAdvisor.name}</Typography>\n+        {/* 使用Box组件作为flex占位符 */}\n+        <Box sx={{ flexGrow: 1 }} />\n+        <IconButton onClick={onClose} color=\"inherit\">\n+          <CloseIcon />\n+        </IconButton>\n+      </Toolbar>\n+      {showTableView ? (\n+        <TableView\n+          advisors={advisors}\n+          onClickConnection={handleClickConnection}\n+        />\n+      ) : (\n+        <RelationComponent\n+          main={mainAdvisor}\n+          second={selectedAdvisor}\n+          onBack={returnToListView}\n+        />\n+      )}\n+    </Paper>\n+  );\n+};\n+\n+export default ListView;\n"
        },
        {
          "date": 1708521945612,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,121 @@\n+import React, { useEffect, useRef, useState } from \"react\";\n+import RelationComponent from \"./relation\";\n+interface Advisor {\n+  _id: number;\n+  name: string;\n+  affiliation: string;\n+  homepage: string;\n+  twitter: string;\n+  github: string;\n+  email: string;\n+  position: string;\n+  connections: {\n+    _id: number;\n+\n+    relation: Array<{\n+      class: string;\n+      role: string;\n+      duration: {\n+        start: { year: number; month: number };\n+        end: { year: number; month: number };\n+      };\n+    }>;\n+    collaborations: Array<{\n+      papername: string;\n+      year: number;\n+      url: string;\n+    }>;\n+    latestCollaboration: number;\n+    relationFactor: number;\n+  }[];\n+}\n+const advisors: Advisor[] = require(\"../../../../data/advisors.json\");\n+\n+import {\n+  TableContainer,\n+  Table,\n+  TableHead,\n+  TableRow,\n+  TableCell,\n+  TableBody,\n+  Paper,\n+  IconButton,\n+  Typography,\n+  Toolbar,\n+  Box,\n+} from \"@mui/material\";\n+\n+import TableView from \"./table\";\n+import CloseIcon from \"@mui/icons-material/Close\";\n+\n+// find the connected advisors based on main advisor id\n+const findConnectedAdvisors = (mainAdvisorId: number) => {\n+  // find in main advisor's connections list\n+  const mainAdvisor = advisors.find(\n+    (advisor) => advisor?._id === mainAdvisorId\n+  );\n+  const connectedAdvisors = mainAdvisor?.connections.map((connection) => {\n+    return advisors.find(\n+      (advisor) => advisor?._id === connection._id\n+    );\n+  });\n+  return connectedAdvisors;\n+};\n+\n+// @ts-ignore\n+const ListView = ({ onClose, mainAdvisor }) => {\n+  const advisors = findConnectedAdvisors(mainAdvisor._id);\n+  const [showTableView, setShowTableView] = useState(true); // 控制显示哪个视图\n+  const [selectedAdvisor, setSelectedAdvisor] = useState<Advisor | null>(null); // 存储选中的advisor id\n+\n+  const handleClickConnection = (_id: number) => {\n+    // @ts-ignore\n+    const advisor = advisors.find(\n+      (advisor) => advisor?._id === _id\n+    );\n+    setSelectedAdvisor(advisor || null); // 设置选中的advisor id\n+    setShowTableView(false); // 切换到RelationComponent视图\n+  };\n+\n+  const returnToListView = () => {\n+    setShowTableView(true); // 切换到TableView视图\n+  };\n+\n+  return (\n+    <Paper\n+      sx={{ width: \"100%\", paddingLeft: 2, paddingRight: 2, paddingTop: 2 }}\n+    >\n+      <Toolbar\n+        sx={{\n+          display: \"flex\",\n+          justifyContent: \"space-between\",\n+          alignItems: \"center\",\n+          paddingLeft: 0,\n+          paddingRight: 0,\n+          width: \"100%\",\n+        }}\n+      >\n+        <Typography variant=\"h6\">Connected to {mainAdvisor.name}</Typography>\n+        {/* 使用Box组件作为flex占位符 */}\n+        <Box sx={{ flexGrow: 1 }} />\n+        <IconButton onClick={onClose} color=\"inherit\">\n+          <CloseIcon />\n+        </IconButton>\n+      </Toolbar>\n+      {showTableView ? (\n+        <TableView\n+          advisors={advisors}\n+          onClickConnection={handleClickConnection}\n+        />\n+      ) : (\n+        <RelationComponent\n+          main={mainAdvisor}\n+          second={selectedAdvisor}\n+          onBack={returnToListView}\n+        />\n+      )}\n+    </Paper>\n+  );\n+};\n+\n+export default ListView;\n"
        },
        {
          "date": 1708521999164,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,25 +84,24 @@\n   return (\n     <Paper\n       sx={{ width: \"100%\", paddingLeft: 2, paddingRight: 2, paddingTop: 2 }}\n     >\n-      <Toolbar\n-        sx={{\n+      <div style={\n           display: \"flex\",\n           justifyContent: \"space-between\",\n           alignItems: \"center\",\n           paddingLeft: 0,\n           paddingRight: 0,\n           width: \"100%\",\n-        }}\n+        }\n       >\n         <Typography variant=\"h6\">Connected to {mainAdvisor.name}</Typography>\n         {/* 使用Box组件作为flex占位符 */}\n         <Box sx={{ flexGrow: 1 }} />\n         <IconButton onClick={onClose} color=\"inherit\">\n           <CloseIcon />\n         </IconButton>\n-      </Toolbar>\n+      </T>\n       {showTableView ? (\n         <TableView\n           advisors={advisors}\n           onClickConnection={handleClickConnection}\n"
        },
        {
          "date": 1708522011667,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -99,9 +99,9 @@\n         <Box sx={{ flexGrow: 1 }} />\n         <IconButton onClick={onClose} color=\"inherit\">\n           <CloseIcon />\n         </IconButton>\n-      </T>\n+      <div/>\n       {showTableView ? (\n         <TableView\n           advisors={advisors}\n           onClickConnection={handleClickConnection}\n@@ -117,367 +117,4 @@\n   );\n };\n \n export default ListView;\n-import React, { useEffect, useRef, useState } from \"react\";\n-import RelationComponent from \"./relation\";\n-interface Advisor {\n-  _id: number;\n-  name: string;\n-  affiliation: string;\n-  homepage: string;\n-  twitter: string;\n-  github: string;\n-  email: string;\n-  position: string;\n-  connections: {\n-    _id: number;\n-\n-    relation: Array<{\n-      class: string;\n-      role: string;\n-      duration: {\n-        start: { year: number; month: number };\n-        end: { year: number; month: number };\n-      };\n-    }>;\n-    collaborations: Array<{\n-      papername: string;\n-      year: number;\n-      url: string;\n-    }>;\n-    latestCollaboration: number;\n-    relationFactor: number;\n-  }[];\n-}\n-const advisors: Advisor[] = require(\"../../../../data/advisors.json\");\n-\n-import {\n-  TableContainer,\n-  Table,\n-  TableHead,\n-  TableRow,\n-  TableCell,\n-  TableBody,\n-  Paper,\n-  IconButton,\n-  Typography,\n-  Toolbar,\n-  Box,\n-} from \"@mui/material\";\n-\n-import TableView from \"./table\";\n-import CloseIcon from \"@mui/icons-material/Close\";\n-\n-// find the connected advisors based on main advisor id\n-const findConnectedAdvisors = (mainAdvisorId: number) => {\n-  // find in main advisor's connections list\n-  const mainAdvisor = advisors.find(\n-    (advisor) => advisor?._id === mainAdvisorId\n-  );\n-  const connectedAdvisors = mainAdvisor?.connections.map((connection) => {\n-    return advisors.find(\n-      (advisor) => advisor?._id === connection._id\n-    );\n-  });\n-  return connectedAdvisors;\n-};\n-\n-// @ts-ignore\n-const ListView = ({ onClose, mainAdvisor }) => {\n-  const advisors = findConnectedAdvisors(mainAdvisor._id);\n-  const [showTableView, setShowTableView] = useState(true); // 控制显示哪个视图\n-  const [selectedAdvisor, setSelectedAdvisor] = useState<Advisor | null>(null); // 存储选中的advisor id\n-\n-  const handleClickConnection = (_id: number) => {\n-    // @ts-ignore\n-    const advisor = advisors.find(\n-      (advisor) => advisor?._id === _id\n-    );\n-    setSelectedAdvisor(advisor || null); // 设置选中的advisor id\n-    setShowTableView(false); // 切换到RelationComponent视图\n-  };\n-\n-  const returnToListView = () => {\n-    setShowTableView(true); // 切换到TableView视图\n-  };\n-\n-  return (\n-    <Paper\n-      sx={{ width: \"100%\", paddingLeft: 2, paddingRight: 2, paddingTop: 2 }}\n-    >\n-      <Toolbar\n-        sx={{\n-          display: \"flex\",\n-          justifyContent: \"space-between\",\n-          alignItems: \"center\",\n-          paddingLeft: 0,\n-          paddingRight: 0,\n-          width: \"100%\",\n-        }}\n-      >\n-        <Typography variant=\"h6\">Connected to {mainAdvisor.name}</Typography>\n-        {/* 使用Box组件作为flex占位符 */}\n-        <Box sx={{ flexGrow: 1 }} />\n-        <IconButton onClick={onClose} color=\"inherit\">\n-          <CloseIcon />\n-        </IconButton>\n-      </Toolbar>\n-      {showTableView ? (\n-        <TableView\n-          advisors={advisors}\n-          onClickConnection={handleClickConnection}\n-        />\n-      ) : (\n-        <RelationComponent\n-          main={mainAdvisor}\n-          second={selectedAdvisor}\n-          onBack={returnToListView}\n-        />\n-      )}\n-    </Paper>\n-  );\n-};\n-\n-export default ListView;\n-import React, { useEffect, useRef, useState } from \"react\";\n-import RelationComponent from \"./relation\";\n-interface Advisor {\n-  _id: number;\n-  name: string;\n-  affiliation: string;\n-  homepage: string;\n-  twitter: string;\n-  github: string;\n-  email: string;\n-  position: string;\n-  connections: {\n-    _id: number;\n-\n-    relation: Array<{\n-      class: string;\n-      role: string;\n-      duration: {\n-        start: { year: number; month: number };\n-        end: { year: number; month: number };\n-      };\n-    }>;\n-    collaborations: Array<{\n-      papername: string;\n-      year: number;\n-      url: string;\n-    }>;\n-    latestCollaboration: number;\n-    relationFactor: number;\n-  }[];\n-}\n-const advisors: Advisor[] = require(\"../../../../data/advisors.json\");\n-\n-import {\n-  TableContainer,\n-  Table,\n-  TableHead,\n-  TableRow,\n-  TableCell,\n-  TableBody,\n-  Paper,\n-  IconButton,\n-  Typography,\n-  Toolbar,\n-  Box,\n-} from \"@mui/material\";\n-\n-import TableView from \"./table\";\n-import CloseIcon from \"@mui/icons-material/Close\";\n-\n-// find the connected advisors based on main advisor id\n-const findConnectedAdvisors = (mainAdvisorId: number) => {\n-  // find in main advisor's connections list\n-  const mainAdvisor = advisors.find(\n-    (advisor) => advisor?._id === mainAdvisorId\n-  );\n-  const connectedAdvisors = mainAdvisor?.connections.map((connection) => {\n-    return advisors.find(\n-      (advisor) => advisor?._id === connection._id\n-    );\n-  });\n-  return connectedAdvisors;\n-};\n-\n-// @ts-ignore\n-const ListView = ({ onClose, mainAdvisor }) => {\n-  const advisors = findConnectedAdvisors(mainAdvisor._id);\n-  const [showTableView, setShowTableView] = useState(true); // 控制显示哪个视图\n-  const [selectedAdvisor, setSelectedAdvisor] = useState<Advisor | null>(null); // 存储选中的advisor id\n-\n-  const handleClickConnection = (_id: number) => {\n-    // @ts-ignore\n-    const advisor = advisors.find(\n-      (advisor) => advisor?._id === _id\n-    );\n-    setSelectedAdvisor(advisor || null); // 设置选中的advisor id\n-    setShowTableView(false); // 切换到RelationComponent视图\n-  };\n-\n-  const returnToListView = () => {\n-    setShowTableView(true); // 切换到TableView视图\n-  };\n-\n-  return (\n-    <Paper\n-      sx={{ width: \"100%\", paddingLeft: 2, paddingRight: 2, paddingTop: 2 }}\n-    >\n-      <Toolbar\n-        sx={{\n-          display: \"flex\",\n-          justifyContent: \"space-between\",\n-          alignItems: \"center\",\n-          paddingLeft: 0,\n-          paddingRight: 0,\n-          width: \"102%\",\n-        }}\n-      >\n-        <Typography variant=\"h6\">Connected to {mainAdvisor.name}</Typography>\n-        {/* 使用Box组件作为flex占位符 */}\n-        <Box sx={{ flexGrow: 1 }} />\n-        <IconButton onClick={onClose} color=\"inherit\">\n-          <CloseIcon />\n-        </IconButton>\n-      </Toolbar>\n-      {showTableView ? (\n-        <TableView\n-          advisors={advisors}\n-          onClickConnection={handleClickConnection}\n-        />\n-      ) : (\n-        <RelationComponent\n-          main={mainAdvisor}\n-          second={selectedAdvisor}\n-          onBack={returnToListView}\n-        />\n-      )}\n-    </Paper>\n-  );\n-};\n-\n-export default ListView;\n-import React, { useEffect, useRef, useState } from \"react\";\n-import RelationComponent from \"./relation\";\n-interface Advisor {\n-  _id: number;\n-  name: string;\n-  affiliation: string;\n-  homepage: string;\n-  twitter: string;\n-  github: string;\n-  email: string;\n-  position: string;\n-  connections: {\n-    _id: number;\n-\n-    relation: Array<{\n-      class: string;\n-      role: string;\n-      duration: {\n-        start: { year: number; month: number };\n-        end: { year: number; month: number };\n-      };\n-    }>;\n-    collaborations: Array<{\n-      papername: string;\n-      year: number;\n-      url: string;\n-    }>;\n-    latestCollaboration: number;\n-    relationFactor: number;\n-  }[];\n-}\n-const advisors: Advisor[] = require(\"../../../../data/advisors.json\");\n-\n-import {\n-  TableContainer,\n-  Table,\n-  TableHead,\n-  TableRow,\n-  TableCell,\n-  TableBody,\n-  Paper,\n-  IconButton,\n-  Typography,\n-  Toolbar,\n-  Box,\n-} from \"@mui/material\";\n-\n-import TableView from \"./table\";\n-import CloseIcon from \"@mui/icons-material/Close\";\n-\n-// find the connected advisors based on main advisor id\n-const findConnectedAdvisors = (mainAdvisorId: number) => {\n-  // find in main advisor's connections list\n-  const mainAdvisor = advisors.find(\n-    (advisor) => advisor?._id === mainAdvisorId\n-  );\n-  const connectedAdvisors = mainAdvisor?.connections.map((connection) => {\n-    return advisors.find(\n-      (advisor) => advisor?._id === connection._id\n-    );\n-  });\n-  return connectedAdvisors;\n-};\n-\n-// @ts-ignore\n-const ListView = ({ onClose, mainAdvisor }) => {\n-  const advisors = findConnectedAdvisors(mainAdvisor._id);\n-  const [showTableView, setShowTableView] = useState(true); // 控制显示哪个视图\n-  const [selectedAdvisor, setSelectedAdvisor] = useState<Advisor | null>(null); // 存储选中的advisor id\n-\n-  const handleClickConnection = (_id: number) => {\n-    // @ts-ignore\n-    const advisor = advisors.find(\n-      (advisor) => advisor?._id === _id\n-    );\n-    setSelectedAdvisor(advisor || null); // 设置选中的advisor id\n-    setShowTableView(false); // 切换到RelationComponent视图\n-  };\n-\n-  const returnToListView = () => {\n-    setShowTableView(true); // 切换到TableView视图\n-  };\n-\n-  return (\n-    <Paper\n-      sx={{ width: \"100%\", paddingLeft: 2, paddingRight: 2, paddingTop: 2 }}\n-    >\n-      <Toolbar\n-        sx={{\n-          display: \"flex\",\n-          justifyContent: \"space-between\",\n-          alignItems: \"center\",\n-          paddingLeft: 0,\n-          paddingRight: 0,\n-          width: \"100%\",\n-        }}\n-      >\n-        <Typography variant=\"h6\">Connected to {mainAdvisor.name}</Typography>\n-        {/* 使用Box组件作为flex占位符 */}\n-        <Box sx={{ flexGrow: 1 }} />\n-        <IconButton onClick={onClose} color=\"inherit\">\n-          <CloseIcon />\n-        </IconButton>\n-      </Toolbar>\n-      {showTableView ? (\n-        <TableView\n-          advisors={advisors}\n-          onClickConnection={handleClickConnection}\n-        />\n-      ) : (\n-        <RelationComponent\n-          main={mainAdvisor}\n-          second={selectedAdvisor}\n-          onBack={returnToListView}\n-        />\n-      )}\n-    </Paper>\n-  );\n-};\n-\n-export default ListView;\n"
        },
        {
          "date": 1708522027981,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,17 +84,10 @@\n   return (\n     <Paper\n       sx={{ width: \"100%\", paddingLeft: 2, paddingRight: 2, paddingTop: 2 }}\n     >\n-      <div style={\n-          display: \"flex\",\n-          justifyContent: \"space-between\",\n-          alignItems: \"center\",\n-          paddingLeft: 0,\n-          paddingRight: 0,\n-          width: \"100%\",\n-        }\n-      >\n+      <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n+\n         <Typography variant=\"h6\">Connected to {mainAdvisor.name}</Typography>\n         {/* 使用Box组件作为flex占位符 */}\n         <Box sx={{ flexGrow: 1 }} />\n         <IconButton onClick={onClose} color=\"inherit\">\n"
        },
        {
          "date": 1708522038959,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -85,16 +85,15 @@\n     <Paper\n       sx={{ width: \"100%\", paddingLeft: 2, paddingRight: 2, paddingTop: 2 }}\n     >\n       <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n-\n         <Typography variant=\"h6\">Connected to {mainAdvisor.name}</Typography>\n         {/* 使用Box组件作为flex占位符 */}\n         <Box sx={{ flexGrow: 1 }} />\n         <IconButton onClick={onClose} color=\"inherit\">\n           <CloseIcon />\n         </IconButton>\n-      <div/>\n+      </div>\n       {showTableView ? (\n         <TableView\n           advisors={advisors}\n           onClickConnection={handleClickConnection}\n"
        },
        {
          "date": 1708522064886,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,118 @@\n+import React, { useEffect, useRef, useState } from \"react\";\n+import RelationComponent from \"./relation\";\n+interface Advisor {\n+  _id: number;\n+  name: string;\n+  affiliation: string;\n+  homepage: string;\n+  twitter: string;\n+  github: string;\n+  email: string;\n+  position: string;\n+  connections: {\n+    _id: number;\n+\n+    relation: Array<{\n+      class: string;\n+      role: string;\n+      duration: {\n+        start: { year: number; month: number };\n+        end: { year: number; month: number };\n+      };\n+    }>;\n+    collaborations: Array<{\n+      papername: string;\n+      year: number;\n+      url: string;\n+    }>;\n+    latestCollaboration: number;\n+    relationFactor: number;\n+  }[];\n+}\n+const advisors: Advisor[] = require(\"../../../../data/advisors.json\");\n+\n+import {\n+  TableContainer,\n+  Table,\n+  TableHead,\n+  TableRow,\n+  TableCell,\n+  TableBody,\n+  Paper,\n+  IconButton,\n+  Typography,\n+  Toolbar,\n+  Box,\n+} from \"@mui/material\";\n+\n+import TableView from \"./table\";\n+import CloseIcon from \"@mui/icons-material/Close\";\n+\n+// find the connected advisors based on main advisor id\n+const findConnectedAdvisors = (mainAdvisorId: number) => {\n+  // find in main advisor's connections list\n+  const mainAdvisor = advisors.find(\n+    (advisor) => advisor?._id === mainAdvisorId\n+  );\n+  const connectedAdvisors = mainAdvisor?.connections.map((connection) => {\n+    return advisors.find(\n+      (advisor) => advisor?._id === connection._id\n+    );\n+  });\n+  return connectedAdvisors;\n+};\n+\n+// @ts-ignore\n+const ListView = ({ onClose, mainAdvisor }) => {\n+  const advisors = findConnectedAdvisors(mainAdvisor._id);\n+  const [showTableView, setShowTableView] = useState(true); // 控制显示哪个视图\n+  const [selectedAdvisor, setSelectedAdvisor] = useState<Advisor | null>(null); // 存储选中的advisor id\n+\n+  const handleClickConnection = (_id: number) => {\n+    // @ts-ignore\n+    const advisor = advisors.find(\n+      (advisor) => advisor?._id === _id\n+    );\n+    setSelectedAdvisor(advisor || null); // 设置选中的advisor id\n+    setShowTableView(false); // 切换到RelationComponent视图\n+  };\n+\n+  const returnToListView = () => {\n+    setShowTableView(true); // 切换到TableView视图\n+  };\n+\n+  return (\n+    <Paper\n+      sx={{ width: \"100%\", paddingLeft: 2, paddingRight: 2, paddingTop: 2 }}\n+    >\n+      <div\n+        style={{\n+          display: \"flex\",\n+          justifyContent: \"space-between\",\n+          marginBottom: 2,\n+        }}\n+      >\n+        <Typography variant=\"h6\">Connected to {mainAdvisor.name}</Typography>\n+        {/* 使用Box组件作为flex占位符 */}\n+        <Box sx={{ flexGrow: 1 }} />\n+        <IconButton onClick={onClose} color=\"inherit\">\n+          <CloseIcon />\n+        </IconButton>\n+      </div>\n+      {showTableView ? (\n+        <TableView\n+          advisors={advisors}\n+          onClickConnection={handleClickConnection}\n+        />\n+      ) : (\n+        <RelationComponent\n+          main={mainAdvisor}\n+          second={selectedAdvisor}\n+          onBack={returnToListView}\n+        />\n+      )}\n+    </Paper>\n+  );\n+};\n+\n+export default ListView;\n"
        },
        {
          "date": 1708522071922,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -88,9 +88,9 @@\n       <div\n         style={{\n           display: \"flex\",\n           justifyContent: \"space-between\",\n-          marginBottom: 2,\n+          marginBottom: 20,\n         }}\n       >\n         <Typography variant=\"h6\">Connected to {mainAdvisor.name}</Typography>\n         {/* 使用Box组件作为flex占位符 */}\n@@ -115,116 +115,4 @@\n   );\n };\n \n export default ListView;\n-import React, { useEffect, useRef, useState } from \"react\";\n-import RelationComponent from \"./relation\";\n-interface Advisor {\n-  _id: number;\n-  name: string;\n-  affiliation: string;\n-  homepage: string;\n-  twitter: string;\n-  github: string;\n-  email: string;\n-  position: string;\n-  connections: {\n-    _id: number;\n-\n-    relation: Array<{\n-      class: string;\n-      role: string;\n-      duration: {\n-        start: { year: number; month: number };\n-        end: { year: number; month: number };\n-      };\n-    }>;\n-    collaborations: Array<{\n-      papername: string;\n-      year: number;\n-      url: string;\n-    }>;\n-    latestCollaboration: number;\n-    relationFactor: number;\n-  }[];\n-}\n-const advisors: Advisor[] = require(\"../../../../data/advisors.json\");\n-\n-import {\n-  TableContainer,\n-  Table,\n-  TableHead,\n-  TableRow,\n-  TableCell,\n-  TableBody,\n-  Paper,\n-  IconButton,\n-  Typography,\n-  Toolbar,\n-  Box,\n-} from \"@mui/material\";\n-\n-import TableView from \"./table\";\n-import CloseIcon from \"@mui/icons-material/Close\";\n-\n-// find the connected advisors based on main advisor id\n-const findConnectedAdvisors = (mainAdvisorId: number) => {\n-  // find in main advisor's connections list\n-  const mainAdvisor = advisors.find(\n-    (advisor) => advisor?._id === mainAdvisorId\n-  );\n-  const connectedAdvisors = mainAdvisor?.connections.map((connection) => {\n-    return advisors.find(\n-      (advisor) => advisor?._id === connection._id\n-    );\n-  });\n-  return connectedAdvisors;\n-};\n-\n-// @ts-ignore\n-const ListView = ({ onClose, mainAdvisor }) => {\n-  const advisors = findConnectedAdvisors(mainAdvisor._id);\n-  const [showTableView, setShowTableView] = useState(true); // 控制显示哪个视图\n-  const [selectedAdvisor, setSelectedAdvisor] = useState<Advisor | null>(null); // 存储选中的advisor id\n-\n-  const handleClickConnection = (_id: number) => {\n-    // @ts-ignore\n-    const advisor = advisors.find(\n-      (advisor) => advisor?._id === _id\n-    );\n-    setSelectedAdvisor(advisor || null); // 设置选中的advisor id\n-    setShowTableView(false); // 切换到RelationComponent视图\n-  };\n-\n-  const returnToListView = () => {\n-    setShowTableView(true); // 切换到TableView视图\n-  };\n-\n-  return (\n-    <Paper\n-      sx={{ width: \"100%\", paddingLeft: 2, paddingRight: 2, paddingTop: 2 }}\n-    >\n-      <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n-        <Typography variant=\"h6\">Connected to {mainAdvisor.name}</Typography>\n-        {/* 使用Box组件作为flex占位符 */}\n-        <Box sx={{ flexGrow: 1 }} />\n-        <IconButton onClick={onClose} color=\"inherit\">\n-          <CloseIcon />\n-        </IconButton>\n-      </div>\n-      {showTableView ? (\n-        <TableView\n-          advisors={advisors}\n-          onClickConnection={handleClickConnection}\n-        />\n-      ) : (\n-        <RelationComponent\n-          main={mainAdvisor}\n-          second={selectedAdvisor}\n-          onBack={returnToListView}\n-        />\n-      )}\n-    </Paper>\n-  );\n-};\n-\n-export default ListView;\n"
        },
        {
          "date": 1708522274110,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,14 +31,9 @@\n }\n const advisors: Advisor[] = require(\"../../../../data/advisors.json\");\n \n import {\n-  TableContainer,\n-  Table,\n-  TableHead,\n-  TableRow,\n-  TableCell,\n-  TableBody,\n+  Tooltip,\n   Paper,\n   IconButton,\n   Typography,\n   Toolbar,\n"
        },
        {
          "date": 1708522287324,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -89,11 +89,13 @@\n       >\n         <Typography variant=\"h6\">Connected to {mainAdvisor.name}</Typography>\n         {/* 使用Box组件作为flex占位符 */}\n         <Box sx={{ flexGrow: 1 }} />\n-        <IconButton onClick={onClose} color=\"inherit\">\n-          <CloseIcon />\n-        </IconButton>\n+        <Tooltip title=\"Close\">\n+          <IconButton onClick={onClose} color=\"inherit\">\n+            <CloseIcon />\n+          </IconButton>\n+        </Tooltip>\n       </div>\n       {showTableView ? (\n         <TableView\n           advisors={advisors}\n"
        },
        {
          "date": 1708522299528,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -89,9 +89,9 @@\n       >\n         <Typography variant=\"h6\">Connected to {mainAdvisor.name}</Typography>\n         {/* 使用Box组件作为flex占位符 */}\n         <Box sx={{ flexGrow: 1 }} />\n-        <Tooltip title=\"Close\">\n+        <Tooltip title=\"Close List View\">\n           <IconButton onClick={onClose} color=\"inherit\">\n             <CloseIcon />\n           </IconButton>\n         </Tooltip>\n"
        },
        {
          "date": 1708522323512,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -89,13 +89,12 @@\n       >\n         <Typography variant=\"h6\">Connected to {mainAdvisor.name}</Typography>\n         {/* 使用Box组件作为flex占位符 */}\n         <Box sx={{ flexGrow: 1 }} />\n-        <Tooltip title=\"Close List View\">\n-          <IconButton onClick={onClose} color=\"inherit\">\n-            <CloseIcon />\n-          </IconButton>\n-        </Tooltip>\n+\n+        <IconButton onClick={onClose} color=\"inherit\">\n+          <CloseIcon />\n+        </IconButton>\n       </div>\n       {showTableView ? (\n         <TableView\n           advisors={advisors}\n"
        },
        {
          "date": 1708522349966,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -89,12 +89,13 @@\n       >\n         <Typography variant=\"h6\">Connected to {mainAdvisor.name}</Typography>\n         {/* 使用Box组件作为flex占位符 */}\n         <Box sx={{ flexGrow: 1 }} />\n-\n+        <Tooltip title=\"Close\">\n         <IconButton onClick={onClose} color=\"inherit\">\n           <CloseIcon />\n         </IconButton>\n+        </Tooltip\n       </div>\n       {showTableView ? (\n         <TableView\n           advisors={advisors}\n"
        },
        {
          "date": 1708522356618,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -90,12 +90,12 @@\n         <Typography variant=\"h6\">Connected to {mainAdvisor.name}</Typography>\n         {/* 使用Box组件作为flex占位符 */}\n         <Box sx={{ flexGrow: 1 }} />\n         <Tooltip title=\"Close\">\n-        <IconButton onClick={onClose} color=\"inherit\">\n-          <CloseIcon />\n-        </IconButton>\n-        </Tooltip\n+          <IconButton onClick={onClose} color=\"inherit\">\n+            <CloseIcon />\n+          </IconButton>\n+        </Tooltip>\n       </div>\n       {showTableView ? (\n         <TableView\n           advisors={advisors}\n"
        },
        {
          "date": 1708522367378,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -89,9 +89,9 @@\n       >\n         <Typography variant=\"h6\">Connected to {mainAdvisor.name}</Typography>\n         {/* 使用Box组件作为flex占位符 */}\n         <Box sx={{ flexGrow: 1 }} />\n-        <Tooltip title=\"Close\">\n+        <Tooltip title=\"Close List View\">\n           <IconButton onClick={onClose} color=\"inherit\">\n             <CloseIcon />\n           </IconButton>\n         </Tooltip>\n"
        },
        {
          "date": 1708522943903,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n interface Advisor {\n   _id: number;\n   name: string;\n   affiliation: string;\n-  homepage: string;\n+  homepage: string;\n   twitter: string;\n   github: string;\n   email: string;\n   position: string;\n"
        },
        {
          "date": 1711874353546,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,10 +15,10 @@\n     relation: Array<{\n       class: string;\n       role: string;\n       duration: {\n-        start: { year: number; month: number };\n-        end: { year: number; month: number };\n+        start: number\n+        end: number\n       };\n     }>;\n     collaborations: Array<{\n       papername: string;\n"
        },
        {
          "date": 1713754554383,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,8 +58,9 @@\n };\n \n // @ts-ignore\n const ListView = ({ onClose, mainAdvisor }) => {\n+  console.log(\"mainAdvisor\", mainAdvisor);\n   const advisors = findConnectedAdvisors(mainAdvisor._id);\n   const [showTableView, setShowTableView] = useState(true); // 控制显示哪个视图\n   const [selectedAdvisor, setSelectedAdvisor] = useState<Advisor | null>(null); // 存储选中的advisor id\n \n"
        },
        {
          "date": 1713755289043,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,10 +15,10 @@\n     relation: Array<{\n       class: string;\n       role: string;\n       duration: {\n-        start: number\n-        end: number\n+        start: number;\n+        end: number;\n       };\n     }>;\n     collaborations: Array<{\n       papername: string;\n"
        },
        {
          "date": 1713755317129,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,9 +59,9 @@\n \n // @ts-ignore\n const ListView = ({ onClose, mainAdvisor }) => {\n   console.log(\"mainAdvisor\", mainAdvisor);\n-  const advisors = findConnectedAdvisors(mainAdvisor._id);\n+  const advisors = findConnectedAdvisors(mainAdvisor);\n   const [showTableView, setShowTableView] = useState(true); // 控制显示哪个视图\n   const [selectedAdvisor, setSelectedAdvisor] = useState<Advisor | null>(null); // 存储选中的advisor id\n \n   const handleClickConnection = (_id: number) => {\n"
        },
        {
          "date": 1713755364561,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,17 +45,9 @@\n \n // find the connected advisors based on main advisor id\n const findConnectedAdvisors = (mainAdvisorId: number) => {\n   // find in main advisor's connections list\n-  const mainAdvisor = advisors.find(\n-    (advisor) => advisor?._id === mainAdvisorId\n-  );\n-  const connectedAdvisors = mainAdvisor?.connections.map((connection) => {\n-    return advisors.find(\n-      (advisor) => advisor?._id === connection._id\n-    );\n-  });\n-  return connectedAdvisors;\n+  const connected_ids = [mainAdvisorId.connections.map((conn) => conn._id)];\n };\n \n // @ts-ignore\n const ListView = ({ onClose, mainAdvisor }) => {\n"
        },
        {
          "date": 1713755436414,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,14 +41,35 @@\n } from \"@mui/material\";\n \n import TableView from \"./table\";\n import CloseIcon from \"@mui/icons-material/Close\";\n+import { Interface } from \"readline\";\n \n+interface Connection {\n+  _id: number;\n+  relation: Array<{\n+    class: string;\n+    role: string;\n+    duration: {\n+      start: number;\n+      end: number;\n+    };\n+  }>;\n+  collaborations: Array<{\n+    papername: string;\n+    year: number;\n+    url: string;\n+  }>;\n+  latestCollaboration: number;\n+  relationFactor: number;\n+\n+}\n+\n // find the connected advisors based on main advisor id\n const findConnectedAdvisors = (mainAdvisorId: number) => {\n   // find in main advisor's connections list\n   const connected_ids = [\n-    mainAdvisorId.connections.map((conn) => conn._id),\n+    mainAdvisorId.connections.map((conn: object) => conn._id),\n   ];\n };\n \n // @ts-ignore\n"
        },
        {
          "date": 1713755445226,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,9 +66,9 @@\n // find the connected advisors based on main advisor id\n const findConnectedAdvisors = (mainAdvisorId: number) => {\n   // find in main advisor's connections list\n   const connected_ids = [\n-    mainAdvisorId.connections.map((conn: object) => conn._id),\n+    mainAdvisorId.connections.map((conn: Connection) => conn._id),\n   ];\n };\n \n // @ts-ignore\n"
        }
      ],
      "date": 1708503665020,
      "name": "Commit-0",
      "content": "import React, { useEffect, useRef, useState } from \"react\";\ninterface Advisor {\n  _id: number;\n  name: string;\n  connections: {\n    _id: number;\n    relation: Array<{\n      class: string;\n      role: string;\n      duration: {\n        start: { year: number; month: number };\n        end: { year: number; month: number };\n      };\n    }>;\n    collaborations: Array<{\n      papername: string;\n      year: number;\n      url: string;\n    }>;\n    latestCollaboration: number;\n    relationFactor: number;\n  }[];\n}\nconst advisors: Advisor[] = require(\"../../../data/advisors.json\");\n"
    }
  ]
}
