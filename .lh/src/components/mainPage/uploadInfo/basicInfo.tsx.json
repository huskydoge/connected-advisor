{
    "sourceFile": "src/components/mainPage/uploadInfo/basicInfo.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 4,
            "patches": [
                {
                    "date": 1711697576143,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1711697590011,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n import AddIcon from \"@mui/icons-material/Add\";\n import ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\n import Autocomplete from \"@mui/material/Autocomplete\";\n \n-const basicInfo = () => {\n+const BasicInfo = () => {\n   const [formData, setFormData] = useState({\n     name: \"\",\n     picture: \"\",\n     position: \"\",\n@@ -313,5 +313,5 @@\n     </Box>\n   );\n };\n \n-export default UploadCard;\n+export default BasicInfo;\n"
                },
                {
                    "date": 1711697625729,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -98,13 +98,9 @@\n     console.log(formData);\n   };\n \n   return (\n-    <Box\n-      component=\"form\"\n-      onSubmit={handleSubmit}\n-      sx={{ position: \"relative\", width: \"100%\", mt: 2 }}\n-    >\n+\n       <CardContent>\n         <Typography variant=\"h6\" gutterBottom>\n           Upload New Advisor\n         </Typography>\n@@ -307,9 +303,8 @@\n             Submit\n           </Button>\n         </Box>\n       </CardContent>\n-    </Box>\n   );\n };\n \n export default BasicInfo;\n"
                },
                {
                    "date": 1711697656503,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -294,9 +294,9 @@\n           />\n         </Grid>\n       </Grid>\n \n-      <Box sx={{ display: \"flex\", justifyContent: \"flex-end\", mt: 4 }}>\n+      <Box sx={{ display: \"flex\", justifyContent: \"flex-center\", mt: 4 }}>\n         <Button type=\"submit\" variant=\"contained\">\n           Submit\n         </Button>\n       </Box>\n"
                },
                {
                    "date": 1711698217888,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n } from \"@mui/material\";\n \n import Autocomplete from \"@mui/material/Autocomplete\";\n \n-const BasicInfo = () => {\n+const BasicInfo = (data, updateData) => {\n   const [formData, setFormData] = useState({\n     name: \"\",\n     picture: \"\",\n     position: \"\",\n"
                }
            ],
            "date": 1711697576143,
            "name": "Commit-0",
            "content": "import React, { useState, useRef } from \"react\";\nimport {\n  Box,\n  CardContent,\n  Typography,\n  Button,\n  Grid,\n  Divider,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Stack,\n  Chip,\n  IconButton,\n  TextField,\n} from \"@mui/material\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport Autocomplete from \"@mui/material/Autocomplete\";\n\nconst basicInfo = () => {\n  const [formData, setFormData] = useState({\n    name: \"\",\n    picture: \"\",\n    position: \"\",\n    affiliation: \"\",\n    description: \"\",\n    homepage: \"\",\n    github: \"\",\n    tags: [],\n    publication: {\n      googleScholar: \"\",\n      dblp: \"\",\n      researchGate: \"\",\n      semanticScholar: \"\",\n    },\n    contacts: {\n      email: \"\",\n      twitter: \"\",\n      linkedIn: \"\",\n    },\n  });\n  const [inputValue, setInputValue] = useState(\"\");\n  const inputValueRef = useRef(\"\"); // 用于跟踪最新的输入值\n  const availableTags = [\"CV\", \"NLP\", \"Robotics\", \"ML\", \"Theory\", \"LLM\"];\n\n  const handleAddTag = () => {\n    const newTag = inputValueRef.current;\n    if (newTag && !formData.tags.includes(newTag)) {\n      setFormData((prev) => ({\n        ...prev,\n        tags: [...prev.tags, newTag],\n      }));\n      inputValueRef.current = \"\";\n    }\n  };\n\n  const handleRemoveTag = (tagToRemove) => {\n    setFormData((prev) => ({\n      ...prev,\n      tags: prev.tags.filter((tag) => tag !== tagToRemove),\n    }));\n  };\n\n  // Handle select field change\n  const handleSelectChange = (\n    event: React.ChangeEvent<{ name?: string | undefined; value: unknown }>\n  ) => {\n    const name = event.target.name as keyof typeof formData;\n    const value = event.target.value;\n    setFormData((prev) => ({ ...prev, [name]: value }));\n  };\n\n  // Handle field change\n  const handleChange = (\n    e: React.ChangeEvent<HTMLInputElement>,\n    section?: string,\n    field?: string\n  ) => {\n    const { name, value } = e.target;\n\n    if (section && field) {\n      setFormData((prev) => ({\n        ...prev,\n        [section]: {\n          ...prev[section],\n          [field]: value,\n        },\n      }));\n    } else {\n      setFormData((prev) => ({ ...prev, [name]: value }));\n    }\n  };\n\n  // Form submission\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    console.log(formData);\n  };\n\n  return (\n    <Box\n      component=\"form\"\n      onSubmit={handleSubmit}\n      sx={{ position: \"relative\", width: \"100%\", mt: 2 }}\n    >\n      <CardContent>\n        <Typography variant=\"h6\" gutterBottom>\n          Upload New Advisor\n        </Typography>\n        <Divider sx={{ mb: 3 }} />\n        {/* Basic Information */}\n        <Typography variant=\"subtitle1\" gutterBottom>\n          Basic Information\n        </Typography>\n        <Grid container spacing={2} sx={{ mb: 2 }}>\n          <Grid item xs={12} md={6}>\n            <TextField\n              fullWidth\n              label=\"Name\"\n              name=\"name\"\n              value={formData.name}\n              onChange={handleChange}\n            />\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <FormControl fullWidth>\n              <InputLabel id=\"position-label\">Position</InputLabel>\n              <Select\n                labelId=\"position-label\"\n                name=\"position\"\n                value={formData.position}\n                label=\"Position\"\n                onChange={handleSelectChange}\n              >\n                <MenuItem value=\"Professor\">Professor</MenuItem>\n                <MenuItem value=\"Assistant Professor\">\n                  Assistant Professor\n                </MenuItem>\n                <MenuItem value=\"Associate Professor\">\n                  Associate Professor\n                </MenuItem>\n                <MenuItem value=\"Tenure Track Assistant Professor\">\n                  Tenure Track Assistant Professor\n                </MenuItem>\n                <MenuItem value=\"Adjunct Professor\">Adjunct Professor</MenuItem>\n              </Select>\n            </FormControl>\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <TextField\n              fullWidth\n              label=\"Affiliation\"\n              name=\"affiliation\"\n              value={formData.affiliation}\n              onChange={handleChange}\n            />\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <TextField\n              fullWidth\n              label=\"Homepage\"\n              name=\"homepage\"\n              value={formData.homepage}\n              onChange={handleChange}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              fullWidth\n              label=\"GitHub\"\n              name=\"github\"\n              value={formData.github}\n              onChange={handleChange}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              fullWidth\n              label=\"Description\"\n              name=\"description\"\n              value={formData.description}\n              onChange={handleChange}\n              multiline\n              rows={4}\n            />\n          </Grid>\n        </Grid>\n        <Divider sx={{ mb: 3 }} />\n\n        {/* Tags Section */}\n        <Typography variant=\"subtitle1\" gutterBottom>\n          Tags\n        </Typography>\n        <Stack direction=\"row\" spacing={1} alignItems=\"center\">\n          {formData.tags.map((tag, index) => (\n            <Chip\n              key={index}\n              label={tag}\n              onDelete={() => handleRemoveTag(tag)}\n              color=\"primary\"\n              size=\"small\"\n            />\n          ))}\n          {formData.tags.length < availableTags.length && (\n            <Autocomplete\n              freeSolo\n              options={availableTags.filter(\n                (option) => !formData.tags.includes(option)\n              )}\n              inputValue={inputValueRef.current}\n              onInputChange={(event, newValue) => {\n                inputValueRef.current = newValue;\n                setInputValue(newValue);\n              }}\n              onChange={handleAddTag}\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  variant=\"outlined\"\n                  size=\"small\"\n                  label=\"Add Tag\"\n                />\n              )}\n              sx={{ width: 250 }}\n            />\n          )}\n        </Stack>\n\n        <Divider sx={{ mb: 3, mt: 1 }} />\n\n        {/* Publications */}\n        <Typography variant=\"subtitle1\" gutterBottom>\n          Publications\n        </Typography>\n        <Grid container spacing={2} sx={{ mb: 2 }}>\n          <Grid item xs={12} md={6}>\n            <TextField\n              fullWidth\n              label=\"Google Scholar\"\n              value={formData.publication.googleScholar}\n              onChange={(e) => handleChange(e, \"publication\", \"googleScholar\")}\n            />\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <TextField\n              fullWidth\n              label=\"DBLP\"\n              value={formData.publication.dblp}\n              onChange={(e) => handleChange(e, \"publication\", \"dblp\")}\n            />\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <TextField\n              fullWidth\n              label=\"ResearchGate\"\n              value={formData.publication.researchGate}\n              onChange={(e) => handleChange(e, \"publication\", \"researchGate\")}\n            />\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <TextField\n              fullWidth\n              label=\"Semantic Scholar\"\n              value={formData.publication.semanticScholar}\n              onChange={(e) =>\n                handleChange(e, \"publication\", \"semanticScholar\")\n              }\n            />\n          </Grid>\n        </Grid>\n        <Divider sx={{ mb: 3 }} />\n\n        {/* Contacts */}\n        <Typography variant=\"subtitle1\" gutterBottom>\n          Contacts\n        </Typography>\n        <Grid container spacing={2}>\n          <Grid item xs={12} md={4}>\n            <TextField\n              fullWidth\n              label=\"Email\"\n              value={formData.contacts.email}\n              onChange={(e) => handleChange(e, \"contacts\", \"email\")}\n            />\n          </Grid>\n          <Grid item xs={12} md={4}>\n            <TextField\n              fullWidth\n              label=\"Twitter\"\n              value={formData.contacts.twitter}\n              onChange={(e) => handleChange(e, \"contacts\", \"twitter\")}\n            />\n          </Grid>\n          <Grid item xs={12} md={4}>\n            <TextField\n              fullWidth\n              label=\"LinkedIn\"\n              value={formData.contacts.linkedIn}\n              onChange={(e) => handleChange(e, \"contacts\", \"linkedIn\")}\n            />\n          </Grid>\n        </Grid>\n\n        <Box sx={{ display: \"flex\", justifyContent: \"flex-end\", mt: 4 }}>\n          <Button type=\"submit\" variant=\"contained\">\n            Submit\n          </Button>\n        </Box>\n      </CardContent>\n    </Box>\n  );\n};\n\nexport default UploadCard;\n"
        }
    ]
}