{
    "sourceFile": "src/components/mainPage/uploadInfo/relation.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1711790122306,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1711790143129,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n   MenuItem,\n   Grid,\n } from \"@mui/material\";\n \n-const Relation = () => {\n+const Relation = ({updateRelations}) => {\n   const [dialogOpen, setDialogOpen] = useState(false);\n   const [relations, setRelations] = useState([]);\n   const [newRelation, setNewRelation] = useState({\n     type: \"\",\n"
                },
                {
                    "date": 1711790175147,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,9 +30,9 @@\n     setDialogOpen(false);\n   };\n \n   const addRelation = () => {\n-    setRelations([...relations, newRelation]);\n+    updateRelations(newRelation); // 调用父组件的函数更新父组件的状态\n     setDialogOpen(false);\n     setNewRelation({ type: \"\", role1: \"\", startYear: \"\", endYear: \"\" });\n   };\n \n"
                }
            ],
            "date": 1711790122306,
            "name": "Commit-0",
            "content": "import React, { useState } from \"react\";\nimport {\n  Box,\n  Button,\n  Dialog,\n  DialogContent,\n  DialogActions,\n  TextField,\n  Typography,\n  Select,\n  MenuItem,\n  Grid,\n} from \"@mui/material\";\n\nconst Relation = () => {\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const [relations, setRelations] = useState([]);\n  const [newRelation, setNewRelation] = useState({\n    type: '',\n    role1: '',\n    startYear: '',\n    endYear: ''\n  });\n\n  const handleDialogOpen = () => {\n    setDialogOpen(true);\n  };\n\n  const handleDialogClose = () => {\n    setDialogOpen(false);\n  };\n\n  const addRelation = () => {\n    setRelations([...relations, newRelation]);\n    setDialogOpen(false);\n    setNewRelation({ type: '', role1: '', startYear: '', endYear: '' });\n  };\n\n  const roleMapping = {\n    'Supervisor': 'Supervisee',\n    'Supervisee': 'Supervisor',\n    'Collaborater': 'Collaborater',\n    'Superior': 'Subordinate',\n    'Subordinate': 'Superior'\n  };\n\n  return (\n    <Box>\n      <Typography variant=\"h6\">Relations</Typography>\n      <Button variant=\"outlined\" onClick={handleDialogOpen}>\n        Add Relation\n      </Button>\n\n      {relations.map((relation, index) => (\n        <Typography key={index}>{`${relation.type}: ${relation.role1} - ${roleMapping[relation.role1]} from ${relation.startYear} to ${relation.endYear}`}</Typography>\n      ))}\n\n      <Dialog open={dialogOpen} onClose={handleDialogClose}>\n        <DialogContent>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <Select\n                fullWidth\n                value={newRelation.type}\n                onChange={(e) => setNewRelation({ ...newRelation, type: e.target.value })}\n                displayEmpty\n              >\n                <MenuItem value=\"\">Select Type</MenuItem>\n                <MenuItem value=\"PhD\">PhD</MenuItem>\n                <MenuItem value=\"MS\">MS</MenuItem>\n                <MenuItem value=\"Undergrad\">Undergrad</MenuItem>\n                <MenuItem value=\"Working\">Working</MenuItem>\n              </Select>\n            </Grid>\n            <Grid item xs={12}>\n              <Select\n                fullWidth\n                value={newRelation.role1}\n                onChange={(e) => setNewRelation({ ...newRelation, role1: e.target.value })}\n                displayEmpty\n              >\n                <MenuItem value=\"\">Select Person 1's Role</MenuItem>\n                <MenuItem value=\"Supervisor\">Supervisor</MenuItem>\n                <MenuItem value=\"Supervisee\">Supervisee</MenuItem>\n                <MenuItem value=\"Collaborater\">Collaborater</MenuItem>\n                <MenuItem value=\"Superior\">Superior</MenuItem>\n                <MenuItem value=\"Subordinate\">Subordinate</MenuItem>\n              </Select>\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                fullWidth\n                type=\"number\"\n                label=\"Start Year\"\n                value={newRelation.startYear}\n                onChange={(e) => setNewRelation({ ...newRelation, startYear: e.target.value })}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                fullWidth\n                type=\"number\"\n                label=\"End Year\"\n                value={newRelation.endYear}\n                onChange={(e) => setNewRelation({ ...newRelation, endYear: e.target.value })}\n              />\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleDialogClose}>Cancel</Button>\n          <Button onClick={addRelation}>Add Relation</Button>\n        </DialogActions>\n      </Dialog>\n    </Box>\n  );\n};\n\nexport default Relation;\n"
        }
    ]
}