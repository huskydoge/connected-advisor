{
    "sourceFile": "src/components/mainPage/uploadCard.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 31,
            "patches": [
                {
                    "date": 1708705499642,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1708705569279,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n import { Box, CardContent, Typography, IconButton } from \"@mui/material\";\n import CloseIcon from \"@mui/icons-material/Close\";\n \n //@ts-ignore\n-const FilterCard = ({ onClose }) => {\n+const UploadCard = ({ onClose }) => {\n   return (\n     <Box sx={{ position: \"relative\" }}>\n       <IconButton\n         onClick={onClose}\n@@ -13,12 +13,11 @@\n       >\n         <CloseIcon />\n       </IconButton>\n       <CardContent>\n-        <Typography variant=\"h6\">Filter Configuration</Typography>\n-        {/* Filter配置内容 */}\n+        <Typography variant=\"h6\">Upload New Advisor</Typography>\n       </CardContent>\n     </Box>\n   );\n };\n \n-export default FilterCard;\n+export default UploadCard;\n"
                },
                {
                    "date": 1708706295679,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,21 +1,111 @@\n-// FilterCard.jsx\n-import React from \"react\";\n-import { Box, CardContent, Typography, IconButton } from \"@mui/material\";\n+import React, { useState } from \"react\";\n+import {\n+  Box,\n+  CardContent,\n+  Typography,\n+  IconButton,\n+  TextField,\n+  Button,\n+  Grid,\n+} from \"@mui/material\";\n import CloseIcon from \"@mui/icons-material/Close\";\n+import AddIcon from \"@mui/icons-material/Add\";\n \n-//@ts-ignore\n+// Helper component for handling dynamic form sections like Tags and Connections\n+const FormSection = ({ label, name, children }) => (\n+  <Box sx={{ mb: 2 }}>\n+    <Typography variant=\"body1\" sx={{ mb: 1 }}>\n+      {label}\n+    </Typography>\n+    {children}\n+    <Button variant=\"outlined\" startIcon={<AddIcon />} onClick={() => {}}>\n+      Add {name}\n+    </Button>\n+  </Box>\n+);\n+\n const UploadCard = ({ onClose }) => {\n+  // State for form fields\n+  const [formData, setFormData] = useState({\n+    advisor_id: \"\",\n+    name: \"\",\n+    tags: [],\n+    avatar: \"\",\n+    github: \"\",\n+    twitter: \"\",\n+    email: \"\",\n+    website: \"\",\n+    position: \"\",\n+    affiliation: \"\",\n+    description: \"\",\n+    connections: [],\n+  });\n+\n+  // Handlers for form actions like input change and submission\n+  const handleChange = (e) => {\n+    const { name, value } = e.target;\n+    setFormData((prev) => ({ ...prev, [name]: value }));\n+  };\n+\n+  const handleTagChange = (index, value) => {\n+    // Handle tag change logic here\n+  };\n+\n+  const handleAddTag = () => {\n+    // Logic to add a new tag input field\n+  };\n+\n+  const handleSubmit = (e) => {\n+    e.preventDefault();\n+    console.log(formData);\n+    // Submit form data\n+  };\n+\n   return (\n-    <Box sx={{ position: \"relative\" }}>\n+    <Box component=\"form\" onSubmit={handleSubmit} sx={{ position: \"relative\" }}>\n       <IconButton\n         onClick={onClose}\n         sx={{ position: \"absolute\", right: 8, top: 8 }}\n       >\n         <CloseIcon />\n       </IconButton>\n       <CardContent>\n-        <Typography variant=\"h6\">Upload New Advisor</Typography>\n+        <Typography variant=\"h6\" sx={{ mb: 2 }}>\n+          Upload New Advisor\n+        </Typography>\n+        <Grid container spacing={2}>\n+          {/* Basic Information Fields */}\n+          <Grid item xs={12}>\n+            <TextField\n+              fullWidth\n+              label=\"Name\"\n+              name=\"name\"\n+              value={formData.name}\n+              onChange={handleChange}\n+            />\n+          </Grid>\n+          <Grid item xs={12}>\n+            {/* Dynamic Section for Tags */}\n+            <FormSection label=\"Tags\" name=\"tag\">\n+              {formData.tags.map((tag, index) => (\n+                <TextField\n+                  key={index}\n+                  fullWidth\n+                  label={`Tag ${index + 1}`}\n+                  value={tag}\n+                  onChange={(e) => handleTagChange(index, e.target.value)}\n+                />\n+              ))}\n+            </FormSection>\n+          </Grid>\n+          {/* Additional fields for avatar, github, etc. can be added here following the pattern above */}\n+        </Grid>\n+        <Box sx={{ mt: 2, display: \"flex\", justifyContent: \"flex-end\" }}>\n+          <Button type=\"submit\" variant=\"contained\">\n+            Submit\n+          </Button>\n+        </Box>\n       </CardContent>\n     </Box>\n   );\n };\n"
                },
                {
                    "date": 1708706464403,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,27 +6,17 @@\n   IconButton,\n   TextField,\n   Button,\n   Grid,\n+  Chip,\n+  Stack,\n } from \"@mui/material\";\n import CloseIcon from \"@mui/icons-material/Close\";\n import AddIcon from \"@mui/icons-material/Add\";\n+import DeleteIcon from \"@mui/icons-material/Delete\";\n \n-// Helper component for handling dynamic form sections like Tags and Connections\n-const FormSection = ({ label, name, children }) => (\n-  <Box sx={{ mb: 2 }}>\n-    <Typography variant=\"body1\" sx={{ mb: 1 }}>\n-      {label}\n-    </Typography>\n-    {children}\n-    <Button variant=\"outlined\" startIcon={<AddIcon />} onClick={() => {}}>\n-      Add {name}\n-    </Button>\n-  </Box>\n-);\n-\n const UploadCard = ({ onClose }) => {\n-  // State for form fields\n+  // Initial state setup for the form\n   const [formData, setFormData] = useState({\n     advisor_id: \"\",\n     name: \"\",\n     tags: [],\n@@ -40,68 +30,160 @@\n     description: \"\",\n     connections: [],\n   });\n \n-  // Handlers for form actions like input change and submission\n+  // Handle field change\n   const handleChange = (e) => {\n     const { name, value } = e.target;\n     setFormData((prev) => ({ ...prev, [name]: value }));\n   };\n \n-  const handleTagChange = (index, value) => {\n-    // Handle tag change logic here\n+  // Add tag\n+  const handleAddTag = () => {\n+    setFormData((prev) => ({ ...prev, tags: [...prev.tags, \"\"] }));\n   };\n \n-  const handleAddTag = () => {\n-    // Logic to add a new tag input field\n+  // Remove tag\n+  const handleRemoveTag = (index) => {\n+    const newTags = formData.tags.filter((_, idx) => idx !== index);\n+    setFormData((prev) => ({ ...prev, tags: newTags }));\n   };\n \n+  // Update tag\n+  const handleTagChange = (value, index) => {\n+    const newTags = formData.tags.map((tag, idx) =>\n+      idx === index ? value : tag\n+    );\n+    setFormData((prev) => ({ ...prev, tags: newTags }));\n+  };\n+\n+  // Form submission\n   const handleSubmit = (e) => {\n     e.preventDefault();\n+    // Implement form submission logic here\n     console.log(formData);\n-    // Submit form data\n   };\n \n   return (\n-    <Box component=\"form\" onSubmit={handleSubmit} sx={{ position: \"relative\" }}>\n+    <Box\n+      component=\"form\"\n+      onSubmit={handleSubmit}\n+      sx={{ position: \"relative\", width: \"100%\", mt: 2 }}\n+    >\n       <IconButton\n         onClick={onClose}\n         sx={{ position: \"absolute\", right: 8, top: 8 }}\n       >\n         <CloseIcon />\n       </IconButton>\n       <CardContent>\n-        <Typography variant=\"h6\" sx={{ mb: 2 }}>\n+        <Typography variant=\"h6\" gutterBottom>\n           Upload New Advisor\n         </Typography>\n         <Grid container spacing={2}>\n-          {/* Basic Information Fields */}\n-          <Grid item xs={12}>\n+          {/* Advisor Basic Information */}\n+          <Grid item xs={12} sm={6} md={4}>\n             <TextField\n               fullWidth\n               label=\"Name\"\n               name=\"name\"\n               value={formData.name}\n               onChange={handleChange}\n             />\n           </Grid>\n+          <Grid item xs={12} sm={6} md={4}>\n+            <TextField\n+              fullWidth\n+              label=\"Position\"\n+              name=\"position\"\n+              value={formData.position}\n+              onChange={handleChange}\n+            />\n+          </Grid>\n+          <Grid item xs={12} sm={6} md={4}>\n+            <TextField\n+              fullWidth\n+              label=\"Affiliation\"\n+              name=\"affiliation\"\n+              value={formData.affiliation}\n+              onChange={handleChange}\n+            />\n+          </Grid>\n+          {/* Social Links */}\n+          <Grid item xs={12} sm={6} md={3}>\n+            <TextField\n+              fullWidth\n+              label=\"GitHub\"\n+              name=\"github\"\n+              value={formData.github}\n+              onChange={handleChange}\n+            />\n+          </Grid>\n+          <Grid item xs={12} sm={6} md={3}>\n+            <TextField\n+              fullWidth\n+              label=\"Twitter\"\n+              name=\"twitter\"\n+              value={formData.twitter}\n+              onChange={handleChange}\n+            />\n+          </Grid>\n+          <Grid item xs={12} sm={6} md={3}>\n+            <TextField\n+              fullWidth\n+              label=\"Email\"\n+              name=\"email\"\n+              value={formData.email}\n+              onChange={handleChange}\n+            />\n+          </Grid>\n+          <Grid item xs={12} sm={6} md={3}>\n+            <TextField\n+              fullWidth\n+              label=\"Website\"\n+              name=\"website\"\n+              value={formData.website}\n+              onChange={handleChange}\n+            />\n+          </Grid>\n+          {/* Tags */}\n           <Grid item xs={12}>\n-            {/* Dynamic Section for Tags */}\n-            <FormSection label=\"Tags\" name=\"tag\">\n+            <Typography variant=\"body1\">Tags</Typography>\n+            <Stack direction=\"row\" spacing={1} mb={2}>\n               {formData.tags.map((tag, index) => (\n-                <TextField\n+                <Chip\n                   key={index}\n-                  fullWidth\n-                  label={`Tag ${index + 1}`}\n-                  value={tag}\n-                  onChange={(e) => handleTagChange(index, e.target.value)}\n+                  label={\n+                    <TextField\n+                      size=\"small\"\n+                      value={tag}\n+                      onChange={(e) => handleTagChange(e.target.value, index)}\n+                      variant=\"outlined\"\n+                    />\n+                  }\n+                  onDelete={() => handleRemoveTag(index)}\n+                  deleteIcon={<DeleteIcon />}\n                 />\n               ))}\n-            </FormSection>\n+              <Button onClick={handleAddTag} startIcon={<AddIcon />}>\n+                Add Tag\n+              </Button>\n+            </Stack>\n           </Grid>\n-          {/* Additional fields for avatar, github, etc. can be added here following the pattern above */}\n+          {/* Description */}\n+          <Grid item xs={12}>\n+            <TextField\n+              fullWidth\n+              label=\"Description\"\n+              name=\"description\"\n+              value={formData.description}\n+              onChange={handleChange}\n+              multiline\n+              rows={4}\n+            />\n+          </Grid>\n         </Grid>\n-        <Box sx={{ mt: 2, display: \"flex\", justifyContent: \"flex-end\" }}>\n+        <Box sx={{ display: \"flex\", justifyContent: \"flex-end\", mt: 2 }}>\n           <Button type=\"submit\" variant=\"contained\">\n             Submit\n           </Button>\n         </Box>\n"
                },
                {
                    "date": 1708706515281,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n import CloseIcon from \"@mui/icons-material/Close\";\n import AddIcon from \"@mui/icons-material/Add\";\n import DeleteIcon from \"@mui/icons-material/Delete\";\n \n-const UploadCard = ({ onClose }) => {\n+const UploadCard = ({ onClose }: { onClose: any }) => {\n   // Initial state setup for the form\n   const [formData, setFormData] = useState({\n     advisor_id: \"\",\n     name: \"\",\n"
                },
                {
                    "date": 1708706661498,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,204 @@\n+import React, { useState } from \"react\";\n+import {\n+  Box,\n+  CardContent,\n+  Typography,\n+  IconButton,\n+  TextField,\n+  Button,\n+  Grid,\n+  Chip,\n+  Stack,\n+} from \"@mui/material\";\n+import CloseIcon from \"@mui/icons-material/Close\";\n+import AddIcon from \"@mui/icons-material/Add\";\n+import DeleteIcon from \"@mui/icons-material/Delete\";\n+\n+const UploadCard = ({ onClose }: { onClose: any }) => {\n+  // Initial state setup for the form\n+  const [formData, setFormData] = useState({\n+    advisor_id: \"\",\n+    name: \"\",\n+    tags: [],\n+    avatar: \"\",\n+    github: \"\",\n+    twitter: \"\",\n+    email: \"\",\n+    website: \"\",\n+    position: \"\",\n+    affiliation: \"\",\n+    description: \"\",\n+    connections: [],\n+  });\n+\n+  // Handle field change\n+  const handleChange = (e) => {\n+    const { name, value } = e.target;\n+    setFormData((prev) => ({ ...prev, [name]: value }));\n+  };\n+\n+  // Add tag\n+  const handleAddTag = () => {\n+    setFormData((prev) => ({ ...prev, tags: [...prev.tags, \"\"] }));\n+  };\n+\n+  // Remove tag\n+  const handleRemoveTag = (index) => {\n+    const newTags = formData.tags.filter((_, idx) => idx !== index);\n+    setFormData((prev) => ({ ...prev, tags: newTags }));\n+  };\n+\n+  // Update tag\n+  const handleTagChange = (value, index) => {\n+    const newTags = formData.tags.map((tag, idx) =>\n+      idx === index ? value : tag\n+    );\n+    setFormData((prev) => ({ ...prev, tags: newTags }));\n+  };\n+\n+  // Form submission\n+  const handleSubmit = (e) => {\n+    e.preventDefault();\n+    // Implement form submission logic here\n+    console.log(formData);\n+  };\n+\n+  return (\n+    <Box\n+      component=\"form\"\n+      onSubmit={handleSubmit}\n+      sx={{ position: \"relative\", width: \"100%\", mt: 2 }}\n+    >\n+      <IconButton\n+        onClick={onClose}\n+        sx={{ position: \"absolute\", right: 8, top: 8 }}\n+      >\n+        <CloseIcon />\n+      </IconButton>\n+      <CardContent>\n+        <Typography variant=\"h6\" gutterBottom>\n+          Upload New Advisor\n+        </Typography>\n+        <Grid container spacing={2}>\n+          {/* Advisor Basic Information */}\n+          <Grid item xs={12} sm={6} md={4}>\n+            <TextField\n+              fullWidth\n+              label=\"Name\"\n+              name=\"name\"\n+              value={formData.name}\n+              onChange={handleChange}\n+            />\n+          </Grid>\n+          <Grid item xs={12} sm={6} md={4}>\n+            <TextField\n+              fullWidth\n+              label=\"Position\"\n+              name=\"position\"\n+              value={formData.position}\n+              onChange={handleChange}\n+            />\n+          </Grid>\n+          <Grid item xs={12} sm={6} md={4}>\n+            <TextField\n+              fullWidth\n+              label=\"Affiliation\"\n+              name=\"affiliation\"\n+              value={formData.affiliation}\n+              onChange={handleChange}\n+            />\n+          </Grid>\n+          {/* Social Links */}\n+          <Grid item xs={12} sm={6} md={3}>\n+            <TextField\n+              fullWidth\n+              label=\"GitHub\"\n+              name=\"github\"\n+              value={formData.github}\n+              onChange={handleChange}\n+            />\n+          </Grid>\n+          <Grid item xs={12} sm={6} md={3}>\n+            <TextField\n+              fullWidth\n+              label=\"Twitter\"\n+              name=\"twitter\"\n+              value={formData.twitter}\n+              onChange={handleChange}\n+            />\n+          </Grid>\n+          <Grid item xs={12} sm={6} md={3}>\n+            <TextField\n+              fullWidth\n+              label=\"Email\"\n+              name=\"email\"\n+              value={formData.email}\n+              onChange={handleChange}\n+            />\n+          </Grid>\n+          <Grid item xs={12} sm={6} md={3}>\n+            <TextField\n+              fullWidth\n+              label=\"Website\"\n+              name=\"website\"\n+              value={formData.website}\n+              onChange={handleChange}\n+            />\n+          </Grid>\n+          {/* Tags */}\n+          <Grid item xs={12}>\n+            <Typography variant=\"body1\" sx={{ mb: 1 }}>\n+              Tags\n+            </Typography>\n+            <Stack direction=\"column\" spacing={1}>\n+              {formData.tags.map((tag, index) => (\n+                <Box key={index} display=\"flex\" alignItems=\"center\">\n+                  <TextField\n+                    fullWidth\n+                    variant=\"outlined\"\n+                    size=\"small\"\n+                    value={tag}\n+                    onChange={(e) => handleTagChange(e.target.value, index)}\n+                    sx={{ mr: 1 }}\n+                  />\n+                  <IconButton\n+                    onClick={() => handleRemoveTag(index)}\n+                    size=\"small\"\n+                  >\n+                    <DeleteIcon />\n+                  </IconButton>\n+                </Box>\n+              ))}\n+            </Stack>\n+            <Button\n+              onClick={handleAddTag}\n+              startIcon={<AddIcon />}\n+              sx={{ mt: 1 }}\n+            >\n+              Add Tag\n+            </Button>\n+          </Grid>\n+          {/* Description */}\n+          <Grid item xs={12}>\n+            <TextField\n+              fullWidth\n+              label=\"Description\"\n+              name=\"description\"\n+              value={formData.description}\n+              onChange={handleChange}\n+              multiline\n+              rows={4}\n+            />\n+          </Grid>\n+        </Grid>\n+        <Box sx={{ display: \"flex\", justifyContent: \"flex-end\", mt: 2 }}>\n+          <Button type=\"submit\" variant=\"contained\">\n+            Submit\n+          </Button>\n+        </Box>\n+      </CardContent>\n+    </Box>\n+  );\n+};\n+\n+export default UploadCard;\n"
                },
                {
                    "date": 1708706720806,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -78,9 +78,9 @@\n       <CardContent>\n         <Typography variant=\"h6\" gutterBottom>\n           Upload New Advisor\n         </Typography>\n-        <Grid container spacing={2}>\n+        <Grid container spacing={2} sx={{ mt: 3 }}>\n           {/* Advisor Basic Information */}\n           <Grid item xs={12} sm={6} md={4}>\n             <TextField\n               fullWidth\n@@ -201,199 +201,4 @@\n   );\n };\n \n export default UploadCard;\n-import React, { useState } from \"react\";\n-import {\n-  Box,\n-  CardContent,\n-  Typography,\n-  IconButton,\n-  TextField,\n-  Button,\n-  Grid,\n-  Chip,\n-  Stack,\n-} from \"@mui/material\";\n-import CloseIcon from \"@mui/icons-material/Close\";\n-import AddIcon from \"@mui/icons-material/Add\";\n-import DeleteIcon from \"@mui/icons-material/Delete\";\n-\n-const UploadCard = ({ onClose }: { onClose: any }) => {\n-  // Initial state setup for the form\n-  const [formData, setFormData] = useState({\n-    advisor_id: \"\",\n-    name: \"\",\n-    tags: [],\n-    avatar: \"\",\n-    github: \"\",\n-    twitter: \"\",\n-    email: \"\",\n-    website: \"\",\n-    position: \"\",\n-    affiliation: \"\",\n-    description: \"\",\n-    connections: [],\n-  });\n-\n-  // Handle field change\n-  const handleChange = (e) => {\n-    const { name, value } = e.target;\n-    setFormData((prev) => ({ ...prev, [name]: value }));\n-  };\n-\n-  // Add tag\n-  const handleAddTag = () => {\n-    setFormData((prev) => ({ ...prev, tags: [...prev.tags, \"\"] }));\n-  };\n-\n-  // Remove tag\n-  const handleRemoveTag = (index) => {\n-    const newTags = formData.tags.filter((_, idx) => idx !== index);\n-    setFormData((prev) => ({ ...prev, tags: newTags }));\n-  };\n-\n-  // Update tag\n-  const handleTagChange = (value, index) => {\n-    const newTags = formData.tags.map((tag, idx) =>\n-      idx === index ? value : tag\n-    );\n-    setFormData((prev) => ({ ...prev, tags: newTags }));\n-  };\n-\n-  // Form submission\n-  const handleSubmit = (e) => {\n-    e.preventDefault();\n-    // Implement form submission logic here\n-    console.log(formData);\n-  };\n-\n-  return (\n-    <Box\n-      component=\"form\"\n-      onSubmit={handleSubmit}\n-      sx={{ position: \"relative\", width: \"100%\", mt: 2 }}\n-    >\n-      <IconButton\n-        onClick={onClose}\n-        sx={{ position: \"absolute\", right: 8, top: 8 }}\n-      >\n-        <CloseIcon />\n-      </IconButton>\n-      <CardContent>\n-        <Typography variant=\"h6\" gutterBottom>\n-          Upload New Advisor\n-        </Typography>\n-        <Grid container spacing={2}>\n-          {/* Advisor Basic Information */}\n-          <Grid item xs={12} sm={6} md={4}>\n-            <TextField\n-              fullWidth\n-              label=\"Name\"\n-              name=\"name\"\n-              value={formData.name}\n-              onChange={handleChange}\n-            />\n-          </Grid>\n-          <Grid item xs={12} sm={6} md={4}>\n-            <TextField\n-              fullWidth\n-              label=\"Position\"\n-              name=\"position\"\n-              value={formData.position}\n-              onChange={handleChange}\n-            />\n-          </Grid>\n-          <Grid item xs={12} sm={6} md={4}>\n-            <TextField\n-              fullWidth\n-              label=\"Affiliation\"\n-              name=\"affiliation\"\n-              value={formData.affiliation}\n-              onChange={handleChange}\n-            />\n-          </Grid>\n-          {/* Social Links */}\n-          <Grid item xs={12} sm={6} md={3}>\n-            <TextField\n-              fullWidth\n-              label=\"GitHub\"\n-              name=\"github\"\n-              value={formData.github}\n-              onChange={handleChange}\n-            />\n-          </Grid>\n-          <Grid item xs={12} sm={6} md={3}>\n-            <TextField\n-              fullWidth\n-              label=\"Twitter\"\n-              name=\"twitter\"\n-              value={formData.twitter}\n-              onChange={handleChange}\n-            />\n-          </Grid>\n-          <Grid item xs={12} sm={6} md={3}>\n-            <TextField\n-              fullWidth\n-              label=\"Email\"\n-              name=\"email\"\n-              value={formData.email}\n-              onChange={handleChange}\n-            />\n-          </Grid>\n-          <Grid item xs={12} sm={6} md={3}>\n-            <TextField\n-              fullWidth\n-              label=\"Website\"\n-              name=\"website\"\n-              value={formData.website}\n-              onChange={handleChange}\n-            />\n-          </Grid>\n-          {/* Tags */}\n-          <Grid item xs={12}>\n-            <Typography variant=\"body1\">Tags</Typography>\n-            <Stack direction=\"row\" spacing={1} mb={2}>\n-              {formData.tags.map((tag, index) => (\n-                <Chip\n-                  key={index}\n-                  label={\n-                    <TextField\n-                      size=\"small\"\n-                      value={tag}\n-                      onChange={(e) => handleTagChange(e.target.value, index)}\n-                      variant=\"outlined\"\n-                    />\n-                  }\n-                  onDelete={() => handleRemoveTag(index)}\n-                  deleteIcon={<DeleteIcon />}\n-                />\n-              ))}\n-              <Button onClick={handleAddTag} startIcon={<AddIcon />}>\n-                Add Tag\n-              </Button>\n-            </Stack>\n-          </Grid>\n-          {/* Description */}\n-          <Grid item xs={12}>\n-            <TextField\n-              fullWidth\n-              label=\"Description\"\n-              name=\"description\"\n-              value={formData.description}\n-              onChange={handleChange}\n-              multiline\n-              rows={4}\n-            />\n-          </Grid>\n-        </Grid>\n-        <Box sx={{ display: \"flex\", justifyContent: \"flex-end\", mt: 2 }}>\n-          <Button type=\"submit\" variant=\"contained\">\n-            Submit\n-          </Button>\n-        </Box>\n-      </CardContent>\n-    </Box>\n-  );\n-};\n-\n-export default UploadCard;\n"
                },
                {
                    "date": 1708741975299,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,27 +38,28 @@\n   };\n \n   // Add tag\n   const handleAddTag = () => {\n+    // @ts-ignore\n     setFormData((prev) => ({ ...prev, tags: [...prev.tags, \"\"] }));\n   };\n \n   // Remove tag\n-  const handleRemoveTag = (index) => {\n+  const handleRemoveTag = (index: number) => {\n     const newTags = formData.tags.filter((_, idx) => idx !== index);\n     setFormData((prev) => ({ ...prev, tags: newTags }));\n   };\n \n   // Update tag\n-  const handleTagChange = (value, index) => {\n+  const handleTagChange = (value: any, index: number) => {\n     const newTags = formData.tags.map((tag, idx) =>\n       idx === index ? value : tag\n     );\n     setFormData((prev) => ({ ...prev, tags: newTags }));\n   };\n \n   // Form submission\n-  const handleSubmit = (e) => {\n+  const handleSubmit = (e: React.FormEvent) => {\n     e.preventDefault();\n     // Implement form submission logic here\n     console.log(formData);\n   };\n"
                },
                {
                    "date": 1708741980560,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,8 +53,9 @@\n   const handleTagChange = (value: any, index: number) => {\n     const newTags = formData.tags.map((tag, idx) =>\n       idx === index ? value : tag\n     );\n+    // @ts-ignore\n     setFormData((prev) => ({ ...prev, tags: newTags }));\n   };\n \n   // Form submission\n"
                },
                {
                    "date": 1708742017727,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,9 +31,9 @@\n     connections: [],\n   });\n \n   // Handle field change\n-  const handleChange = (e) => {\n+  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n     const { name, value } = e.target;\n     setFormData((prev) => ({ ...prev, [name]: value }));\n   };\n \n"
                },
                {
                    "date": 1708762761529,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -198,8 +198,51 @@\n             Submit\n           </Button>\n         </Box>\n       </CardContent>\n+      <Typography variant=\"h6\" sx={{ mt: 2 }}>\n+        Connections\n+      </Typography>\n+      {formData.connections.map((connection, index) => (\n+        <Accordion key={index} defaultExpanded>\n+          <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n+            <Typography>Connection {index + 1}</Typography>\n+          </AccordionSummary>\n+          <AccordionDetails>\n+            <Stack spacing={2}>\n+              {/* Inputs for connection fields */}\n+              <TextField\n+                label=\"Advisor ID\"\n+                value={connection.advisor_id}\n+                onChange={(e) =>\n+                  handleConnectionChange(index, \"advisor_id\", e.target.value)\n+                }\n+                fullWidth\n+              />\n+              {/* Relation and Collaboration details */}\n+              <Button\n+                onClick={() => handleAddRelation(index)}\n+                startIcon={<AddIcon />}\n+              >\n+                Add Relation\n+              </Button>\n+              {/* Display Relations and Collaborations */}\n+            </Stack>\n+          </AccordionDetails>\n+        </Accordion>\n+      ))}\n+      <Button\n+        onClick={handleAddConnection}\n+        startIcon={<AddIcon />}\n+        sx={{ mt: 1 }}\n+      >\n+        Add Connection\n+      </Button>\n+      <Box sx={{ display: \"flex\", justifyContent: \"flex-end\", mt: 2 }}>\n+        <Button type=\"submit\" variant=\"contained\">\n+          Submit\n+        </Button>\n+      </Box>\n     </Box>\n   );\n };\n \n"
                },
                {
                    "date": 1708762781364,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,10 +6,12 @@\n   IconButton,\n   TextField,\n   Button,\n   Grid,\n-  Chip,\n   Stack,\n+  Accordion,\n+  AccordionSummary,\n+  AccordionDetails,\n } from \"@mui/material\";\n import CloseIcon from \"@mui/icons-material/Close\";\n import AddIcon from \"@mui/icons-material/Add\";\n import DeleteIcon from \"@mui/icons-material/Delete\";\n"
                },
                {
                    "date": 1708762797027,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,8 +15,10 @@\n import CloseIcon from \"@mui/icons-material/Close\";\n import AddIcon from \"@mui/icons-material/Add\";\n import DeleteIcon from \"@mui/icons-material/Delete\";\n \n+import ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\n+\n const UploadCard = ({ onClose }: { onClose: any }) => {\n   // Initial state setup for the form\n   const [formData, setFormData] = useState({\n     advisor_id: \"\",\n"
                },
                {
                    "date": 1708762818737,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,8 @@\n } from \"@mui/material\";\n import CloseIcon from \"@mui/icons-material/Close\";\n import AddIcon from \"@mui/icons-material/Add\";\n import DeleteIcon from \"@mui/icons-material/Delete\";\n-\n import ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\n \n const UploadCard = ({ onClose }: { onClose: any }) => {\n   // Initial state setup for the form\n@@ -34,8 +33,57 @@\n     description: \"\",\n     connections: [],\n   });\n \n+  const handleAddConnection = () => {\n+    setFormData((prev) => ({\n+      ...prev,\n+      connections: [\n+        ...prev.connections,\n+        {\n+          advisor_id: \"\",\n+          relation: [],\n+          collaborations: [],\n+          latestCollaboration: \"\",\n+          relationFactor: \"\",\n+        },\n+      ],\n+    }));\n+  };\n+\n+  const handleConnectionChange = (index, field, value) => {\n+    const updatedConnections = formData.connections.map((connection, idx) => {\n+      if (idx === index) {\n+        return { ...connection, [field]: value };\n+      }\n+      return connection;\n+    });\n+    setFormData((prev) => ({ ...prev, connections: updatedConnections }));\n+  };\n+\n+  const handleAddRelation = (connectionIndex) => {\n+    const updatedConnections = formData.connections.map((connection, idx) => {\n+      if (idx === connectionIndex) {\n+        return {\n+          ...connection,\n+          relation: [\n+            ...connection.relation,\n+            {\n+              class: \"\",\n+              role: \"\",\n+              duration: {\n+                start: { year: \"\", month: \"\" },\n+                end: { year: \"\", month: \"\" },\n+              },\n+            },\n+          ],\n+        };\n+      }\n+      return connection;\n+    });\n+    setFormData((prev) => ({ ...prev, connections: updatedConnections }));\n+  };\n+\n   // Handle field change\n   const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n     const { name, value } = e.target;\n     setFormData((prev) => ({ ...prev, [name]: value }));\n"
                },
                {
                    "date": 1708762846558,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,302 @@\n+import React, { useState } from \"react\";\n+import {\n+  Box,\n+  CardContent,\n+  Typography,\n+  IconButton,\n+  TextField,\n+  Button,\n+  Grid,\n+  Stack,\n+  Accordion,\n+  AccordionSummary,\n+  AccordionDetails,\n+} from \"@mui/material\";\n+import CloseIcon from \"@mui/icons-material/Close\";\n+import AddIcon from \"@mui/icons-material/Add\";\n+import DeleteIcon from \"@mui/icons-material/Delete\";\n+import ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\n+\n+const UploadCard = ({ onClose }: { onClose: any }) => {\n+  // Initial state setup for the form\n+  const [formData, setFormData] = useState({\n+    advisor_id: \"\",\n+    name: \"\",\n+    tags: [],\n+    avatar: \"\",\n+    github: \"\",\n+    twitter: \"\",\n+    email: \"\",\n+    website: \"\",\n+    position: \"\",\n+    affiliation: \"\",\n+    description: \"\",\n+    connections: [],\n+  });\n+\n+  const handleAddConnection = () => {\n+    // @ts-nocheck\n+    setFormData((prev) => ({\n+      ...prev,\n+      connections: [\n+        ...prev.connections,\n+        {\n+          advisor_id: \"\",\n+          relation: [],\n+          collaborations: [],\n+          latestCollaboration: \"\",\n+          relationFactor: \"\",\n+        },\n+      ],\n+    }));\n+  };\n+\n+  const handleConnectionChange = (index, field, value) => {\n+    const updatedConnections = formData.connections.map((connection, idx) => {\n+      if (idx === index) {\n+        return { ...connection, [field]: value };\n+      }\n+      return connection;\n+    });\n+    setFormData((prev) => ({ ...prev, connections: updatedConnections }));\n+  };\n+\n+  const handleAddRelation = (connectionIndex) => {\n+    const updatedConnections = formData.connections.map((connection, idx) => {\n+      if (idx === connectionIndex) {\n+        return {\n+          ...connection,\n+          relation: [\n+            ...connection.relation,\n+            {\n+              class: \"\",\n+              role: \"\",\n+              duration: {\n+                start: { year: \"\", month: \"\" },\n+                end: { year: \"\", month: \"\" },\n+              },\n+            },\n+          ],\n+        };\n+      }\n+      return connection;\n+    });\n+    setFormData((prev) => ({ ...prev, connections: updatedConnections }));\n+  };\n+\n+  // Handle field change\n+  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n+    const { name, value } = e.target;\n+    setFormData((prev) => ({ ...prev, [name]: value }));\n+  };\n+\n+  // Add tag\n+  const handleAddTag = () => {\n+    // @ts-ignore\n+    setFormData((prev) => ({ ...prev, tags: [...prev.tags, \"\"] }));\n+  };\n+\n+  // Remove tag\n+  const handleRemoveTag = (index: number) => {\n+    const newTags = formData.tags.filter((_, idx) => idx !== index);\n+    setFormData((prev) => ({ ...prev, tags: newTags }));\n+  };\n+\n+  // Update tag\n+  const handleTagChange = (value: any, index: number) => {\n+    const newTags = formData.tags.map((tag, idx) =>\n+      idx === index ? value : tag\n+    );\n+    // @ts-ignore\n+    setFormData((prev) => ({ ...prev, tags: newTags }));\n+  };\n+\n+  // Form submission\n+  const handleSubmit = (e: React.FormEvent) => {\n+    e.preventDefault();\n+    // Implement form submission logic here\n+    console.log(formData);\n+  };\n+\n+  return (\n+    <Box\n+      component=\"form\"\n+      onSubmit={handleSubmit}\n+      sx={{ position: \"relative\", width: \"100%\", mt: 2 }}\n+    >\n+      <IconButton\n+        onClick={onClose}\n+        sx={{ position: \"absolute\", right: 8, top: 8 }}\n+      >\n+        <CloseIcon />\n+      </IconButton>\n+      <CardContent>\n+        <Typography variant=\"h6\" gutterBottom>\n+          Upload New Advisor\n+        </Typography>\n+        <Grid container spacing={2} sx={{ mt: 3 }}>\n+          {/* Advisor Basic Information */}\n+          <Grid item xs={12} sm={6} md={4}>\n+            <TextField\n+              fullWidth\n+              label=\"Name\"\n+              name=\"name\"\n+              value={formData.name}\n+              onChange={handleChange}\n+            />\n+          </Grid>\n+          <Grid item xs={12} sm={6} md={4}>\n+            <TextField\n+              fullWidth\n+              label=\"Position\"\n+              name=\"position\"\n+              value={formData.position}\n+              onChange={handleChange}\n+            />\n+          </Grid>\n+          <Grid item xs={12} sm={6} md={4}>\n+            <TextField\n+              fullWidth\n+              label=\"Affiliation\"\n+              name=\"affiliation\"\n+              value={formData.affiliation}\n+              onChange={handleChange}\n+            />\n+          </Grid>\n+          {/* Social Links */}\n+          <Grid item xs={12} sm={6} md={3}>\n+            <TextField\n+              fullWidth\n+              label=\"GitHub\"\n+              name=\"github\"\n+              value={formData.github}\n+              onChange={handleChange}\n+            />\n+          </Grid>\n+          <Grid item xs={12} sm={6} md={3}>\n+            <TextField\n+              fullWidth\n+              label=\"Twitter\"\n+              name=\"twitter\"\n+              value={formData.twitter}\n+              onChange={handleChange}\n+            />\n+          </Grid>\n+          <Grid item xs={12} sm={6} md={3}>\n+            <TextField\n+              fullWidth\n+              label=\"Email\"\n+              name=\"email\"\n+              value={formData.email}\n+              onChange={handleChange}\n+            />\n+          </Grid>\n+          <Grid item xs={12} sm={6} md={3}>\n+            <TextField\n+              fullWidth\n+              label=\"Website\"\n+              name=\"website\"\n+              value={formData.website}\n+              onChange={handleChange}\n+            />\n+          </Grid>\n+          {/* Tags */}\n+          <Grid item xs={12}>\n+            <Typography variant=\"body1\" sx={{ mb: 1 }}>\n+              Tags\n+            </Typography>\n+            <Stack direction=\"column\" spacing={1}>\n+              {formData.tags.map((tag, index) => (\n+                <Box key={index} display=\"flex\" alignItems=\"center\">\n+                  <TextField\n+                    fullWidth\n+                    variant=\"outlined\"\n+                    size=\"small\"\n+                    value={tag}\n+                    onChange={(e) => handleTagChange(e.target.value, index)}\n+                    sx={{ mr: 1 }}\n+                  />\n+                  <IconButton\n+                    onClick={() => handleRemoveTag(index)}\n+                    size=\"small\"\n+                  >\n+                    <DeleteIcon />\n+                  </IconButton>\n+                </Box>\n+              ))}\n+            </Stack>\n+            <Button\n+              onClick={handleAddTag}\n+              startIcon={<AddIcon />}\n+              sx={{ mt: 1 }}\n+            >\n+              Add Tag\n+            </Button>\n+          </Grid>\n+          {/* Description */}\n+          <Grid item xs={12}>\n+            <TextField\n+              fullWidth\n+              label=\"Description\"\n+              name=\"description\"\n+              value={formData.description}\n+              onChange={handleChange}\n+              multiline\n+              rows={4}\n+            />\n+          </Grid>\n+        </Grid>\n+        <Box sx={{ display: \"flex\", justifyContent: \"flex-end\", mt: 2 }}>\n+          <Button type=\"submit\" variant=\"contained\">\n+            Submit\n+          </Button>\n+        </Box>\n+      </CardContent>\n+      <Typography variant=\"h6\" sx={{ mt: 2 }}>\n+        Connections\n+      </Typography>\n+      {formData.connections.map((connection, index) => (\n+        <Accordion key={index} defaultExpanded>\n+          <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n+            <Typography>Connection {index + 1}</Typography>\n+          </AccordionSummary>\n+          <AccordionDetails>\n+            <Stack spacing={2}>\n+              {/* Inputs for connection fields */}\n+              <TextField\n+                label=\"Advisor ID\"\n+                value={connection.advisor_id}\n+                onChange={(e) =>\n+                  handleConnectionChange(index, \"advisor_id\", e.target.value)\n+                }\n+                fullWidth\n+              />\n+              {/* Relation and Collaboration details */}\n+              <Button\n+                onClick={() => handleAddRelation(index)}\n+                startIcon={<AddIcon />}\n+              >\n+                Add Relation\n+              </Button>\n+              {/* Display Relations and Collaborations */}\n+            </Stack>\n+          </AccordionDetails>\n+        </Accordion>\n+      ))}\n+      <Button\n+        onClick={handleAddConnection}\n+        startIcon={<AddIcon />}\n+        sx={{ mt: 1 }}\n+      >\n+        Add Connection\n+      </Button>\n+      <Box sx={{ display: \"flex\", justifyContent: \"flex-end\", mt: 2 }}>\n+        <Button type=\"submit\" variant=\"contained\">\n+          Submit\n+        </Button>\n+      </Box>\n+    </Box>\n+  );\n+};\n+\n+export default UploadCard;\n"
                },
                {
                    "date": 1708762851778,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,310 +34,9 @@\n     connections: [],\n   });\n \n   const handleAddConnection = () => {\n-    // @ts-nocheck\n-    setFormData((prev) => ({\n-      ...prev,\n-      connections: [\n-        ...prev.connections,\n-        {\n-          advisor_id: \"\",\n-          relation: [],\n-          collaborations: [],\n-          latestCollaboration: \"\",\n-          relationFactor: \"\",\n-        },\n-      ],\n-    }));\n-  };\n-\n-  const handleConnectionChange = (index, field, value) => {\n-    const updatedConnections = formData.connections.map((connection, idx) => {\n-      if (idx === index) {\n-        return { ...connection, [field]: value };\n-      }\n-      return connection;\n-    });\n-    setFormData((prev) => ({ ...prev, connections: updatedConnections }));\n-  };\n-\n-  const handleAddRelation = (connectionIndex) => {\n-    const updatedConnections = formData.connections.map((connection, idx) => {\n-      if (idx === connectionIndex) {\n-        return {\n-          ...connection,\n-          relation: [\n-            ...connection.relation,\n-            {\n-              class: \"\",\n-              role: \"\",\n-              duration: {\n-                start: { year: \"\", month: \"\" },\n-                end: { year: \"\", month: \"\" },\n-              },\n-            },\n-          ],\n-        };\n-      }\n-      return connection;\n-    });\n-    setFormData((prev) => ({ ...prev, connections: updatedConnections }));\n-  };\n-\n-  // Handle field change\n-  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n-    const { name, value } = e.target;\n-    setFormData((prev) => ({ ...prev, [name]: value }));\n-  };\n-\n-  // Add tag\n-  const handleAddTag = () => {\n     // @ts-ignore\n-    setFormData((prev) => ({ ...prev, tags: [...prev.tags, \"\"] }));\n-  };\n-\n-  // Remove tag\n-  const handleRemoveTag = (index: number) => {\n-    const newTags = formData.tags.filter((_, idx) => idx !== index);\n-    setFormData((prev) => ({ ...prev, tags: newTags }));\n-  };\n-\n-  // Update tag\n-  const handleTagChange = (value: any, index: number) => {\n-    const newTags = formData.tags.map((tag, idx) =>\n-      idx === index ? value : tag\n-    );\n-    // @ts-ignore\n-    setFormData((prev) => ({ ...prev, tags: newTags }));\n-  };\n-\n-  // Form submission\n-  const handleSubmit = (e: React.FormEvent) => {\n-    e.preventDefault();\n-    // Implement form submission logic here\n-    console.log(formData);\n-  };\n-\n-  return (\n-    <Box\n-      component=\"form\"\n-      onSubmit={handleSubmit}\n-      sx={{ position: \"relative\", width: \"100%\", mt: 2 }}\n-    >\n-      <IconButton\n-        onClick={onClose}\n-        sx={{ position: \"absolute\", right: 8, top: 8 }}\n-      >\n-        <CloseIcon />\n-      </IconButton>\n-      <CardContent>\n-        <Typography variant=\"h6\" gutterBottom>\n-          Upload New Advisor\n-        </Typography>\n-        <Grid container spacing={2} sx={{ mt: 3 }}>\n-          {/* Advisor Basic Information */}\n-          <Grid item xs={12} sm={6} md={4}>\n-            <TextField\n-              fullWidth\n-              label=\"Name\"\n-              name=\"name\"\n-              value={formData.name}\n-              onChange={handleChange}\n-            />\n-          </Grid>\n-          <Grid item xs={12} sm={6} md={4}>\n-            <TextField\n-              fullWidth\n-              label=\"Position\"\n-              name=\"position\"\n-              value={formData.position}\n-              onChange={handleChange}\n-            />\n-          </Grid>\n-          <Grid item xs={12} sm={6} md={4}>\n-            <TextField\n-              fullWidth\n-              label=\"Affiliation\"\n-              name=\"affiliation\"\n-              value={formData.affiliation}\n-              onChange={handleChange}\n-            />\n-          </Grid>\n-          {/* Social Links */}\n-          <Grid item xs={12} sm={6} md={3}>\n-            <TextField\n-              fullWidth\n-              label=\"GitHub\"\n-              name=\"github\"\n-              value={formData.github}\n-              onChange={handleChange}\n-            />\n-          </Grid>\n-          <Grid item xs={12} sm={6} md={3}>\n-            <TextField\n-              fullWidth\n-              label=\"Twitter\"\n-              name=\"twitter\"\n-              value={formData.twitter}\n-              onChange={handleChange}\n-            />\n-          </Grid>\n-          <Grid item xs={12} sm={6} md={3}>\n-            <TextField\n-              fullWidth\n-              label=\"Email\"\n-              name=\"email\"\n-              value={formData.email}\n-              onChange={handleChange}\n-            />\n-          </Grid>\n-          <Grid item xs={12} sm={6} md={3}>\n-            <TextField\n-              fullWidth\n-              label=\"Website\"\n-              name=\"website\"\n-              value={formData.website}\n-              onChange={handleChange}\n-            />\n-          </Grid>\n-          {/* Tags */}\n-          <Grid item xs={12}>\n-            <Typography variant=\"body1\" sx={{ mb: 1 }}>\n-              Tags\n-            </Typography>\n-            <Stack direction=\"column\" spacing={1}>\n-              {formData.tags.map((tag, index) => (\n-                <Box key={index} display=\"flex\" alignItems=\"center\">\n-                  <TextField\n-                    fullWidth\n-                    variant=\"outlined\"\n-                    size=\"small\"\n-                    value={tag}\n-                    onChange={(e) => handleTagChange(e.target.value, index)}\n-                    sx={{ mr: 1 }}\n-                  />\n-                  <IconButton\n-                    onClick={() => handleRemoveTag(index)}\n-                    size=\"small\"\n-                  >\n-                    <DeleteIcon />\n-                  </IconButton>\n-                </Box>\n-              ))}\n-            </Stack>\n-            <Button\n-              onClick={handleAddTag}\n-              startIcon={<AddIcon />}\n-              sx={{ mt: 1 }}\n-            >\n-              Add Tag\n-            </Button>\n-          </Grid>\n-          {/* Description */}\n-          <Grid item xs={12}>\n-            <TextField\n-              fullWidth\n-              label=\"Description\"\n-              name=\"description\"\n-              value={formData.description}\n-              onChange={handleChange}\n-              multiline\n-              rows={4}\n-            />\n-          </Grid>\n-        </Grid>\n-        <Box sx={{ display: \"flex\", justifyContent: \"flex-end\", mt: 2 }}>\n-          <Button type=\"submit\" variant=\"contained\">\n-            Submit\n-          </Button>\n-        </Box>\n-      </CardContent>\n-      <Typography variant=\"h6\" sx={{ mt: 2 }}>\n-        Connections\n-      </Typography>\n-      {formData.connections.map((connection, index) => (\n-        <Accordion key={index} defaultExpanded>\n-          <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n-            <Typography>Connection {index + 1}</Typography>\n-          </AccordionSummary>\n-          <AccordionDetails>\n-            <Stack spacing={2}>\n-              {/* Inputs for connection fields */}\n-              <TextField\n-                label=\"Advisor ID\"\n-                value={connection.advisor_id}\n-                onChange={(e) =>\n-                  handleConnectionChange(index, \"advisor_id\", e.target.value)\n-                }\n-                fullWidth\n-              />\n-              {/* Relation and Collaboration details */}\n-              <Button\n-                onClick={() => handleAddRelation(index)}\n-                startIcon={<AddIcon />}\n-              >\n-                Add Relation\n-              </Button>\n-              {/* Display Relations and Collaborations */}\n-            </Stack>\n-          </AccordionDetails>\n-        </Accordion>\n-      ))}\n-      <Button\n-        onClick={handleAddConnection}\n-        startIcon={<AddIcon />}\n-        sx={{ mt: 1 }}\n-      >\n-        Add Connection\n-      </Button>\n-      <Box sx={{ display: \"flex\", justifyContent: \"flex-end\", mt: 2 }}>\n-        <Button type=\"submit\" variant=\"contained\">\n-          Submit\n-        </Button>\n-      </Box>\n-    </Box>\n-  );\n-};\n-\n-export default UploadCard;\n-import React, { useState } from \"react\";\n-import {\n-  Box,\n-  CardContent,\n-  Typography,\n-  IconButton,\n-  TextField,\n-  Button,\n-  Grid,\n-  Stack,\n-  Accordion,\n-  AccordionSummary,\n-  AccordionDetails,\n-} from \"@mui/material\";\n-import CloseIcon from \"@mui/icons-material/Close\";\n-import AddIcon from \"@mui/icons-material/Add\";\n-import DeleteIcon from \"@mui/icons-material/Delete\";\n-import ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\n-\n-const UploadCard = ({ onClose }: { onClose: any }) => {\n-  // Initial state setup for the form\n-  const [formData, setFormData] = useState({\n-    advisor_id: \"\",\n-    name: \"\",\n-    tags: [],\n-    avatar: \"\",\n-    github: \"\",\n-    twitter: \"\",\n-    email: \"\",\n-    website: \"\",\n-    position: \"\",\n-    affiliation: \"\",\n-    description: \"\",\n-    connections: [],\n-  });\n-\n-  const handleAddConnection = () => {\n     setFormData((prev) => ({\n       ...prev,\n       connections: [\n         ...prev.connections,\n"
                },
                {
                    "date": 1708762864058,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,8 +50,9 @@\n       ],\n     }));\n   };\n \n+  // @ts-ignore\n   const handleConnectionChange = (index, field, value) => {\n     const updatedConnections = formData.connections.map((connection, idx) => {\n       if (idx === index) {\n         return { ...connection, [field]: value };\n"
                },
                {
                    "date": 1708762873005,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,12 +54,14 @@\n   // @ts-ignore\n   const handleConnectionChange = (index, field, value) => {\n     const updatedConnections = formData.connections.map((connection, idx) => {\n       if (idx === index) {\n+        // @ts-ignore\n         return { ...connection, [field]: value };\n       }\n       return connection;\n     });\n+    // @ts-ignore\n     setFormData((prev) => ({ ...prev, connections: updatedConnections }));\n   };\n \n   const handleAddRelation = (connectionIndex) => {\n"
                },
                {
                    "date": 1708762882578,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,305 @@\n+import React, { useState } from \"react\";\n+import {\n+  Box,\n+  CardContent,\n+  Typography,\n+  IconButton,\n+  TextField,\n+  Button,\n+  Grid,\n+  Stack,\n+  Accordion,\n+  AccordionSummary,\n+  AccordionDetails,\n+} from \"@mui/material\";\n+import CloseIcon from \"@mui/icons-material/Close\";\n+import AddIcon from \"@mui/icons-material/Add\";\n+import DeleteIcon from \"@mui/icons-material/Delete\";\n+import ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\n+\n+const UploadCard = ({ onClose }: { onClose: any }) => {\n+  // Initial state setup for the form\n+  const [formData, setFormData] = useState({\n+    advisor_id: \"\",\n+    name: \"\",\n+    tags: [],\n+    avatar: \"\",\n+    github: \"\",\n+    twitter: \"\",\n+    email: \"\",\n+    website: \"\",\n+    position: \"\",\n+    affiliation: \"\",\n+    description: \"\",\n+    connections: [],\n+  });\n+\n+  const handleAddConnection = () => {\n+    // @ts-ignore\n+    setFormData((prev) => ({\n+      ...prev,\n+      connections: [\n+        ...prev.connections,\n+        {\n+          advisor_id: \"\",\n+          relation: [],\n+          collaborations: [],\n+          latestCollaboration: \"\",\n+          relationFactor: \"\",\n+        },\n+      ],\n+    }));\n+  };\n+\n+  // @ts-ignore\n+  const handleConnectionChange = (index, field, value) => {\n+    const updatedConnections = formData.connections.map((connection, idx) => {\n+      if (idx === index) {\n+        // @ts-ignore\n+        return { ...connection, [field]: value };\n+      }\n+      return connection;\n+    });\n+    // @ts-ignore\n+    setFormData((prev) => ({ ...prev, connections: updatedConnections }));\n+  };\n+\n+  const handleAddRelation = (connectionIndex: number) => {\n+    const updatedConnections = formData.connections.map((connection, idx) => {\n+      if (idx === connectionIndex) {\n+        return {\n+          ...connection,\n+          relation: [\n+            ...connection.relation,\n+            {\n+              class: \"\",\n+              role: \"\",\n+              duration: {\n+                start: { year: \"\", month: \"\" },\n+                end: { year: \"\", month: \"\" },\n+              },\n+            },\n+          ],\n+        };\n+      }\n+      return connection;\n+    });\n+    setFormData((prev) => ({ ...prev, connections: updatedConnections }));\n+  };\n+\n+  // Handle field change\n+  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n+    const { name, value } = e.target;\n+    setFormData((prev) => ({ ...prev, [name]: value }));\n+  };\n+\n+  // Add tag\n+  const handleAddTag = () => {\n+    // @ts-ignore\n+    setFormData((prev) => ({ ...prev, tags: [...prev.tags, \"\"] }));\n+  };\n+\n+  // Remove tag\n+  const handleRemoveTag = (index: number) => {\n+    const newTags = formData.tags.filter((_, idx) => idx !== index);\n+    setFormData((prev) => ({ ...prev, tags: newTags }));\n+  };\n+\n+  // Update tag\n+  const handleTagChange = (value: any, index: number) => {\n+    const newTags = formData.tags.map((tag, idx) =>\n+      idx === index ? value : tag\n+    );\n+    // @ts-ignore\n+    setFormData((prev) => ({ ...prev, tags: newTags }));\n+  };\n+\n+  // Form submission\n+  const handleSubmit = (e: React.FormEvent) => {\n+    e.preventDefault();\n+    // Implement form submission logic here\n+    console.log(formData);\n+  };\n+\n+  return (\n+    <Box\n+      component=\"form\"\n+      onSubmit={handleSubmit}\n+      sx={{ position: \"relative\", width: \"100%\", mt: 2 }}\n+    >\n+      <IconButton\n+        onClick={onClose}\n+        sx={{ position: \"absolute\", right: 8, top: 8 }}\n+      >\n+        <CloseIcon />\n+      </IconButton>\n+      <CardContent>\n+        <Typography variant=\"h6\" gutterBottom>\n+          Upload New Advisor\n+        </Typography>\n+        <Grid container spacing={2} sx={{ mt: 3 }}>\n+          {/* Advisor Basic Information */}\n+          <Grid item xs={12} sm={6} md={4}>\n+            <TextField\n+              fullWidth\n+              label=\"Name\"\n+              name=\"name\"\n+              value={formData.name}\n+              onChange={handleChange}\n+            />\n+          </Grid>\n+          <Grid item xs={12} sm={6} md={4}>\n+            <TextField\n+              fullWidth\n+              label=\"Position\"\n+              name=\"position\"\n+              value={formData.position}\n+              onChange={handleChange}\n+            />\n+          </Grid>\n+          <Grid item xs={12} sm={6} md={4}>\n+            <TextField\n+              fullWidth\n+              label=\"Affiliation\"\n+              name=\"affiliation\"\n+              value={formData.affiliation}\n+              onChange={handleChange}\n+            />\n+          </Grid>\n+          {/* Social Links */}\n+          <Grid item xs={12} sm={6} md={3}>\n+            <TextField\n+              fullWidth\n+              label=\"GitHub\"\n+              name=\"github\"\n+              value={formData.github}\n+              onChange={handleChange}\n+            />\n+          </Grid>\n+          <Grid item xs={12} sm={6} md={3}>\n+            <TextField\n+              fullWidth\n+              label=\"Twitter\"\n+              name=\"twitter\"\n+              value={formData.twitter}\n+              onChange={handleChange}\n+            />\n+          </Grid>\n+          <Grid item xs={12} sm={6} md={3}>\n+            <TextField\n+              fullWidth\n+              label=\"Email\"\n+              name=\"email\"\n+              value={formData.email}\n+              onChange={handleChange}\n+            />\n+          </Grid>\n+          <Grid item xs={12} sm={6} md={3}>\n+            <TextField\n+              fullWidth\n+              label=\"Website\"\n+              name=\"website\"\n+              value={formData.website}\n+              onChange={handleChange}\n+            />\n+          </Grid>\n+          {/* Tags */}\n+          <Grid item xs={12}>\n+            <Typography variant=\"body1\" sx={{ mb: 1 }}>\n+              Tags\n+            </Typography>\n+            <Stack direction=\"column\" spacing={1}>\n+              {formData.tags.map((tag, index) => (\n+                <Box key={index} display=\"flex\" alignItems=\"center\">\n+                  <TextField\n+                    fullWidth\n+                    variant=\"outlined\"\n+                    size=\"small\"\n+                    value={tag}\n+                    onChange={(e) => handleTagChange(e.target.value, index)}\n+                    sx={{ mr: 1 }}\n+                  />\n+                  <IconButton\n+                    onClick={() => handleRemoveTag(index)}\n+                    size=\"small\"\n+                  >\n+                    <DeleteIcon />\n+                  </IconButton>\n+                </Box>\n+              ))}\n+            </Stack>\n+            <Button\n+              onClick={handleAddTag}\n+              startIcon={<AddIcon />}\n+              sx={{ mt: 1 }}\n+            >\n+              Add Tag\n+            </Button>\n+          </Grid>\n+          {/* Description */}\n+          <Grid item xs={12}>\n+            <TextField\n+              fullWidth\n+              label=\"Description\"\n+              name=\"description\"\n+              value={formData.description}\n+              onChange={handleChange}\n+              multiline\n+              rows={4}\n+            />\n+          </Grid>\n+        </Grid>\n+        <Box sx={{ display: \"flex\", justifyContent: \"flex-end\", mt: 2 }}>\n+          <Button type=\"submit\" variant=\"contained\">\n+            Submit\n+          </Button>\n+        </Box>\n+      </CardContent>\n+      <Typography variant=\"h6\" sx={{ mt: 2 }}>\n+        Connections\n+      </Typography>\n+      {formData.connections.map((connection, index) => (\n+        <Accordion key={index} defaultExpanded>\n+          <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n+            <Typography>Connection {index + 1}</Typography>\n+          </AccordionSummary>\n+          <AccordionDetails>\n+            <Stack spacing={2}>\n+              {/* Inputs for connection fields */}\n+              <TextField\n+                label=\"Advisor ID\"\n+                value={connection.advisor_id}\n+                onChange={(e) =>\n+                  handleConnectionChange(index, \"advisor_id\", e.target.value)\n+                }\n+                fullWidth\n+              />\n+              {/* Relation and Collaboration details */}\n+              <Button\n+                onClick={() => handleAddRelation(index)}\n+                startIcon={<AddIcon />}\n+              >\n+                Add Relation\n+              </Button>\n+              {/* Display Relations and Collaborations */}\n+            </Stack>\n+          </AccordionDetails>\n+        </Accordion>\n+      ))}\n+      <Button\n+        onClick={handleAddConnection}\n+        startIcon={<AddIcon />}\n+        sx={{ mt: 1 }}\n+      >\n+        Add Connection\n+      </Button>\n+      <Box sx={{ display: \"flex\", justifyContent: \"flex-end\", mt: 2 }}>\n+        <Button type=\"submit\" variant=\"contained\">\n+          Submit\n+        </Button>\n+      </Box>\n+    </Box>\n+  );\n+};\n+\n+export default UploadCard;\n"
                },
                {
                    "date": 1708762888042,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,8 +67,9 @@\n   const handleAddRelation = (connectionIndex: number) => {\n     const updatedConnections = formData.connections.map((connection, idx) => {\n       if (idx === connectionIndex) {\n         return {\n+          // @ts-ignore\n           ...connection,\n           relation: [\n             ...connection.relation,\n             {\n@@ -302,309 +303,4 @@\n   );\n };\n \n export default UploadCard;\n-import React, { useState } from \"react\";\n-import {\n-  Box,\n-  CardContent,\n-  Typography,\n-  IconButton,\n-  TextField,\n-  Button,\n-  Grid,\n-  Stack,\n-  Accordion,\n-  AccordionSummary,\n-  AccordionDetails,\n-} from \"@mui/material\";\n-import CloseIcon from \"@mui/icons-material/Close\";\n-import AddIcon from \"@mui/icons-material/Add\";\n-import DeleteIcon from \"@mui/icons-material/Delete\";\n-import ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\n-\n-const UploadCard = ({ onClose }: { onClose: any }) => {\n-  // Initial state setup for the form\n-  const [formData, setFormData] = useState({\n-    advisor_id: \"\",\n-    name: \"\",\n-    tags: [],\n-    avatar: \"\",\n-    github: \"\",\n-    twitter: \"\",\n-    email: \"\",\n-    website: \"\",\n-    position: \"\",\n-    affiliation: \"\",\n-    description: \"\",\n-    connections: [],\n-  });\n-\n-  const handleAddConnection = () => {\n-    // @ts-ignore\n-    setFormData((prev) => ({\n-      ...prev,\n-      connections: [\n-        ...prev.connections,\n-        {\n-          advisor_id: \"\",\n-          relation: [],\n-          collaborations: [],\n-          latestCollaboration: \"\",\n-          relationFactor: \"\",\n-        },\n-      ],\n-    }));\n-  };\n-\n-  // @ts-ignore\n-  const handleConnectionChange = (index, field, value) => {\n-    const updatedConnections = formData.connections.map((connection, idx) => {\n-      if (idx === index) {\n-        // @ts-ignore\n-        return { ...connection, [field]: value };\n-      }\n-      return connection;\n-    });\n-    // @ts-ignore\n-    setFormData((prev) => ({ ...prev, connections: updatedConnections }));\n-  };\n-\n-  const handleAddRelation = (connectionIndex) => {\n-    const updatedConnections = formData.connections.map((connection, idx) => {\n-      if (idx === connectionIndex) {\n-        return {\n-          ...connection,\n-          relation: [\n-            ...connection.relation,\n-            {\n-              class: \"\",\n-              role: \"\",\n-              duration: {\n-                start: { year: \"\", month: \"\" },\n-                end: { year: \"\", month: \"\" },\n-              },\n-            },\n-          ],\n-        };\n-      }\n-      return connection;\n-    });\n-    setFormData((prev) => ({ ...prev, connections: updatedConnections }));\n-  };\n-\n-  // Handle field change\n-  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n-    const { name, value } = e.target;\n-    setFormData((prev) => ({ ...prev, [name]: value }));\n-  };\n-\n-  // Add tag\n-  const handleAddTag = () => {\n-    // @ts-ignore\n-    setFormData((prev) => ({ ...prev, tags: [...prev.tags, \"\"] }));\n-  };\n-\n-  // Remove tag\n-  const handleRemoveTag = (index: number) => {\n-    const newTags = formData.tags.filter((_, idx) => idx !== index);\n-    setFormData((prev) => ({ ...prev, tags: newTags }));\n-  };\n-\n-  // Update tag\n-  const handleTagChange = (value: any, index: number) => {\n-    const newTags = formData.tags.map((tag, idx) =>\n-      idx === index ? value : tag\n-    );\n-    // @ts-ignore\n-    setFormData((prev) => ({ ...prev, tags: newTags }));\n-  };\n-\n-  // Form submission\n-  const handleSubmit = (e: React.FormEvent) => {\n-    e.preventDefault();\n-    // Implement form submission logic here\n-    console.log(formData);\n-  };\n-\n-  return (\n-    <Box\n-      component=\"form\"\n-      onSubmit={handleSubmit}\n-      sx={{ position: \"relative\", width: \"100%\", mt: 2 }}\n-    >\n-      <IconButton\n-        onClick={onClose}\n-        sx={{ position: \"absolute\", right: 8, top: 8 }}\n-      >\n-        <CloseIcon />\n-      </IconButton>\n-      <CardContent>\n-        <Typography variant=\"h6\" gutterBottom>\n-          Upload New Advisor\n-        </Typography>\n-        <Grid container spacing={2} sx={{ mt: 3 }}>\n-          {/* Advisor Basic Information */}\n-          <Grid item xs={12} sm={6} md={4}>\n-            <TextField\n-              fullWidth\n-              label=\"Name\"\n-              name=\"name\"\n-              value={formData.name}\n-              onChange={handleChange}\n-            />\n-          </Grid>\n-          <Grid item xs={12} sm={6} md={4}>\n-            <TextField\n-              fullWidth\n-              label=\"Position\"\n-              name=\"position\"\n-              value={formData.position}\n-              onChange={handleChange}\n-            />\n-          </Grid>\n-          <Grid item xs={12} sm={6} md={4}>\n-            <TextField\n-              fullWidth\n-              label=\"Affiliation\"\n-              name=\"affiliation\"\n-              value={formData.affiliation}\n-              onChange={handleChange}\n-            />\n-          </Grid>\n-          {/* Social Links */}\n-          <Grid item xs={12} sm={6} md={3}>\n-            <TextField\n-              fullWidth\n-              label=\"GitHub\"\n-              name=\"github\"\n-              value={formData.github}\n-              onChange={handleChange}\n-            />\n-          </Grid>\n-          <Grid item xs={12} sm={6} md={3}>\n-            <TextField\n-              fullWidth\n-              label=\"Twitter\"\n-              name=\"twitter\"\n-              value={formData.twitter}\n-              onChange={handleChange}\n-            />\n-          </Grid>\n-          <Grid item xs={12} sm={6} md={3}>\n-            <TextField\n-              fullWidth\n-              label=\"Email\"\n-              name=\"email\"\n-              value={formData.email}\n-              onChange={handleChange}\n-            />\n-          </Grid>\n-          <Grid item xs={12} sm={6} md={3}>\n-            <TextField\n-              fullWidth\n-              label=\"Website\"\n-              name=\"website\"\n-              value={formData.website}\n-              onChange={handleChange}\n-            />\n-          </Grid>\n-          {/* Tags */}\n-          <Grid item xs={12}>\n-            <Typography variant=\"body1\" sx={{ mb: 1 }}>\n-              Tags\n-            </Typography>\n-            <Stack direction=\"column\" spacing={1}>\n-              {formData.tags.map((tag, index) => (\n-                <Box key={index} display=\"flex\" alignItems=\"center\">\n-                  <TextField\n-                    fullWidth\n-                    variant=\"outlined\"\n-                    size=\"small\"\n-                    value={tag}\n-                    onChange={(e) => handleTagChange(e.target.value, index)}\n-                    sx={{ mr: 1 }}\n-                  />\n-                  <IconButton\n-                    onClick={() => handleRemoveTag(index)}\n-                    size=\"small\"\n-                  >\n-                    <DeleteIcon />\n-                  </IconButton>\n-                </Box>\n-              ))}\n-            </Stack>\n-            <Button\n-              onClick={handleAddTag}\n-              startIcon={<AddIcon />}\n-              sx={{ mt: 1 }}\n-            >\n-              Add Tag\n-            </Button>\n-          </Grid>\n-          {/* Description */}\n-          <Grid item xs={12}>\n-            <TextField\n-              fullWidth\n-              label=\"Description\"\n-              name=\"description\"\n-              value={formData.description}\n-              onChange={handleChange}\n-              multiline\n-              rows={4}\n-            />\n-          </Grid>\n-        </Grid>\n-        <Box sx={{ display: \"flex\", justifyContent: \"flex-end\", mt: 2 }}>\n-          <Button type=\"submit\" variant=\"contained\">\n-            Submit\n-          </Button>\n-        </Box>\n-      </CardContent>\n-      <Typography variant=\"h6\" sx={{ mt: 2 }}>\n-        Connections\n-      </Typography>\n-      {formData.connections.map((connection, index) => (\n-        <Accordion key={index} defaultExpanded>\n-          <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n-            <Typography>Connection {index + 1}</Typography>\n-          </AccordionSummary>\n-          <AccordionDetails>\n-            <Stack spacing={2}>\n-              {/* Inputs for connection fields */}\n-              <TextField\n-                label=\"Advisor ID\"\n-                value={connection.advisor_id}\n-                onChange={(e) =>\n-                  handleConnectionChange(index, \"advisor_id\", e.target.value)\n-                }\n-                fullWidth\n-              />\n-              {/* Relation and Collaboration details */}\n-              <Button\n-                onClick={() => handleAddRelation(index)}\n-                startIcon={<AddIcon />}\n-              >\n-                Add Relation\n-              </Button>\n-              {/* Display Relations and Collaborations */}\n-            </Stack>\n-          </AccordionDetails>\n-        </Accordion>\n-      ))}\n-      <Button\n-        onClick={handleAddConnection}\n-        startIcon={<AddIcon />}\n-        sx={{ mt: 1 }}\n-      >\n-        Add Connection\n-      </Button>\n-      <Box sx={{ display: \"flex\", justifyContent: \"flex-end\", mt: 2 }}>\n-        <Button type=\"submit\" variant=\"contained\">\n-          Submit\n-        </Button>\n-      </Box>\n-    </Box>\n-  );\n-};\n-\n-export default UploadCard;\n"
                },
                {
                    "date": 1708762893902,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,8 +84,10 @@\n         };\n       }\n       return connection;\n     });\n+\n+    // @ts-ignore\n     setFormData((prev) => ({ ...prev, connections: updatedConnections }));\n   };\n \n   // Handle field change\n"
                },
                {
                    "date": 1708762978227,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -256,52 +256,53 @@\n           <Button type=\"submit\" variant=\"contained\">\n             Submit\n           </Button>\n         </Box>\n+\n+        <Typography variant=\"h6\" sx={{ mt: 2 }}>\n+          Connections\n+        </Typography>\n+        {formData.connections.map((connection, index) => (\n+          <Accordion key={index} defaultExpanded>\n+            <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n+              <Typography>Connection {index + 1}</Typography>\n+            </AccordionSummary>\n+            <AccordionDetails>\n+              <Stack spacing={2}>\n+                {/* Inputs for connection fields */}\n+                <TextField\n+                  label=\"Advisor ID\"\n+                  value={connection.advisor_id}\n+                  onChange={(e) =>\n+                    handleConnectionChange(index, \"advisor_id\", e.target.value)\n+                  }\n+                  fullWidth\n+                />\n+                {/* Relation and Collaboration details */}\n+                <Button\n+                  onClick={() => handleAddRelation(index)}\n+                  startIcon={<AddIcon />}\n+                >\n+                  Add Relation\n+                </Button>\n+                {/* Display Relations and Collaborations */}\n+              </Stack>\n+            </AccordionDetails>\n+          </Accordion>\n+        ))}\n+        <Button\n+          onClick={handleAddConnection}\n+          startIcon={<AddIcon />}\n+          sx={{ mt: 1 }}\n+        >\n+          Add Connection\n+        </Button>\n+        <Box sx={{ display: \"flex\", justifyContent: \"flex-end\", mt: 2 }}>\n+          <Button type=\"submit\" variant=\"contained\">\n+            Submit\n+          </Button>\n+        </Box>\n       </CardContent>\n-      <Typography variant=\"h6\" sx={{ mt: 2 }}>\n-        Connections\n-      </Typography>\n-      {formData.connections.map((connection, index) => (\n-        <Accordion key={index} defaultExpanded>\n-          <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n-            <Typography>Connection {index + 1}</Typography>\n-          </AccordionSummary>\n-          <AccordionDetails>\n-            <Stack spacing={2}>\n-              {/* Inputs for connection fields */}\n-              <TextField\n-                label=\"Advisor ID\"\n-                value={connection.advisor_id}\n-                onChange={(e) =>\n-                  handleConnectionChange(index, \"advisor_id\", e.target.value)\n-                }\n-                fullWidth\n-              />\n-              {/* Relation and Collaboration details */}\n-              <Button\n-                onClick={() => handleAddRelation(index)}\n-                startIcon={<AddIcon />}\n-              >\n-                Add Relation\n-              </Button>\n-              {/* Display Relations and Collaborations */}\n-            </Stack>\n-          </AccordionDetails>\n-        </Accordion>\n-      ))}\n-      <Button\n-        onClick={handleAddConnection}\n-        startIcon={<AddIcon />}\n-        sx={{ mt: 1 }}\n-      >\n-        Add Connection\n-      </Button>\n-      <Box sx={{ display: \"flex\", justifyContent: \"flex-end\", mt: 2 }}>\n-        <Button type=\"submit\" variant=\"contained\">\n-          Submit\n-        </Button>\n-      </Box>\n     </Box>\n   );\n };\n \n"
                },
                {
                    "date": 1708762994957,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -270,8 +270,9 @@\n               <Stack spacing={2}>\n                 {/* Inputs for connection fields */}\n                 <TextField\n                   label=\"Advisor ID\"\n+                  // @ts-ignore\n                   value={connection.advisor_id}\n                   onChange={(e) =>\n                     handleConnectionChange(index, \"advisor_id\", e.target.value)\n                   }\n"
                },
                {
                    "date": 1708763011062,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -257,9 +257,9 @@\n             Submit\n           </Button>\n         </Box>\n \n-        <Typography variant=\"h6\" sx={{ mt: 2 }}>\n+        <Typography variant=\"h6\" sx={{ mt: 2, mb: 2 }}>\n           Connections\n         </Typography>\n         {formData.connections.map((connection, index) => (\n           <Accordion key={index} defaultExpanded>\n"
                },
                {
                    "date": 1708763016550,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -257,9 +257,9 @@\n             Submit\n           </Button>\n         </Box>\n \n-        <Typography variant=\"h6\" sx={{ mt: 2, mb: 2 }}>\n+        <Typography variant=\"h6\" sx={{ mt: 2, mb: 5 }}>\n           Connections\n         </Typography>\n         {formData.connections.map((connection, index) => (\n           <Accordion key={index} defaultExpanded>\n"
                },
                {
                    "date": 1708763036251,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -251,13 +251,8 @@\n               rows={4}\n             />\n           </Grid>\n         </Grid>\n-        <Box sx={{ display: \"flex\", justifyContent: \"flex-end\", mt: 2 }}>\n-          <Button type=\"submit\" variant=\"contained\">\n-            Submit\n-          </Button>\n-        </Box>\n \n         <Typography variant=\"h6\" sx={{ mt: 2, mb: 5 }}>\n           Connections\n         </Typography>\n"
                },
                {
                    "date": 1708763114259,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,305 @@\n+import React, { useState } from \"react\";\n+import {\n+  Box,\n+  CardContent,\n+  Typography,\n+  IconButton,\n+  TextField,\n+  Button,\n+  Grid,\n+  Stack,\n+  Accordion,\n+  AccordionSummary,\n+  AccordionDetails,\n+} from \"@mui/material\";\n+import CloseIcon from \"@mui/icons-material/Close\";\n+import AddIcon from \"@mui/icons-material/Add\";\n+import DeleteIcon from \"@mui/icons-material/Delete\";\n+import ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\n+\n+const UploadCard = ({ onClose }: { onClose: any }) => {\n+  // Initial state setup for the form\n+  const [formData, setFormData] = useState({\n+    advisor_id: \"\",\n+    name: \"\",\n+    tags: [],\n+    avatar: \"\",\n+    github: \"\",\n+    twitter: \"\",\n+    email: \"\",\n+    website: \"\",\n+    position: \"\",\n+    affiliation: \"\",\n+    description: \"\",\n+    connections: [],\n+  });\n+\n+  const handleAddConnection = () => {\n+    // @ts-ignore\n+    setFormData((prev) => ({\n+      ...prev,\n+      connections: [\n+        ...prev.connections,\n+        {\n+          advisor_id: \"\",\n+          relation: [],\n+          collaborations: [],\n+          latestCollaboration: \"\",\n+          relationFactor: \"\",\n+        },\n+      ],\n+    }));\n+  };\n+\n+  // @ts-ignore\n+  const handleConnectionChange = (index, field, value) => {\n+    const updatedConnections = formData.connections.map((connection, idx) => {\n+      if (idx === index) {\n+        // @ts-ignore\n+        return { ...connection, [field]: value };\n+      }\n+      return connection;\n+    });\n+    // @ts-ignore\n+    setFormData((prev) => ({ ...prev, connections: updatedConnections }));\n+  };\n+\n+  const handleAddRelation = (connectionIndex: number) => {\n+    const updatedConnections = formData.connections.map((connection, idx) => {\n+      if (idx === connectionIndex) {\n+        return {\n+          // @ts-ignore\n+          ...connection,\n+          relation: [\n+            ...connection.relation,\n+            {\n+              class: \"\",\n+              role: \"\",\n+              duration: {\n+                start: { year: \"\", month: \"\" },\n+                end: { year: \"\", month: \"\" },\n+              },\n+            },\n+          ],\n+        };\n+      }\n+      return connection;\n+    });\n+\n+    // @ts-ignore\n+    setFormData((prev) => ({ ...prev, connections: updatedConnections }));\n+  };\n+\n+  // Handle field change\n+  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n+    const { name, value } = e.target;\n+    setFormData((prev) => ({ ...prev, [name]: value }));\n+  };\n+\n+  // Add tag\n+  const handleAddTag = () => {\n+    // @ts-ignore\n+    setFormData((prev) => ({ ...prev, tags: [...prev.tags, \"\"] }));\n+  };\n+\n+  // Remove tag\n+  const handleRemoveTag = (index: number) => {\n+    const newTags = formData.tags.filter((_, idx) => idx !== index);\n+    setFormData((prev) => ({ ...prev, tags: newTags }));\n+  };\n+\n+  // Update tag\n+  const handleTagChange = (value: any, index: number) => {\n+    const newTags = formData.tags.map((tag, idx) =>\n+      idx === index ? value : tag\n+    );\n+    // @ts-ignore\n+    setFormData((prev) => ({ ...prev, tags: newTags }));\n+  };\n+\n+  // Form submission\n+  const handleSubmit = (e: React.FormEvent) => {\n+    e.preventDefault();\n+    // Implement form submission logic here\n+    console.log(formData);\n+  };\n+\n+  return (\n+    <Box\n+      component=\"form\"\n+      onSubmit={handleSubmit}\n+      sx={{ position: \"relative\", width: \"100%\", mt: 2 }}\n+    >\n+      <IconButton\n+        onClick={onClose}\n+        sx={{ position: \"absolute\", right: 8, top: 8 }}\n+      >\n+        <CloseIcon />\n+      </IconButton>\n+      <CardContent>\n+        <Typography variant=\"h6\" gutterBottom>\n+          Upload New Advisor\n+        </Typography>\n+        <Grid container spacing={2} sx={{ mt: 3 }}>\n+          {/* Advisor Basic Information */}\n+          <Grid item xs={12} sm={6} md={4}>\n+            <TextField\n+              fullWidth\n+              label=\"Name\"\n+              name=\"name\"\n+              value={formData.name}\n+              onChange={handleChange}\n+            />\n+          </Grid>\n+          <Grid item xs={12} sm={6} md={4}>\n+            <TextField\n+              fullWidth\n+              label=\"Position\"\n+              name=\"position\"\n+              value={formData.position}\n+              onChange={handleChange}\n+            />\n+          </Grid>\n+          <Grid item xs={12} sm={6} md={4}>\n+            <TextField\n+              fullWidth\n+              label=\"Affiliation\"\n+              name=\"affiliation\"\n+              value={formData.affiliation}\n+              onChange={handleChange}\n+            />\n+          </Grid>\n+          {/* Social Links */}\n+          <Grid item xs={12} sm={6} md={3}>\n+            <TextField\n+              fullWidth\n+              label=\"GitHub\"\n+              name=\"github\"\n+              value={formData.github}\n+              onChange={handleChange}\n+            />\n+          </Grid>\n+          <Grid item xs={12} sm={6} md={3}>\n+            <TextField\n+              fullWidth\n+              label=\"Twitter\"\n+              name=\"twitter\"\n+              value={formData.twitter}\n+              onChange={handleChange}\n+            />\n+          </Grid>\n+          <Grid item xs={12} sm={6} md={3}>\n+            <TextField\n+              fullWidth\n+              label=\"Email\"\n+              name=\"email\"\n+              value={formData.email}\n+              onChange={handleChange}\n+            />\n+          </Grid>\n+          <Grid item xs={12} sm={6} md={3}>\n+            <TextField\n+              fullWidth\n+              label=\"Website\"\n+              name=\"website\"\n+              value={formData.website}\n+              onChange={handleChange}\n+            />\n+          </Grid>\n+          {/* Tags */}\n+          <Grid item xs={12}>\n+            <Typography variant=\"body1\" sx={{ mb: 1 }}>\n+              Tags\n+            </Typography>\n+            <Stack direction=\"column\" spacing={1}>\n+              {formData.tags.map((tag, index) => (\n+                <Box key={index} display=\"flex\" alignItems=\"center\">\n+                  <TextField\n+                    fullWidth\n+                    variant=\"outlined\"\n+                    size=\"small\"\n+                    value={tag}\n+                    onChange={(e) => handleTagChange(e.target.value, index)}\n+                    sx={{ mr: 1 }}\n+                  />\n+                  <IconButton\n+                    onClick={() => handleRemoveTag(index)}\n+                    size=\"small\"\n+                  >\n+                    <DeleteIcon />\n+                  </IconButton>\n+                </Box>\n+              ))}\n+            </Stack>\n+            <Button\n+              onClick={handleAddTag}\n+              startIcon={<AddIcon />}\n+              sx={{ mt: 1 }}\n+            >\n+              Add Tag\n+            </Button>\n+          </Grid>\n+          {/* Description */}\n+          <Grid item xs={12}>\n+            <TextField\n+              fullWidth\n+              label=\"Description\"\n+              name=\"description\"\n+              value={formData.description}\n+              onChange={handleChange}\n+              multiline\n+              rows={4}\n+            />\n+          </Grid>\n+        </Grid>\n+\n+        <Typography variant=\"h6\" sx={{ mt: 2, mb: 5 }}>\n+          Connections\n+        </Typography>\n+        {formData.connections.map((connection, index) => (\n+          <Accordion key={index} defaultExpanded>\n+            <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n+              <Typography>Connection {index + 1}</Typography>\n+            </AccordionSummary>\n+            <AccordionDetails>\n+              <Stack spacing={2}>\n+                {/* Inputs for connection fields */}\n+                <TextField\n+                  label=\"Advisor ID\"\n+                  // @ts-ignore\n+                  value={connection.advisor_id}\n+                  onChange={(e) =>\n+                    handleConnectionChange(index, \"advisor_id\", e.target.value)\n+                  }\n+                  fullWidth\n+                />\n+                {/* Relation and Collaboration details */}\n+                <Button\n+                  onClick={() => handleAddRelation(index)}\n+                  startIcon={<AddIcon />}\n+                >\n+                  Add Relation\n+                </Button>\n+                {/* Display Relations and Collaborations */}\n+              </Stack>\n+            </AccordionDetails>\n+          </Accordion>\n+        ))}\n+        <Button\n+          onClick={handleAddConnection}\n+          startIcon={<AddIcon />}\n+          sx={{ mt: 1 }}\n+        >\n+          Add Connection\n+        </Button>\n+        <Box sx={{ display: \"flex\", justifyContent: \"flex-end\", mt: 2 }}>\n+          <Button type=\"submit\" variant=\"contained\">\n+            Submit\n+          </Button>\n+        </Box>\n+      </CardContent>\n+    </Box>\n+  );\n+};\n+\n+export default UploadCard;\n"
                },
                {
                    "date": 1708763126219,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,306 @@\n+import React, { useState } from \"react\";\n+import {\n+  Box,\n+  CardContent,\n+  Typography,\n+  IconButton,\n+  TextField,\n+  Button,\n+  Grid,\n+  Stack,\n+  Accordion,\n+  AccordionSummary,\n+  AccordionDetails,\n+} from \"@mui/material\";\n+import CloseIcon from \"@mui/icons-material/Close\";\n+import AddIcon from \"@mui/icons-material/Add\";\n+import DeleteIcon from \"@mui/icons-material/Delete\";\n+import ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\n+\n+const UploadCard = ({ onClose }: { onClose: any }) => {\n+  // Initial state setup for the form\n+  const [formData, setFormData] = useState({\n+    advisor_id: \"\",\n+    name: \"\",\n+    tags: [],\n+    avatar: \"\",\n+    github: \"\",\n+    twitter: \"\",\n+    email: \"\",\n+    website: \"\",\n+    position: \"\",\n+    affiliation: \"\",\n+    description: \"\",\n+    connections: [],\n+  });\n+\n+  const handleAddConnection = () => {\n+    // @ts-ignore\n+    setFormData((prev) => ({\n+      ...prev,\n+      connections: [\n+        ...prev.connections,\n+        {\n+          advisor_id: \"\",\n+          relation: [],\n+          collaborations: [],\n+          latestCollaboration: \"\",\n+          relationFactor: \"\",\n+        },\n+      ],\n+    }));\n+  };\n+\n+  // @ts-ignore\n+  const handleConnectionChange = (index, field, value) => {\n+    const updatedConnections = formData.connections.map((connection, idx) => {\n+      if (idx === index) {\n+        // @ts-ignore\n+        return { ...connection, [field]: value };\n+      }\n+      return connection;\n+    });\n+    // @ts-ignore\n+    setFormData((prev) => ({ ...prev, connections: updatedConnections }));\n+  };\n+\n+  const handleAddRelation = (connectionIndex: number) => {\n+    const updatedConnections = formData.connections.map((connection, idx) => {\n+      if (idx === connectionIndex) {\n+        return {\n+          // @ts-ignore\n+          ...connection,\n+          relation: [\n+            // @ts-ignore\n+            ...connection.relation,\n+            {\n+              class: \"\",\n+              role: \"\",\n+              duration: {\n+                start: { year: \"\", month: \"\" },\n+                end: { year: \"\", month: \"\" },\n+              },\n+            },\n+          ],\n+        };\n+      }\n+      return connection;\n+    });\n+\n+    // @ts-ignore\n+    setFormData((prev) => ({ ...prev, connections: updatedConnections }));\n+  };\n+\n+  // Handle field change\n+  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n+    const { name, value } = e.target;\n+    setFormData((prev) => ({ ...prev, [name]: value }));\n+  };\n+\n+  // Add tag\n+  const handleAddTag = () => {\n+    // @ts-ignore\n+    setFormData((prev) => ({ ...prev, tags: [...prev.tags, \"\"] }));\n+  };\n+\n+  // Remove tag\n+  const handleRemoveTag = (index: number) => {\n+    const newTags = formData.tags.filter((_, idx) => idx !== index);\n+    setFormData((prev) => ({ ...prev, tags: newTags }));\n+  };\n+\n+  // Update tag\n+  const handleTagChange = (value: any, index: number) => {\n+    const newTags = formData.tags.map((tag, idx) =>\n+      idx === index ? value : tag\n+    );\n+    // @ts-ignore\n+    setFormData((prev) => ({ ...prev, tags: newTags }));\n+  };\n+\n+  // Form submission\n+  const handleSubmit = (e: React.FormEvent) => {\n+    e.preventDefault();\n+    // Implement form submission logic here\n+    console.log(formData);\n+  };\n+\n+  return (\n+    <Box\n+      component=\"form\"\n+      onSubmit={handleSubmit}\n+      sx={{ position: \"relative\", width: \"100%\", mt: 2 }}\n+    >\n+      <IconButton\n+        onClick={onClose}\n+        sx={{ position: \"absolute\", right: 8, top: 8 }}\n+      >\n+        <CloseIcon />\n+      </IconButton>\n+      <CardContent>\n+        <Typography variant=\"h6\" gutterBottom>\n+          Upload New Advisor\n+        </Typography>\n+        <Grid container spacing={2} sx={{ mt: 3 }}>\n+          {/* Advisor Basic Information */}\n+          <Grid item xs={12} sm={6} md={4}>\n+            <TextField\n+              fullWidth\n+              label=\"Name\"\n+              name=\"name\"\n+              value={formData.name}\n+              onChange={handleChange}\n+            />\n+          </Grid>\n+          <Grid item xs={12} sm={6} md={4}>\n+            <TextField\n+              fullWidth\n+              label=\"Position\"\n+              name=\"position\"\n+              value={formData.position}\n+              onChange={handleChange}\n+            />\n+          </Grid>\n+          <Grid item xs={12} sm={6} md={4}>\n+            <TextField\n+              fullWidth\n+              label=\"Affiliation\"\n+              name=\"affiliation\"\n+              value={formData.affiliation}\n+              onChange={handleChange}\n+            />\n+          </Grid>\n+          {/* Social Links */}\n+          <Grid item xs={12} sm={6} md={3}>\n+            <TextField\n+              fullWidth\n+              label=\"GitHub\"\n+              name=\"github\"\n+              value={formData.github}\n+              onChange={handleChange}\n+            />\n+          </Grid>\n+          <Grid item xs={12} sm={6} md={3}>\n+            <TextField\n+              fullWidth\n+              label=\"Twitter\"\n+              name=\"twitter\"\n+              value={formData.twitter}\n+              onChange={handleChange}\n+            />\n+          </Grid>\n+          <Grid item xs={12} sm={6} md={3}>\n+            <TextField\n+              fullWidth\n+              label=\"Email\"\n+              name=\"email\"\n+              value={formData.email}\n+              onChange={handleChange}\n+            />\n+          </Grid>\n+          <Grid item xs={12} sm={6} md={3}>\n+            <TextField\n+              fullWidth\n+              label=\"Website\"\n+              name=\"website\"\n+              value={formData.website}\n+              onChange={handleChange}\n+            />\n+          </Grid>\n+          {/* Tags */}\n+          <Grid item xs={12}>\n+            <Typography variant=\"body1\" sx={{ mb: 1 }}>\n+              Tags\n+            </Typography>\n+            <Stack direction=\"column\" spacing={1}>\n+              {formData.tags.map((tag, index) => (\n+                <Box key={index} display=\"flex\" alignItems=\"center\">\n+                  <TextField\n+                    fullWidth\n+                    variant=\"outlined\"\n+                    size=\"small\"\n+                    value={tag}\n+                    onChange={(e) => handleTagChange(e.target.value, index)}\n+                    sx={{ mr: 1 }}\n+                  />\n+                  <IconButton\n+                    onClick={() => handleRemoveTag(index)}\n+                    size=\"small\"\n+                  >\n+                    <DeleteIcon />\n+                  </IconButton>\n+                </Box>\n+              ))}\n+            </Stack>\n+            <Button\n+              onClick={handleAddTag}\n+              startIcon={<AddIcon />}\n+              sx={{ mt: 1 }}\n+            >\n+              Add Tag\n+            </Button>\n+          </Grid>\n+          {/* Description */}\n+          <Grid item xs={12}>\n+            <TextField\n+              fullWidth\n+              label=\"Description\"\n+              name=\"description\"\n+              value={formData.description}\n+              onChange={handleChange}\n+              multiline\n+              rows={4}\n+            />\n+          </Grid>\n+        </Grid>\n+\n+        <Typography variant=\"h6\" sx={{ mt: 2, mb: 5 }}>\n+          Connections\n+        </Typography>\n+        {formData.connections.map((connection, index) => (\n+          <Accordion key={index} defaultExpanded>\n+            <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n+              <Typography>Connection {index + 1}</Typography>\n+            </AccordionSummary>\n+            <AccordionDetails>\n+              <Stack spacing={2}>\n+                {/* Inputs for connection fields */}\n+                <TextField\n+                  label=\"Advisor ID\"\n+                  // @ts-ignore\n+                  value={connection.advisor_id}\n+                  onChange={(e) =>\n+                    handleConnectionChange(index, \"advisor_id\", e.target.value)\n+                  }\n+                  fullWidth\n+                />\n+                {/* Relation and Collaboration details */}\n+                <Button\n+                  onClick={() => handleAddRelation(index)}\n+                  startIcon={<AddIcon />}\n+                >\n+                  Add Relation\n+                </Button>\n+                {/* Display Relations and Collaborations */}\n+              </Stack>\n+            </AccordionDetails>\n+          </Accordion>\n+        ))}\n+        <Button\n+          onClick={handleAddConnection}\n+          startIcon={<AddIcon />}\n+          sx={{ mt: 1 }}\n+        >\n+          Add Connection\n+        </Button>\n+        <Box sx={{ display: \"flex\", justifyContent: \"flex-end\", mt: 2 }}>\n+          <Button type=\"submit\" variant=\"contained\">\n+            Submit\n+          </Button>\n+        </Box>\n+      </CardContent>\n+    </Box>\n+  );\n+};\n+\n+export default UploadCard;\n"
                },
                {
                    "date": 1708763138014,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,6 @@\n+// 这个文件是上传新的顾问的表单，包括顾问的基本信息，社交链接，标签，描述，以及顾问的关系\n+\n import React, { useState } from \"react\";\n import {\n   Box,\n   CardContent,\n@@ -303,614 +305,4 @@\n   );\n };\n \n export default UploadCard;\n-import React, { useState } from \"react\";\n-import {\n-  Box,\n-  CardContent,\n-  Typography,\n-  IconButton,\n-  TextField,\n-  Button,\n-  Grid,\n-  Stack,\n-  Accordion,\n-  AccordionSummary,\n-  AccordionDetails,\n-} from \"@mui/material\";\n-import CloseIcon from \"@mui/icons-material/Close\";\n-import AddIcon from \"@mui/icons-material/Add\";\n-import DeleteIcon from \"@mui/icons-material/Delete\";\n-import ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\n-\n-const UploadCard = ({ onClose }: { onClose: any }) => {\n-  // Initial state setup for the form\n-  const [formData, setFormData] = useState({\n-    advisor_id: \"\",\n-    name: \"\",\n-    tags: [],\n-    avatar: \"\",\n-    github: \"\",\n-    twitter: \"\",\n-    email: \"\",\n-    website: \"\",\n-    position: \"\",\n-    affiliation: \"\",\n-    description: \"\",\n-    connections: [],\n-  });\n-\n-  const handleAddConnection = () => {\n-    // @ts-ignore\n-    setFormData((prev) => ({\n-      ...prev,\n-      connections: [\n-        ...prev.connections,\n-        {\n-          advisor_id: \"\",\n-          relation: [],\n-          collaborations: [],\n-          latestCollaboration: \"\",\n-          relationFactor: \"\",\n-        },\n-      ],\n-    }));\n-  };\n-\n-  // @ts-ignore\n-  const handleConnectionChange = (index, field, value) => {\n-    const updatedConnections = formData.connections.map((connection, idx) => {\n-      if (idx === index) {\n-        // @ts-ignore\n-        return { ...connection, [field]: value };\n-      }\n-      return connection;\n-    });\n-    // @ts-ignore\n-    setFormData((prev) => ({ ...prev, connections: updatedConnections }));\n-  };\n-\n-  const handleAddRelation = (connectionIndex: number) => {\n-    const updatedConnections = formData.connections.map((connection, idx) => {\n-      if (idx === connectionIndex) {\n-        return {\n-          // @ts-ignore\n-          ...connection,\n-          relation: [\n-            ...connection.relation,\n-            {\n-              class: \"\",\n-              role: \"\",\n-              duration: {\n-                start: { year: \"\", month: \"\" },\n-                end: { year: \"\", month: \"\" },\n-              },\n-            },\n-          ],\n-        };\n-      }\n-      return connection;\n-    });\n-\n-    // @ts-ignore\n-    setFormData((prev) => ({ ...prev, connections: updatedConnections }));\n-  };\n-\n-  // Handle field change\n-  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n-    const { name, value } = e.target;\n-    setFormData((prev) => ({ ...prev, [name]: value }));\n-  };\n-\n-  // Add tag\n-  const handleAddTag = () => {\n-    // @ts-ignore\n-    setFormData((prev) => ({ ...prev, tags: [...prev.tags, \"\"] }));\n-  };\n-\n-  // Remove tag\n-  const handleRemoveTag = (index: number) => {\n-    const newTags = formData.tags.filter((_, idx) => idx !== index);\n-    setFormData((prev) => ({ ...prev, tags: newTags }));\n-  };\n-\n-  // Update tag\n-  const handleTagChange = (value: any, index: number) => {\n-    const newTags = formData.tags.map((tag, idx) =>\n-      idx === index ? value : tag\n-    );\n-    // @ts-ignore\n-    setFormData((prev) => ({ ...prev, tags: newTags }));\n-  };\n-\n-  // Form submission\n-  const handleSubmit = (e: React.FormEvent) => {\n-    e.preventDefault();\n-    // Implement form submission logic here\n-    console.log(formData);\n-  };\n-\n-  return (\n-    <Box\n-      component=\"form\"\n-      onSubmit={handleSubmit}\n-      sx={{ position: \"relative\", width: \"100%\", mt: 2 }}\n-    >\n-      <IconButton\n-        onClick={onClose}\n-        sx={{ position: \"absolute\", right: 8, top: 8 }}\n-      >\n-        <CloseIcon />\n-      </IconButton>\n-      <CardContent>\n-        <Typography variant=\"h6\" gutterBottom>\n-          Upload New Advisor\n-        </Typography>\n-        <Grid container spacing={2} sx={{ mt: 3 }}>\n-          {/* Advisor Basic Information */}\n-          <Grid item xs={12} sm={6} md={4}>\n-            <TextField\n-              fullWidth\n-              label=\"Name\"\n-              name=\"name\"\n-              value={formData.name}\n-              onChange={handleChange}\n-            />\n-          </Grid>\n-          <Grid item xs={12} sm={6} md={4}>\n-            <TextField\n-              fullWidth\n-              label=\"Position\"\n-              name=\"position\"\n-              value={formData.position}\n-              onChange={handleChange}\n-            />\n-          </Grid>\n-          <Grid item xs={12} sm={6} md={4}>\n-            <TextField\n-              fullWidth\n-              label=\"Affiliation\"\n-              name=\"affiliation\"\n-              value={formData.affiliation}\n-              onChange={handleChange}\n-            />\n-          </Grid>\n-          {/* Social Links */}\n-          <Grid item xs={12} sm={6} md={3}>\n-            <TextField\n-              fullWidth\n-              label=\"GitHub\"\n-              name=\"github\"\n-              value={formData.github}\n-              onChange={handleChange}\n-            />\n-          </Grid>\n-          <Grid item xs={12} sm={6} md={3}>\n-            <TextField\n-              fullWidth\n-              label=\"Twitter\"\n-              name=\"twitter\"\n-              value={formData.twitter}\n-              onChange={handleChange}\n-            />\n-          </Grid>\n-          <Grid item xs={12} sm={6} md={3}>\n-            <TextField\n-              fullWidth\n-              label=\"Email\"\n-              name=\"email\"\n-              value={formData.email}\n-              onChange={handleChange}\n-            />\n-          </Grid>\n-          <Grid item xs={12} sm={6} md={3}>\n-            <TextField\n-              fullWidth\n-              label=\"Website\"\n-              name=\"website\"\n-              value={formData.website}\n-              onChange={handleChange}\n-            />\n-          </Grid>\n-          {/* Tags */}\n-          <Grid item xs={12}>\n-            <Typography variant=\"body1\" sx={{ mb: 1 }}>\n-              Tags\n-            </Typography>\n-            <Stack direction=\"column\" spacing={1}>\n-              {formData.tags.map((tag, index) => (\n-                <Box key={index} display=\"flex\" alignItems=\"center\">\n-                  <TextField\n-                    fullWidth\n-                    variant=\"outlined\"\n-                    size=\"small\"\n-                    value={tag}\n-                    onChange={(e) => handleTagChange(e.target.value, index)}\n-                    sx={{ mr: 1 }}\n-                  />\n-                  <IconButton\n-                    onClick={() => handleRemoveTag(index)}\n-                    size=\"small\"\n-                  >\n-                    <DeleteIcon />\n-                  </IconButton>\n-                </Box>\n-              ))}\n-            </Stack>\n-            <Button\n-              onClick={handleAddTag}\n-              startIcon={<AddIcon />}\n-              sx={{ mt: 1 }}\n-            >\n-              Add Tag\n-            </Button>\n-          </Grid>\n-          {/* Description */}\n-          <Grid item xs={12}>\n-            <TextField\n-              fullWidth\n-              label=\"Description\"\n-              name=\"description\"\n-              value={formData.description}\n-              onChange={handleChange}\n-              multiline\n-              rows={4}\n-            />\n-          </Grid>\n-        </Grid>\n-\n-        <Typography variant=\"h6\" sx={{ mt: 2, mb: 5 }}>\n-          Connections\n-        </Typography>\n-        {formData.connections.map((connection, index) => (\n-          <Accordion key={index} defaultExpanded>\n-            <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n-              <Typography>Connection {index + 1}</Typography>\n-            </AccordionSummary>\n-            <AccordionDetails>\n-              <Stack spacing={2}>\n-                {/* Inputs for connection fields */}\n-                <TextField\n-                  label=\"Advisor ID\"\n-                  // @ts-ignore\n-                  value={connection.advisor_id}\n-                  onChange={(e) =>\n-                    handleConnectionChange(index, \"advisor_id\", e.target.value)\n-                  }\n-                  fullWidth\n-                />\n-                {/* Relation and Collaboration details */}\n-                <Button\n-                  onClick={() => handleAddRelation(index)}\n-                  startIcon={<AddIcon />}\n-                >\n-                  Add Relation\n-                </Button>\n-                {/* Display Relations and Collaborations */}\n-              </Stack>\n-            </AccordionDetails>\n-          </Accordion>\n-        ))}\n-        <Button\n-          onClick={handleAddConnection}\n-          startIcon={<AddIcon />}\n-          sx={{ mt: 1 }}\n-        >\n-          Add Connection\n-        </Button>\n-        <Box sx={{ display: \"flex\", justifyContent: \"flex-end\", mt: 2 }}>\n-          <Button type=\"submit\" variant=\"contained\">\n-            Submit\n-          </Button>\n-        </Box>\n-      </CardContent>\n-    </Box>\n-  );\n-};\n-\n-export default UploadCard;\n-import React, { useState } from \"react\";\n-import {\n-  Box,\n-  CardContent,\n-  Typography,\n-  IconButton,\n-  TextField,\n-  Button,\n-  Grid,\n-  Stack,\n-  Accordion,\n-  AccordionSummary,\n-  AccordionDetails,\n-} from \"@mui/material\";\n-import CloseIcon from \"@mui/icons-material/Close\";\n-import AddIcon from \"@mui/icons-material/Add\";\n-import DeleteIcon from \"@mui/icons-material/Delete\";\n-import ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\n-\n-const UploadCard = ({ onClose }: { onClose: any }) => {\n-  // Initial state setup for the form\n-  const [formData, setFormData] = useState({\n-    advisor_id: \"\",\n-    name: \"\",\n-    tags: [],\n-    avatar: \"\",\n-    github: \"\",\n-    twitter: \"\",\n-    email: \"\",\n-    website: \"\",\n-    position: \"\",\n-    affiliation: \"\",\n-    description: \"\",\n-    connections: [],\n-  });\n-\n-  const handleAddConnection = () => {\n-    // @ts-ignore\n-    setFormData((prev) => ({\n-      ...prev,\n-      connections: [\n-        ...prev.connections,\n-        {\n-          advisor_id: \"\",\n-          relation: [],\n-          collaborations: [],\n-          latestCollaboration: \"\",\n-          relationFactor: \"\",\n-        },\n-      ],\n-    }));\n-  };\n-\n-  // @ts-ignore\n-  const handleConnectionChange = (index, field, value) => {\n-    const updatedConnections = formData.connections.map((connection, idx) => {\n-      if (idx === index) {\n-        // @ts-ignore\n-        return { ...connection, [field]: value };\n-      }\n-      return connection;\n-    });\n-    // @ts-ignore\n-    setFormData((prev) => ({ ...prev, connections: updatedConnections }));\n-  };\n-\n-  const handleAddRelation = (connectionIndex: number) => {\n-    const updatedConnections = formData.connections.map((connection, idx) => {\n-      if (idx === connectionIndex) {\n-        return {\n-          // @ts-ignore\n-          ...connection,\n-          relation: [\n-            ...connection.relation,\n-            {\n-              class: \"\",\n-              role: \"\",\n-              duration: {\n-                start: { year: \"\", month: \"\" },\n-                end: { year: \"\", month: \"\" },\n-              },\n-            },\n-          ],\n-        };\n-      }\n-      return connection;\n-    });\n-\n-    // @ts-ignore\n-    setFormData((prev) => ({ ...prev, connections: updatedConnections }));\n-  };\n-\n-  // Handle field change\n-  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n-    const { name, value } = e.target;\n-    setFormData((prev) => ({ ...prev, [name]: value }));\n-  };\n-\n-  // Add tag\n-  const handleAddTag = () => {\n-    // @ts-ignore\n-    setFormData((prev) => ({ ...prev, tags: [...prev.tags, \"\"] }));\n-  };\n-\n-  // Remove tag\n-  const handleRemoveTag = (index: number) => {\n-    const newTags = formData.tags.filter((_, idx) => idx !== index);\n-    setFormData((prev) => ({ ...prev, tags: newTags }));\n-  };\n-\n-  // Update tag\n-  const handleTagChange = (value: any, index: number) => {\n-    const newTags = formData.tags.map((tag, idx) =>\n-      idx === index ? value : tag\n-    );\n-    // @ts-ignore\n-    setFormData((prev) => ({ ...prev, tags: newTags }));\n-  };\n-\n-  // Form submission\n-  const handleSubmit = (e: React.FormEvent) => {\n-    e.preventDefault();\n-    // Implement form submission logic here\n-    console.log(formData);\n-  };\n-\n-  return (\n-    <Box\n-      component=\"form\"\n-      onSubmit={handleSubmit}\n-      sx={{ position: \"relative\", width: \"100%\", mt: 2 }}\n-    >\n-      <IconButton\n-        onClick={onClose}\n-        sx={{ position: \"absolute\", right: 8, top: 8 }}\n-      >\n-        <CloseIcon />\n-      </IconButton>\n-      <CardContent>\n-        <Typography variant=\"h6\" gutterBottom>\n-          Upload New Advisor\n-        </Typography>\n-        <Grid container spacing={2} sx={{ mt: 3 }}>\n-          {/* Advisor Basic Information */}\n-          <Grid item xs={12} sm={6} md={4}>\n-            <TextField\n-              fullWidth\n-              label=\"Name\"\n-              name=\"name\"\n-              value={formData.name}\n-              onChange={handleChange}\n-            />\n-          </Grid>\n-          <Grid item xs={12} sm={6} md={4}>\n-            <TextField\n-              fullWidth\n-              label=\"Position\"\n-              name=\"position\"\n-              value={formData.position}\n-              onChange={handleChange}\n-            />\n-          </Grid>\n-          <Grid item xs={12} sm={6} md={4}>\n-            <TextField\n-              fullWidth\n-              label=\"Affiliation\"\n-              name=\"affiliation\"\n-              value={formData.affiliation}\n-              onChange={handleChange}\n-            />\n-          </Grid>\n-          {/* Social Links */}\n-          <Grid item xs={12} sm={6} md={3}>\n-            <TextField\n-              fullWidth\n-              label=\"GitHub\"\n-              name=\"github\"\n-              value={formData.github}\n-              onChange={handleChange}\n-            />\n-          </Grid>\n-          <Grid item xs={12} sm={6} md={3}>\n-            <TextField\n-              fullWidth\n-              label=\"Twitter\"\n-              name=\"twitter\"\n-              value={formData.twitter}\n-              onChange={handleChange}\n-            />\n-          </Grid>\n-          <Grid item xs={12} sm={6} md={3}>\n-            <TextField\n-              fullWidth\n-              label=\"Email\"\n-              name=\"email\"\n-              value={formData.email}\n-              onChange={handleChange}\n-            />\n-          </Grid>\n-          <Grid item xs={12} sm={6} md={3}>\n-            <TextField\n-              fullWidth\n-              label=\"Website\"\n-              name=\"website\"\n-              value={formData.website}\n-              onChange={handleChange}\n-            />\n-          </Grid>\n-          {/* Tags */}\n-          <Grid item xs={12}>\n-            <Typography variant=\"body1\" sx={{ mb: 1 }}>\n-              Tags\n-            </Typography>\n-            <Stack direction=\"column\" spacing={1}>\n-              {formData.tags.map((tag, index) => (\n-                <Box key={index} display=\"flex\" alignItems=\"center\">\n-                  <TextField\n-                    fullWidth\n-                    variant=\"outlined\"\n-                    size=\"small\"\n-                    value={tag}\n-                    onChange={(e) => handleTagChange(e.target.value, index)}\n-                    sx={{ mr: 1 }}\n-                  />\n-                  <IconButton\n-                    onClick={() => handleRemoveTag(index)}\n-                    size=\"small\"\n-                  >\n-                    <DeleteIcon />\n-                  </IconButton>\n-                </Box>\n-              ))}\n-            </Stack>\n-            <Button\n-              onClick={handleAddTag}\n-              startIcon={<AddIcon />}\n-              sx={{ mt: 1 }}\n-            >\n-              Add Tag\n-            </Button>\n-          </Grid>\n-          {/* Description */}\n-          <Grid item xs={12}>\n-            <TextField\n-              fullWidth\n-              label=\"Description\"\n-              name=\"description\"\n-              value={formData.description}\n-              onChange={handleChange}\n-              multiline\n-              rows={4}\n-            />\n-          </Grid>\n-        </Grid>\n-\n-        <Typography variant=\"h6\" sx={{ mt: 2, mb: 5 }}>\n-          Connections\n-        </Typography>\n-        {formData.connections.map((connection, index) => (\n-          <Accordion key={index} defaultExpanded>\n-            <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n-              <Typography>Connection {index + 1}</Typography>\n-            </AccordionSummary>\n-            <AccordionDetails>\n-              <Stack spacing={2}>\n-                {/* Inputs for connection fields */}\n-                <TextField\n-                  label=\"Advisor ID\"\n-                  // @ts-ignore\n-                  value={connection.advisor_id}\n-                  onChange={(e) =>\n-                    handleConnectionChange(index, \"advisor_id\", e.target.value)\n-                  }\n-                  fullWidth\n-                />\n-                {/* Relation and Collaboration details */}\n-                <Button\n-                  onClick={() => handleAddRelation(index)}\n-                  startIcon={<AddIcon />}\n-                >\n-                  Add Relation\n-                </Button>\n-                {/* Display Relations and Collaborations */}\n-              </Stack>\n-            </AccordionDetails>\n-          </Accordion>\n-        ))}\n-        <Button\n-          onClick={handleAddConnection}\n-          startIcon={<AddIcon />}\n-          sx={{ mt: 1 }}\n-        >\n-          Add Connection\n-        </Button>\n-        <Box sx={{ display: \"flex\", justifyContent: \"flex-end\", mt: 2 }}>\n-          <Button type=\"submit\" variant=\"contained\">\n-            Submit\n-          </Button>\n-        </Box>\n-      </CardContent>\n-    </Box>\n-  );\n-};\n-\n-export default UploadCard;\n"
                },
                {
                    "date": 1708763145935,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,6 @@\n // 这个文件是上传新的顾问的表单，包括顾问的基本信息，社交链接，标签，描述，以及顾问的关系\n+// 需要好好修改，现在只是一个框架\n \n import React, { useState } from \"react\";\n import {\n   Box,\n"
                },
                {
                    "date": 1711692573922,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,302 +1,167 @@\n-// 这个文件是上传新的顾问的表单，包括顾问的基本信息，社交链接，标签，描述，以及顾问的关系\n-// 需要好好修改，现在只是一个框架，没有实际的上传功能\n-\n import React, { useState } from \"react\";\n import {\n   Box,\n   CardContent,\n   Typography,\n-  IconButton,\n   TextField,\n   Button,\n   Grid,\n-  Stack,\n-  Accordion,\n-  AccordionSummary,\n-  AccordionDetails,\n } from \"@mui/material\";\n import CloseIcon from \"@mui/icons-material/Close\";\n-import AddIcon from \"@mui/icons-material/Add\";\n-import DeleteIcon from \"@mui/icons-material/Delete\";\n-import ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\n \n const UploadCard = ({ onClose }: { onClose: any }) => {\n-  // Initial state setup for the form\n   const [formData, setFormData] = useState({\n-    advisor_id: \"\",\n     name: \"\",\n-    tags: [],\n-    avatar: \"\",\n-    github: \"\",\n-    twitter: \"\",\n-    email: \"\",\n-    website: \"\",\n+    picture: \"\",\n     position: \"\",\n     affiliation: \"\",\n     description: \"\",\n-    connections: [],\n+    homepage: \"\",\n+    github: \"\",\n+    publications: {\n+      googleScholar: \"\",\n+      dblp: \"\",\n+      researchGate: \"\",\n+      semanticScholar: \"\",\n+    },\n+    contacts: {\n+      email: \"\",\n+      twitter: \"\",\n+      linkedIn: \"\",\n+    },\n   });\n \n-  const handleAddConnection = () => {\n-    // @ts-ignore\n-    setFormData((prev) => ({\n-      ...prev,\n-      connections: [\n-        ...prev.connections,\n-        {\n-          advisor_id: \"\",\n-          relation: [],\n-          collaborations: [],\n-          latestCollaboration: \"\",\n-          relationFactor: \"\",\n-        },\n-      ],\n-    }));\n-  };\n-\n-  // @ts-ignore\n-  const handleConnectionChange = (index, field, value) => {\n-    const updatedConnections = formData.connections.map((connection, idx) => {\n-      if (idx === index) {\n-        // @ts-ignore\n-        return { ...connection, [field]: value };\n-      }\n-      return connection;\n-    });\n-    // @ts-ignore\n-    setFormData((prev) => ({ ...prev, connections: updatedConnections }));\n-  };\n-\n-  const handleAddRelation = (connectionIndex: number) => {\n-    const updatedConnections = formData.connections.map((connection, idx) => {\n-      if (idx === connectionIndex) {\n-        return {\n-          // @ts-ignore\n-          ...connection,\n-          relation: [\n-            // @ts-ignore\n-            ...connection.relation,\n-            {\n-              class: \"\",\n-              role: \"\",\n-              duration: {\n-                start: { year: \"\", month: \"\" },\n-                end: { year: \"\", month: \"\" },\n-              },\n-            },\n-          ],\n-        };\n-      }\n-      return connection;\n-    });\n-\n-    // @ts-ignore\n-    setFormData((prev) => ({ ...prev, connections: updatedConnections }));\n-  };\n-\n   // Handle field change\n-  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n+  const handleChange = (e: React.ChangeEvent<HTMLInputElement>, section?: string, field?: string) => {\n     const { name, value } = e.target;\n-    setFormData((prev) => ({ ...prev, [name]: value }));\n+    \n+    if (section && field) {\n+      setFormData((prev) => ({\n+        ...prev,\n+        [section]: {\n+          ...prev[section],\n+          [field]: value,\n+        },\n+      }));\n+    } else {\n+      setFormData((prev) => ({ ...prev, [name]: value }));\n+    }\n   };\n \n-  // Add tag\n-  const handleAddTag = () => {\n-    // @ts-ignore\n-    setFormData((prev) => ({ ...prev, tags: [...prev.tags, \"\"] }));\n-  };\n-\n-  // Remove tag\n-  const handleRemoveTag = (index: number) => {\n-    const newTags = formData.tags.filter((_, idx) => idx !== index);\n-    setFormData((prev) => ({ ...prev, tags: newTags }));\n-  };\n-\n-  // Update tag\n-  const handleTagChange = (value: any, index: number) => {\n-    const newTags = formData.tags.map((tag, idx) =>\n-      idx === index ? value : tag\n-    );\n-    // @ts-ignore\n-    setFormData((prev) => ({ ...prev, tags: newTags }));\n-  };\n-\n   // Form submission\n   const handleSubmit = (e: React.FormEvent) => {\n     e.preventDefault();\n     // Implement form submission logic here\n     console.log(formData);\n   };\n \n   return (\n-    <Box\n-      component=\"form\"\n-      onSubmit={handleSubmit}\n-      sx={{ position: \"relative\", width: \"100%\", mt: 2 }}\n-    >\n-      <IconButton\n-        onClick={onClose}\n-        sx={{ position: \"absolute\", right: 8, top: 8 }}\n-      >\n-        <CloseIcon />\n-      </IconButton>\n+    <Box component=\"form\" onSubmit={handleSubmit} sx={{ position: \"relative\", width: \"100%\", mt: 2 }}>\n       <CardContent>\n         <Typography variant=\"h6\" gutterBottom>\n           Upload New Advisor\n         </Typography>\n         <Grid container spacing={2} sx={{ mt: 3 }}>\n-          {/* Advisor Basic Information */}\n-          <Grid item xs={12} sm={6} md={4}>\n+          {/* Basic Information */}\n+          <Grid item xs={12}>\n             <TextField\n               fullWidth\n               label=\"Name\"\n               name=\"name\"\n               value={formData.name}\n               onChange={handleChange}\n             />\n-          </Grid>\n-          <Grid item xs={12} sm={6} md={4}>\n             <TextField\n               fullWidth\n               label=\"Position\"\n               name=\"position\"\n               value={formData.position}\n               onChange={handleChange}\n             />\n-          </Grid>\n-          <Grid item xs={12} sm={6} md={4}>\n             <TextField\n               fullWidth\n               label=\"Affiliation\"\n               name=\"affiliation\"\n               value={formData.affiliation}\n               onChange={handleChange}\n             />\n-          </Grid>\n-          {/* Social Links */}\n-          <Grid item xs={12} sm={6} md={3}>\n             <TextField\n               fullWidth\n+              label=\"Description\"\n+              name=\"description\"\n+              value={formData.description}\n+              onChange={handleChange}\n+              multiline\n+              rows={4}\n+            />\n+            <TextField\n+              fullWidth\n+              label=\"Homepage\"\n+              name=\"homepage\"\n+              value={formData.homepage}\n+              onChange={handleChange}\n+            />\n+            <TextField\n+              fullWidth\n               label=\"GitHub\"\n               name=\"github\"\n               value={formData.github}\n               onChange={handleChange}\n             />\n           </Grid>\n-          <Grid item xs={12} sm={6} md={3}>\n+\n+          {/* Publications */}\n+          <Grid item xs={12}>\n             <TextField\n               fullWidth\n-              label=\"Twitter\"\n-              name=\"twitter\"\n-              value={formData.twitter}\n-              onChange={handleChange}\n+              label=\"Google Scholar\"\n+              value={formData.publications.googleScholar}\n+              onChange={(e) => handleChange(e, 'publications', 'googleScholar')}\n             />\n-          </Grid>\n-          <Grid item xs={12} sm={6} md={3}>\n             <TextField\n               fullWidth\n-              label=\"Email\"\n-              name=\"email\"\n-              value={formData.email}\n-              onChange={handleChange}\n+              label=\"DBLP\"\n+              value={formData.publications.dblp}\n+              onChange={(e) => handleChange(e, 'publications', 'dblp')}\n             />\n-          </Grid>\n-          <Grid item xs={12} sm={6} md={3}>\n             <TextField\n               fullWidth\n-              label=\"Website\"\n-              name=\"website\"\n-              value={formData.website}\n-              onChange={handleChange}\n+              label=\"ResearchGate\"\n+              value={formData.publications.researchGate}\n+              onChange={(e) => handleChange(e, 'publications', 'researchGate')}\n             />\n+            <TextField\n+              fullWidth\n+              label=\"Semantic Scholar\"\n+              value={formData.publications.semanticScholar}\n+              onChange={(e) => handleChange(e, 'publications', 'semanticScholar')}\n+            />\n           </Grid>\n-          {/* Tags */}\n+\n+          {/* Contacts */}\n           <Grid item xs={12}>\n-            <Typography variant=\"body1\" sx={{ mb: 1 }}>\n-              Tags\n-            </Typography>\n-            <Stack direction=\"column\" spacing={1}>\n-              {formData.tags.map((tag, index) => (\n-                <Box key={index} display=\"flex\" alignItems=\"center\">\n-                  <TextField\n-                    fullWidth\n-                    variant=\"outlined\"\n-                    size=\"small\"\n-                    value={tag}\n-                    onChange={(e) => handleTagChange(e.target.value, index)}\n-                    sx={{ mr: 1 }}\n-                  />\n-                  <IconButton\n-                    onClick={() => handleRemoveTag(index)}\n-                    size=\"small\"\n-                  >\n-                    <DeleteIcon />\n-                  </IconButton>\n-                </Box>\n-              ))}\n-            </Stack>\n-            <Button\n-              onClick={handleAddTag}\n-              startIcon={<AddIcon />}\n-              sx={{ mt: 1 }}\n-            >\n-              Add Tag\n-            </Button>\n-          </Grid>\n-          {/* Description */}\n-          <Grid item xs={12}>\n             <TextField\n               fullWidth\n-              label=\"Description\"\n-              name=\"description\"\n-              value={formData.description}\n-              onChange={handleChange}\n-              multiline\n-              rows={4}\n+              label=\"Email\"\n+              value={formData.contacts.email}\n+              onChange={(e) => handleChange(e, 'contacts', 'email')}\n             />\n+            <TextField\n+              fullWidth\n+              label=\"Twitter\"\n+              value={formData.contacts.twitter}\n+              onChange={(e) => handleChange(e, 'contacts', 'twitter')}\n+            />\n+            <TextField\n+              fullWidth\n+              label=\"LinkedIn\"\n+              value={formData.contacts.linkedIn}\n+              onChange={(e) => handleChange(e, 'contacts', 'linkedIn')}\n+            />\n           </Grid>\n         </Grid>\n \n-        <Typography variant=\"h6\" sx={{ mt: 2, mb: 5 }}>\n-          Connections\n-        </Typography>\n-        {formData.connections.map((connection, index) => (\n-          <Accordion key={index} defaultExpanded>\n-            <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n-              <Typography>Connection {index + 1}</Typography>\n-            </AccordionSummary>\n-            <AccordionDetails>\n-              <Stack spacing={2}>\n-                {/* Inputs for connection fields */}\n-                <TextField\n-                  label=\"Advisor ID\"\n-                  // @ts-ignore\n-                  value={connection.advisor_id}\n-                  onChange={(e) =>\n-                    handleConnectionChange(index, \"advisor_id\", e.target.value)\n-                  }\n-                  fullWidth\n-                />\n-                {/* Relation and Collaboration details */}\n-                <Button\n-                  onClick={() => handleAddRelation(index)}\n-                  startIcon={<AddIcon />}\n-                >\n-                  Add Relation\n-                </Button>\n-                {/* Display Relations and Collaborations */}\n-              </Stack>\n-            </AccordionDetails>\n-          </Accordion>\n-        ))}\n-        <Button\n-          onClick={handleAddConnection}\n-          startIcon={<AddIcon />}\n-          sx={{ mt: 1 }}\n-        >\n-          Add Connection\n-        </Button>\n         <Box sx={{ display: \"flex\", justifyContent: \"flex-end\", mt: 2 }}>\n           <Button type=\"submit\" variant=\"contained\">\n             Submit\n           </Button>\n"
                },
                {
                    "date": 1711692584646,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n     affiliation: \"\",\n     description: \"\",\n     homepage: \"\",\n     github: \"\",\n-    publications: {\n+    publication: {\n       googleScholar: \"\",\n       dblp: \"\",\n       researchGate: \"\",\n       semanticScholar: \"\",\n@@ -122,29 +122,29 @@\n           <Grid item xs={12}>\n             <TextField\n               fullWidth\n               label=\"Google Scholar\"\n-              value={formData.publications.googleScholar}\n-              onChange={(e) => handleChange(e, \"publications\", \"googleScholar\")}\n+              value={formData.publication.googleScholar}\n+              onChange={(e) => handleChange(e, \"publication\", \"googleScholar\")}\n             />\n             <TextField\n               fullWidth\n               label=\"DBLP\"\n-              value={formData.publications.dblp}\n-              onChange={(e) => handleChange(e, \"publications\", \"dblp\")}\n+              value={formData.publication.dblp}\n+              onChange={(e) => handleChange(e, \"publication\", \"dblp\")}\n             />\n             <TextField\n               fullWidth\n               label=\"ResearchGate\"\n-              value={formData.publications.researchGate}\n-              onChange={(e) => handleChange(e, \"publications\", \"researchGate\")}\n+              value={formData.publication.researchGate}\n+              onChange={(e) => handleChange(e, \"publication\", \"researchGate\")}\n             />\n             <TextField\n               fullWidth\n               label=\"Semantic Scholar\"\n-              value={formData.publications.semanticScholar}\n+              value={formData.publication.semanticScholar}\n               onChange={(e) =>\n-                handleChange(e, \"publications\", \"semanticScholar\")\n+                handleChange(e, \"publication\", \"semanticScholar\")\n               }\n             />\n           </Grid>\n \n"
                }
            ],
            "date": 1708705499642,
            "name": "Commit-0",
            "content": "// FilterCard.jsx\nimport React from \"react\";\nimport { Box, CardContent, Typography, IconButton } from \"@mui/material\";\nimport CloseIcon from \"@mui/icons-material/Close\";\n\n//@ts-ignore\nconst FilterCard = ({ onClose }) => {\n  return (\n    <Box sx={{ position: \"relative\" }}>\n      <IconButton\n        onClick={onClose}\n        sx={{ position: \"absolute\", right: 8, top: 8 }}\n      >\n        <CloseIcon />\n      </IconButton>\n      <CardContent>\n        <Typography variant=\"h6\">Filter Configuration</Typography>\n        {/* Filter配置内容 */}\n      </CardContent>\n    </Box>\n  );\n};\n\nexport default FilterCard;\n"
        }
    ]
}