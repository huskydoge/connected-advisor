{
    "sourceFile": "src/components/topMenu.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1715439005055,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1715441063977,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -105,9 +105,9 @@\n     return results;\n   };\n \n   const handleClick = (id: string) => {\n-    router.push(`${id}?view=graph`, undefined, {\n+    router.replace(`/main/${id}?view=graph`, undefined, {\n       shallow: true,\n     });\n     // clear query and results\n     setSearchQuery(\"\");\n"
                }
            ],
            "date": 1715439005055,
            "name": "Commit-0",
            "content": "import React, { useState } from \"react\";\n\nimport IconButton from \"@mui/material/IconButton\";\n\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport Button from \"@mui/material/Button\";\nimport AccountCircle from \"@mui/icons-material/AccountCircle\";\nimport Link from \"next/link\";\nimport { lightBlue } from \"@mui/material/colors\";\nimport { Chip, Stack } from \"@mui/material\";\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  InputBase,\n  Box,\n  useTheme,\n  Paper,\n  List,\n  ListItem,\n  ListItemText,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n  Grid,\n} from \"@mui/material\";\nimport TwitterIcon from \"@mui/icons-material/Twitter\";\nimport LinkIcon from \"@mui/icons-material/Link\";\nimport SvgIcon from \"@mui/material/SvgIcon\";\nimport {\n  searchAdvisorDetailsByName,\n  fuzzySearchAdvisorDetails,\n} from \"./wrapped_api/fetchAdvisor\";\nimport { useRouter } from \"next/router\";\nimport { AdvisorDetails } from \"./interface\";\nimport Iframe from \"react-iframe\";\nimport AboutPage from \"./about\";\nimport SearchTableView from \"./searchTable\";\n\nfunction WeChatIcon(props) {\n  return (\n    <SvgIcon {...props}>\n      <path d=\"M12,2A10,10 0 0,1 22,12A10,10 0 0,1 12,22A10,10 0 0,1 2,12A10,10 0 0,1 12,2M12,4A8,8 0 0,0 4,12A8,8 0 0,0 12,20A8,8 0 0,0 20,12A8,8 0 0,0 12,4M17,14H15V9H17V14M11,14H9V9H11V14Z\" />\n    </SvgIcon>\n  );\n}\n\nfunction QQIcon(props) {\n  return (\n    <SvgIcon {...props}>\n      {/* SVG path for QQ icon */}\n      <path d=\"M12,2C6.48,2 2,6.48 2,12C2,17.52 6.48,22 12,22C17.52,22 22,17.52 22,12C22,6.48 17.52,2 12,2ZM12,4C15.31,4 18,6.69 18,10C18,13.31 15.31,16 12,16C8.69,16 6,13.31 6,10C6,6.69 8.69,4 12,4ZM16.5,18.25C16.5,18.25 14.5,20 12,20C9.5,20 7.5,18.25 7.5,18.25C5.91,17.53 5,15.85 5,14C5,12.21 6.07,10.67 7.64,10.16C8.18,10 8.59,10.33 8.76,10.87C8.93,11.4 8.73,11.99 8.25,12.25C7.95,12.41 7.91,12.85 8.18,13.06C8.64,13.42 9.3,13.58 10,13.58C10.7,13.58 11.36,13.42 11.82,13.06C12.09,12.85 12.05,12.41 11.75,12.25C11.27,11.99 11.07,11.4 11.24,10.87C11.41,10.33 11.82,10 12.36,10.16C13.93,10.67 15,12.21 15,14C15,15.85 14.09,17.53 12.5,18.25H16.5Z\" />\n    </SvgIcon>\n  );\n}\n\n// 假设这是你的搜索结果类型\ninterface SearchResult {\n  id: string;\n  title: string;\n}\n\nfunction TopMenu() {\n  const omit_thres = 10;\n  const [searchFocused, setSearchFocused] = useState(false);\n  const router = useRouter();\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [searchResults, setSearchResults] = useState<AdvisorDetails[]>([]);\n  const [searchResultsShow, setSearchResultsShow] = useState<AdvisorDetails[]>(\n    []\n  );\n  const theme = useTheme();\n  const [openShare, setOpenShare] = useState(false);\n  const [openFollow, setOpenFollow] = useState(false);\n  const [openAbout, setOpenAbout] = useState(false);\n  const [showMore, setShowMore] = useState(false);\n\n  // 即时搜索逻辑\n  const updateSearchQuery = async (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    const query = event.target.value;\n    setSearchQuery(query);\n\n    // 假设这是调用搜索 API 的函数，返回搜索结果\n    if (query.length > 1) {\n      // 可以设置触发搜索的最小字符数限制\n      const results = await searchAPI(query);\n      setSearchResults(results);\n      setSearchResultsShow(results.slice(0, omit_thres));\n    } else {\n      setSearchResults([]); // 清空结果\n      setSearchResultsShow([]);\n    }\n  };\n\n  // 假设的搜索 API 函数\n  const searchAPI = async (query: string): Promise<AdvisorDetails[]> => {\n    // 这里应该是调用实际的搜索 API\n    // 返回模拟的搜索结果\n    const results = await fuzzySearchAdvisorDetails(query);\n    console.log(\"from API\", results);\n    return results;\n  };\n\n  const handleClick = (id: string) => {\n    router.push(`${id}?view=graph`, undefined, {\n      shallow: true,\n    });\n    // clear query and results\n    setSearchQuery(\"\");\n    setSearchResults([]);\n  };\n\n  const showMoreResults = () => {\n    setShowMore(true);\n  };\n\n  const handleShareClick = () => {\n    setOpenShare(true);\n  };\n  const handleFollowClick = () => {\n    setOpenFollow(true);\n  };\n  const handleAboutClick = () => {\n    setOpenAbout(true);\n  };\n  const handleClose = () => {\n    setOpenShare(false);\n    setOpenFollow(false);\n    setOpenAbout(false);\n    setShowMore(false);\n  };\n\n  const handleClickOnAdvisor = (id: string) => {\n    setShowMore(false);\n    setSearchResults([]);\n    setSearchQuery(\"\");\n    setSearchResultsShow([]);\n    router.push(`${id}?view=graph`, undefined, {\n      shallow: false,\n    });\n  };\n\n  return (\n    <AppBar position=\"static\" sx={{ bgcolor: \"white\", color: \"blue\" }}>\n      <Toolbar>\n        <Typography\n          variant=\"h5\"\n          noWrap\n          sx={{ color: \"blue\", textTransform: \"none\", marginRight: 2 }} // 将 marginRight 添加到这里，使 logo 和搜索框之间有一点空间\n        >\n          <Link href=\"/\"> Connected Advisor </Link>\n        </Typography>\n\n        {/* 搜索栏 */}\n        <Paper\n          sx={{\n            position: \"relative\", // 设置为相对定位，为绝对定位的 Paper 创建上下文\n            display: \"flex\",\n            alignItems: \"center\",\n            flexGrow: 1,\n            marginRight: theme.spacing(5),\n            marginLeft: theme.spacing(5),\n            paddingLeft: theme.spacing(2),\n            borderTopRightRadius: theme.shape.borderRadius * 3,\n            borderTopLeftRadius: theme.shape.borderRadius * 3,\n            borderBottomRightRadius:\n              searchResults.length > 0 ? 0 : theme.shape.borderRadius * 3,\n            borderBottomLeftRadius:\n              searchResults.length > 0 ? 0 : theme.shape.borderRadius * 3,\n          }}\n        >\n          <SearchIcon />\n          <InputBase\n            placeholder=\"Search…\"\n            inputProps={{ \"aria-label\": \"search\" }}\n            value={searchQuery}\n            onChange={updateSearchQuery}\n            onFocus={() => setSearchFocused(true)}\n            onBlur={() => setSearchFocused(false)}\n            sx={{ color: \"blue\", marginLeft: 1, width: \"100%\" }}\n          />\n          {searchResults.length > 0 && (\n            <Paper\n              sx={{\n                position: \"absolute\", // 绝对定位，基于上面的 Box 组件\n                width: \"100%\", // 宽度与搜索框相同\n                top: \"80%\", // 紧贴搜索框下方\n                left: 0,\n                borderTop: \"none\", // 移除上边框以融合搜索框\n                right: 0,\n                elevation: 0, // 提高海拔以显示在顶部\n                zIndex: theme.zIndex.modal, // 确保显示在最上层\n                borderBottomLeftRadius: theme.shape.borderRadius * 3, // 应用底部边框半径以融合搜索框\n                borderBottomRightRadius: theme.shape.borderRadius * 3, // 应用底部边框半径以融合搜索框\n              }}\n            >\n              <List>\n                {searchResultsShow.map((result) => (\n                  <ListItem\n                    key={result._id}\n                    sx={{\n                      \"&:hover\": {\n                        backgroundColor: lightBlue[200],\n                        color: \"white\",\n                      },\n                      cursor: \"pointer\",\n                    }}\n                    onClick={() => handleClick(result._id)}\n                  >\n                    <Stack direction=\"row\" spacing={2} alignItems=\"center\">\n                      <Typography variant=\"subtitle1\" component=\"div\">\n                        {result.name}\n                      </Typography>\n                      <Typography\n                        variant=\"body2\"\n                        color=\"text.secondary\"\n                        component=\"div\"\n                      >\n                        | {result.affiliation} | {result.position}\n                      </Typography>\n                      <Stack direction=\"row\" spacing={1}>\n                        {result.tags.map((tag, index) => (\n                          <Chip\n                            key={index}\n                            label={tag}\n                            size=\"small\"\n                            variant=\"outlined\"\n                          />\n                        ))}\n                      </Stack>\n                    </Stack>\n                  </ListItem>\n                ))}\n                {searchResults.length > omit_thres && (\n                  <ListItem\n                    sx={{\n                      \"&:hover\": {\n                        backgroundColor: lightBlue[300], // Using a darker shade of blue for hover\n                        color: \"white\",\n                      },\n                      cursor: \"pointer\",\n                      color: \"red\",\n                    }}\n                    onClick={showMoreResults}\n                  >\n                    <ListItemText primary=\"Show more results\" />\n                  </ListItem>\n                )}\n              </List>\n            </Paper>\n          )}\n        </Paper>\n        {/* 导航按钮 */}\n        <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\n          <Button\n            sx={{\n              color: \"blue\",\n              textTransform: \"none\",\n              marginRight: 2,\n              fontSize: theme.typography.h6.fontSize,\n              fontFamily: theme.typography.fontFamily,\n              fontWeight: theme.typography.fontWeightRegular,\n            }}\n            onClick={handleShareClick}\n          >\n            Chat\n          </Button>\n\n          <Button\n            sx={{\n              color: \"blue\",\n              textTransform: \"none\",\n              marginRight: 2,\n              fontSize: theme.typography.h6.fontSize,\n              fontFamily: theme.typography.fontFamily,\n              fontWeight: theme.typography.fontWeightRegular,\n            }}\n            onClick={handleShareClick}\n          >\n            Share\n          </Button>\n\n          <Button\n            sx={{\n              color: \"blue\",\n              textTransform: \"none\",\n              marginRight: 2,\n              fontSize: theme.typography.h6.fontSize,\n              fontFamily: theme.typography.fontFamily,\n              fontWeight: theme.typography.fontWeightRegular,\n            }}\n            onClick={handleFollowClick}\n          >\n            Follow\n          </Button>\n\n          <Button\n            sx={{\n              color: \"blue\",\n              textTransform: \"none\",\n              marginRight: 2,\n              fontSize: theme.typography.h6.fontSize,\n              fontFamily: theme.typography.fontFamily,\n              fontWeight: theme.typography.fontWeightRegular,\n            }}\n            onClick={handleAboutClick}\n          >\n            About\n          </Button>\n        </Box>\n\n        {/* 用户图标 */}\n        <IconButton\n          edge=\"end\"\n          aria-label=\"account of current user\"\n          aria-haspopup=\"true\"\n          sx={{ color: \"blue\" }}\n        >\n          <AccountCircle />\n        </IconButton>\n      </Toolbar>\n      {/* 弹窗组件 */}\n      <Dialog\n        fullWidth\n        maxWidth=\"xl\"\n        open={showMore}\n        onClose={handleClose}\n        aria-labelledby=\"share-dialog-title\"\n      >\n        <DialogTitle id=\"share-dialog-title\" sx={{ fontSize: \"1.5rem\" }}>\n          Search Results\n        </DialogTitle>\n        <DialogContent>\n          <SearchTableView\n            advisors={searchResults}\n            handleClickOnAdvisor={handleClickOnAdvisor}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Close</Button>\n        </DialogActions>\n      </Dialog>\n      <Dialog\n        fullWidth\n        maxWidth=\"md\"\n        open={openShare}\n        onClose={handleClose}\n        aria-labelledby=\"share-dialog-title\"\n      >\n        <DialogTitle id=\"share-dialog-title\" sx={{ fontSize: \"1.5rem\" }}>\n          Share Connected Advisors to your friends!\n        </DialogTitle>\n        <DialogContent>\n          <Grid\n            container\n            spacing={2}\n            justifyContent=\"center\"\n            sx={{ mx: \"auto\", width: \"100%\" }} // 确保Grid填满Dialog\n          >\n            <Grid item>\n              <Button\n                startIcon={<WeChatIcon style={{ fontSize: 40 }} />}\n                size=\"large\"\n              >\n                WeChat\n              </Button>\n            </Grid>\n            <Grid item>\n              <Button\n                startIcon={<QQIcon style={{ fontSize: 40 }} />}\n                size=\"large\"\n              >\n                QQ\n              </Button>\n            </Grid>\n            <Grid item>\n              <Button\n                startIcon={<TwitterIcon style={{ fontSize: 40 }} />}\n                size=\"large\"\n              >\n                Twitter\n              </Button>\n            </Grid>\n            <Grid item>\n              <Button\n                startIcon={<LinkIcon style={{ fontSize: 40 }} />}\n                size=\"large\"\n              >\n                Copy Link\n              </Button>\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Close</Button>\n        </DialogActions>\n      </Dialog>\n      <Dialog open={openFollow} onClose={handleClose} fullWidth maxWidth=\"sm\">\n        <DialogTitle id=\"follow-dialog-title\">Follow Us!</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Please follow us at our GitHub to stay updated with the latest news\n            and updates:\n          </DialogContentText>\n          <DialogContentText sx={{ display: \"flex\", justifyContent: \"center\" }}>\n            <a\n              href=\"https://github.com/huskydoge/connected-advisor\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              style={{\n                color: \"blue\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n              }}\n            >\n              https://github.com/huskydoge/connected-advisor\n            </a>\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            color=\"primary\"\n            href=\"https://github.com/huskydoge/connected-advisor\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Visit GitHub\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <Dialog\n        fullWidth\n        maxWidth=\"xl\"\n        open={openAbout}\n        onClose={handleClose}\n        aria-labelledby=\"share-dialog-title\"\n      >\n        <AboutPage />\n      </Dialog>\n    </AppBar>\n  );\n}\n\nexport default TopMenu;\n"
        }
    ]
}