{
    "sourceFile": "src/components/fetches/fetchConnection.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 5,
            "patches": [
                {
                    "date": 1711845807433,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1711845839701,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,5 +17,22 @@\n     }\n   };\n \n \n+  const addOrUpdateConnection = async (connectionData) => {\n+    // TODO make sure it return correct id. If existing, then return existing id\n+    const response = await fetch(\"/api/addConnection\", {\n+      method: \"POST\",\n+      headers: { \"Content-Type\": \"application/json\" },\n+      body: JSON.stringify(connectionData),\n+    });\n+    if (!response.ok) {\n+      console.error(\"Failed to add/update connection\");\n+      return null;\n+    } else {\n+      console.log(\"Connection added/updated successfully\");\n+      const connection_id = (await response.json())._id;\n+      return connection_id;\n+    }\n+  };\n+\n export { fetchConnection };\n\\ No newline at end of file\n"
                },
                {
                    "date": 1711845845882,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n       return null;\n     } else {\n       return existingConnection;\n     }\n-  };\n+};\n \n \n   const addOrUpdateConnection = async (connectionData) => {\n     // TODO make sure it return correct id. If existing, then return existing id\n"
                },
                {
                    "date": 1711846034461,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n       method: \"POST\",\n       headers: { \"Content-Type\": \"application/json\" },\n       body: JSON.stringify({\n         \"id-1\": selectedNameOne?._id,\n-        \"id-2\": ?._id,\n+        \"id-2\": selectedNameTwo?._id,\n       }),\n     });\n     const existingConnection = await response.json();\n     if (!response.ok) {\n"
                },
                {
                    "date": 1711846232355,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,8 +16,23 @@\n     return existingConnection;\n   }\n };\n \n+const fetchConnectionById = async (connection_id) => {\n+    const response = await fetch(\"/api/searchConnectionById\", {\n+        method: \"POST\",\n+        headers: { \"Content-Type\": \"application/json\" },\n+        body: JSON.stringify({ oid: connection_id }),\n+    });\n+    const connection = await response.json();\n+    if (!response.ok) {\n+        console.error(\"Failed to fetch connection by id\");\n+        return null;\n+    } else {\n+        return connection;\n+    }\n+    }\n+\n const addOrUpdateConnection = async (connectionData) => {\n   // TODO make sure it return correct id. If existing, then return existing id\n   const response = await fetch(\"/api/addConnection\", {\n     method: \"POST\",\n"
                },
                {
                    "date": 1711846358266,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n const fetchConnection = async ({ selectedNameOne, selectedNameTwo }) => {\n   console.log(selectedNameOne?._id, selectedNameTwo?._id);\n-  const response = await fetch(\"/api/searchConnection\", {\n+  const response = await fetch(\"/api/fuzzySearchConnection\", {\n     method: \"POST\",\n     headers: { \"Content-Type\": \"application/json\" },\n     body: JSON.stringify({\n       \"id-1\": selectedNameOne?._id,\n"
                }
            ],
            "date": 1711845807433,
            "name": "Commit-0",
            "content": "const fetchConnection = async ({selectedNameOne, selectedNameTwo}) => {\n    console.log(selectedNameOne?._id, selectedNameTwo?._id);\n    const response = await fetch(\"/api/searchConnection\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        \"id-1\": selectedNameOne?._id,\n        \"id-2\": ?._id,\n      }),\n    });\n    const existingConnection = await response.json();\n    if (!response.ok) {\n      console.error(\"Failed to fetch connection\");\n      return null;\n    } else {\n      return existingConnection;\n    }\n  };\n\n\nexport { fetchConnection };"
        }
    ]
}